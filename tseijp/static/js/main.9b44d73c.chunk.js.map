{"version":3,"sources":["src/Walk/Screen.js","src/Walk/Model.js","src/Walk/useActions.js","src/Walk/usePosition.js","src/Logerror.js","src/Walk/Spot.js","src/Walk/Stick.js","src/Walk/Stage.js","src/Walk/index.js","docs/App.js","docs/serviceWorker.js","docs/index.js"],"names":["ScreenElement","React","forwardRef","ref","src","id","join","style","width","height","backgroundColor","transparent","position","pointerEvents","transform","border","Model","scale","spot","stick","group","useRef","useLoader","GLTFLoader","nodes","animations","useState","THREE","mixer","actions","getAnimation","name","isNaN","filter","v","startAction","action","mode","animation","Object","keys","current","forEach","k","key","paused","clipAction","play","setActions","data","start","add","map","useFrame","s","delta","update","useEffect","clip","uncacheClip","useActions","x","y","z","rx","ry","d","set","camera","Math","sin","cos","lookAt","rotation","cam","PI","drx","dry","dx","dz","pre","usePosition","setPosition","clock","htmlScale","useControl","type","value","max","onChange","timeScale","weight","dispose","object","geometry","skeleton","attach","color","depthWrite","skinning","prepend","center","scaleFactor","Component","Spot","size","limit","bind","useDrag","down","movement","mx","my","Stick","setStick","immediate","level","userSelect","boxShadow","borderRadius","bottom","left","Plane","props","receiveShadow","args","opacity","Points","amp","distance","min","dist","time","amount","material","uniforms","scales","Float32Array","positions","i","j","ix","iy","setAttribute","attributes","needsUpdate","t","array","vertexShader","fragmentShader","Stage","Walk","Fragment","concurrent","top","onCreated","gl","scene","background","setPath","load","skyColor","groundColor","intensity","castShadow","fallback","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9b44d73c.chunk.js","sourcesContent":["//https://github.com/mrdoob/three.js/blob/master/examples/css3d_youtube.html#L60\r\nimport * as THREE from 'three';\r\nimport React, { useEffect, useRef,  } from \"react\"\r\nimport { useLoader, useFrame, useThree, Dom } from \"react-three-fiber\"\r\nimport { useControl } from 'react-three-gui';\r\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer'\r\n\r\nfunction ScreenObject({ el, position=[0,0,0], rotation=[0,0,0] }) {\r\n    const { scene } = useThree()\r\n    const ref = useRef(null)\r\n    useEffect(() => {\r\n        if (!el)\r\n            return\r\n        console.log(el.current);\r\n        const geometry = new THREE.BoxGeometry( 5, 5, 5 )\r\n        const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\r\n        ref.current = new /*THREE.Mesh(geometry,material)*/CSS3DObject(el.current)\r\n        console.log(ref.current);\r\n        ref.current.position.set(...position)\r\n        ref.current.rotation.set(...rotation)\r\n        scene.add(ref.current)\r\n        console.log(ref.current.element);\r\n        return () => scene.remove(ref.current)\r\n    }, [el, scene])\r\n    return null\r\n}\r\n\r\n//<div style=\"position: absolute; pointer-events: auto; transform: translate(-50%, -50%) matrix3d(0.99995, 9.99967e-05, -0.00999933, 0, 0, -0.99995, -0.00999983, 0, 0.00999983, -0.00999933, 0.9999, 0, 0, 0, 0, 1);\">hello</div>\r\nconst Screen = ({els, position=[0,0,0], scale=[1,1,1]}) => {\r\n    return (\r\n        <group {...{position, scale}}>\r\n            <Dom style={{width:\"1000px\", backgroundColor:\"red\"}}>Hello</Dom>\r\n        </group>\r\n    )\r\n}\r\n\r\nconst ScreenElement = React.forwardRef(({id}, ref) => {\r\n    const src = [ 'https://www.youtube.com/embed/', id, '?rel=0&autoplay=1&mute=1' ].join( '' );\r\n    //return <div ref={ref} style={{backgroundColor:\"red\",color:0xffffff}}>Hello</div>\r\n    return (\r\n        <div ref={ref} style={{width:\"480px\", height:\"360px\",backgroundColor:\"rgba(0,0,0,0)\",transparent:false,\r\n            position:\"absolute\", pointerEvents:\"auto\",transform:\"translate(-50%, 0%)\"}}>\r\n            <iframe src={src} style={{width:\"480px\", height:\"360px\",border:\"0px\"}} />\r\n        </div>\r\n    )\r\n})\r\n\r\nexport {Screen, ScreenElement, ScreenObject}\r\n/*\r\n<Portal>\r\n    <ScreenElement ref={ref1} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref2} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref3} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref4} id=\"SJOz3qjfQXU\" />\r\n</Portal>\r\n*/\r\n/*\r\n<div style={{width:\"480px\", height:\"360px\",backgroundColor:\"rgba(0,0,0,0)\",transparent:false,\r\n    position:\"absolute\", pointerEvents:\"auto\",}}>\r\n    <iframe src={[ 'https://www.youtube.com/embed/', 'SJOz3qjfQXU', '?rel=0' ].join( '' )}\r\n     style={{width:\"480px\", height:\"360px\",border:\"0px\"}} />\r\n</div>\r\n\r\n    */\r\n\r\n/*\r\nconst ref1 = useRef(null)\r\nconst ref2 = useRef(null)\r\nconst ref3 = useRef(null)\r\nconst ref4 = useRef(null)\r\n\r\n\r\n<Canvas>\r\n    <Screen els={[ref1,ref2,ref3,ref4]} position={[0,10,0]}/>\r\n</Canvas>\r\n<Portal>\r\n    <ScreenElement ref={ref1} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref2} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref3} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref4} id=\"SJOz3qjfQXU\" />\r\n</Portal>\r\n\r\n*/\r\n","// Auto-generated by https://github.com/react-spring/gltfjsx\r\n\r\n//import * as THREE from \"three\"\r\nimport React, { useEffect, useRef,  } from \"react\"\r\nimport { useLoader, useFrame } from \"react-three-fiber\"\r\nimport { useControl } from 'react-three-gui';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\n\r\nimport {useActions} from './useActions'\r\nimport {usePosition} from './usePosition'\r\n\r\nimport {Screen, ScreenElement, ScreenObject} from './Screen'\r\nimport { HTML } from \"drei\"\r\n\r\nconst Model = ({scale,spot,stick}) => {\r\n    const group = useRef()\r\n    const { nodes, animations } = useLoader(GLTFLoader, \"https://tseijp-static.s3.ap-northeast-1.amazonaws.com/Xbot.glb\")\r\n    const [actions, setActions] = useActions(animations, group)\r\n    const [position, setPosition] = usePosition(group)\r\n    const xypad = {type:\"xypad\",scrub:true,distance:5}\r\n    //const modelPos  = useControl('model' ,{...xypad,value:{x:0,y:0} ,state:[position,setPosition([0,-11,0]),\"pos\"]})\r\n    //const cameraPos = useControl('camera',{...xypad,value:{x:0,y:18},state:[position,setPosition([0,-11,0],\"cam\")]})\r\n    useFrame(({clock,camera}, delta)=>{\r\n        setPosition({...stick.current, ...spot.current, cam:camera.rotation.y})\r\n        setActions ({start:position.d>0.5?'run':(position.d>0.1?'walk':'agree')})\r\n    })\r\n    const htmlScale = useControl('HTML'  ,{type:\"number\",value:100,max:200})\r\n    useControl('Time'  ,{type:\"number\",value:1 ,max:2,onChange:v=>setActions({timeScale:v})})\r\n    useControl('Weight',{type:\"number\",value:1 ,max:2,onChange:v=>setActions({weight   :v})})\r\n    if (!nodes) return\r\n    return (\r\n        <group ref={group} scale={[7,7,7]} dispose={null}>\r\n          <group rotation={[Math.PI/2,0,Math.PI]} scale={[0.01, 0.01, 0.01]}>\r\n            <primitive object={nodes[\"mixamorigHips\"]} />\r\n            <skinnedMesh geometry={nodes[\"Beta_Joints\"].geometry}\r\n                skeleton={nodes[\"Beta_Joints\"].skeleton}\r\n                rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>\r\n                <meshPhongMaterial attach=\"material\" color={0x997777} depthWrite={false} skinning />\r\n            </skinnedMesh>\r\n            <skinnedMesh geometry={nodes[\"Beta_Surface\"].geometry}\r\n                skeleton={nodes[\"Beta_Surface\"].skeleton}\r\n                rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>\r\n                <meshPhongMaterial attach=\"material\" color={0x996666} depthWrite={false} skinning />\r\n            </skinnedMesh>\r\n            <HTML prepend center scaleFactor={htmlScale}>\r\n                <ScreenElement ref={null} id=\"EEIk7gwjgIM\"/>\r\n            </HTML>\r\n          </group>\r\n        </group>\r\n    )\r\n}\r\nexport default Model;\r\n","import * as THREE from \"three\"\r\nimport { useRef,useState, useEffect, useCallback} from 'react';\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nconst useActions = (animations, group=null) => {\r\n    const [mixer] = useState(() => new THREE.AnimationMixer())\r\n    const actions = useRef({})\r\n    const getAnimation = (name) => ( isNaN(name)\r\n          ? animations.filter(v=>v.name===name)[0]\r\n          : animations[name]\r\n    )\r\n    const startAction = (action, mode=\"add\") => {\r\n        const animation = getAnimation(action)\r\n        if (!animation) return Object.keys(actions.current).forEach(k=>{})\r\n        if (mode===\"start\") {\r\n            const keys = Object.keys(actions.current).filter(k=>k!==animation.name)\r\n            keys.forEach(key=>{\r\n                actions.current[key].paused = true\r\n            })\r\n            if (actions.current[animation.name])\r\n                return actions.current[animation.name].paused = false\r\n        }\r\n        if (actions.current[animation.name])\r\n            return actions.current[animation.name].paused = !actions.current[animation.name].paused\r\n        actions.current[animation.name] = mixer.clipAction(animation, group.current)\r\n        actions.current[animation.name].play()\r\n    }\r\n    const setActions = (data)=>{\r\n        if (data.start)\r\n            startAction(data.start,'start')\r\n        if (data.add)\r\n            startAction(data.add, \"add\")\r\n        Object.keys(data).filter(k=>k!==\"start\"&&k!==\"stop\").map(key=>{\r\n            Object.keys(actions.current).map(action=>{\r\n                actions.current[action][key] = data[key]\r\n            })\r\n        })\r\n    }\r\n    useFrame((s,delta)=>mixer.update(delta))\r\n    useEffect(() => {\r\n        return () => animations.forEach(clip => mixer.uncacheClip(clip))\r\n    }, [mixer, animations])\r\n    return [actions, setActions]\r\n}\r\nexport {useActions};\r\n","import * as THREE from \"three\"\r\nimport {useState} from \"react\"\r\nimport {useFrame} from \"react-three-fiber\"\r\nimport {useSpring} from 'react-spring'\r\nimport {useDrag} from 'react-use-gesture'\r\n\r\nconst usePosition = (group) => {\r\n    //const {size} = useThree()\r\n    const [position, set] = useState({x:0,y:0,z:0,rx:0,ry:0,d:0})\r\n    //useEffect(()=>{})\r\n    const setPosition = ({x=0,y=0,z=0,rx=0,ry=0,cam=0}) => {\r\n        const d = x**2 + y**2\r\n        const rate = cam % (Math.PI) / (Math.PI/2) - 1\r\n        const cos = Math.cos(position.rx)\r\n        const sin = Math.sin(position.rx)\r\n        const dy = 0, drx = rx*0.01, dry =-ry*0.2\r\n        const dx = x*cos + y*sin//, drx = rx * cos\r\n        const dz =-y*sin + y*cos//, drz = rx * sin\r\n        set(pre=>({  x:pre.x +dx,  y:pre.y + dy,  z:pre.z + dz,\r\n                    rx:pre.rx+drx,ry:pre.ry+dry,  d, }) )\r\n    }\r\n    useFrame(({camera}) => {\r\n        camera.position.x = position.x + 18 * Math.sin(position.rx)\r\n        camera.position.y = position.y +  8 + position.ry\r\n        camera.position.z = position.z + 18 * Math.cos(position.rx)\r\n        camera.lookAt(new THREE.Vector3(position.x, position.y+10, position.z))\r\n        group.current.position.x = position.x\r\n        group.current.position.y = position.y\r\n        group.current.position.z = position.z\r\n        group.current.rotation.y+= (position.rx-group.current.rotation.y)/10\r\n    })\r\n    return [position, setPosition]\r\n}\r\nexport {usePosition};\r\n","import React from 'react';\r\nexport default class Logerror extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    throw(error);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n        console.log(\"error!\");\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useDrag } from 'react-use-gesture'\r\nconst Spot = React.forwardRef(({size=100,limit=100},ref) => {\r\n    const bind = useDrag(({ down, movement: [mx, my] }) => {\r\n        const rx = (down? mx:0)/limit\r\n        const ry = (down? my:0)/limit\r\n        ref.current = {rx,ry}\r\n    })\r\n    useEffect(()=>(ref.current = {x:0,y:0}),[])\r\n    const style = {\r\n        width :\"100%\",\r\n        height:\"100%\",\r\n        position:\"fixed\",}\r\n    return  <div style={style} {...bind()}/>\r\n})\r\n\r\nexport default Spot;\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useSpring } from 'react-spring'\r\nimport { useDrag } from 'react-use-gesture'\r\nconst Stick = React.forwardRef(({size=100,limit=100},ref) => {\r\n    const [stick, setStick] = useState({ x:0, y:0, scale:1 })\r\n    const bind = useDrag(({ down, movement: [x, y] }) => {\r\n        if (x*x+y*y > limit*limit)\r\n            return\r\n        setStick({x:down?x:0, y:down?y:0, scale:down?1.2:1, immediate:down})\r\n        ref.current = {x:(down?x:0)/limit, y:(down?y:0)/limit}\r\n    })\r\n    useEffect(()=>(ref.current = {x:0,y:0}),[])\r\n    const position = {x:limit*1.5, y:limit*1.5}\r\n    const level = (stick.x<0?-stick.x:stick.x)/limit + (stick.y<0?-stick.y:stick.y)/limit\r\n    const style = {\r\n        userSelect:\"none\",\r\n        width :size*stick.scale+\"px\",\r\n        height:size*stick.scale+\"px\",\r\n        boxShadow:`rgba(0,0,0,${level})`,\r\n        backgroundColor:`rgba(255,255,255,${0.1+level/10})`,\r\n        transform:\"translate(-50%, 50%)\",\r\n        position:\"fixed\",borderRadius:100+\"px\",\r\n        bottom:position.x-stick.y +\"px\",\r\n        left  :position.y+stick.x+\"px\" }\r\n    return  <div style={style} {...bind()} />\r\n})\r\n\r\nexport default Stick;\r\n","import * as THREE from \"three\"\r\nimport React, { useEffect, useState, useRef, useMemo } from \"react\"\r\nimport { useLoader, useFrame } from \"react-three-fiber\"\r\nimport { useControl } from 'react-three-gui';\r\n\r\nfunction Plane({ ...props }) {\r\n  return (\r\n    <mesh {...props} receiveShadow>\r\n      <planeGeometry attach=\"geometry\" args={[5000, 5000, 1, 1]} />\r\n      <meshLambertMaterial attach=\"material\" color=\"#232323\" transparent opacity={0.1} />\r\n    </mesh>\r\n  )\r\n}\r\nconst vertexShader = `\r\nattribute float scale;\r\nvoid main() {\r\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n    gl_PointSize = scale * ( 300.0 / - mvPosition.z ) * 0.1;\r\n    gl_Position = projectionMatrix * mvPosition;\r\n}`\r\n\r\nconst fragmentShader = `\r\nuniform vec3 color;\r\nvoid main() {\r\n    if ( length( gl_PointCoord - vec2( 0.5, 0.5 ) ) > 0.475 ) discard;\r\n    gl_FragColor = vec4( color, 1.0 );\r\n}`\r\n\r\nconst Points = ({position, rotation, scale}) => {\r\n    const amp    = useControl('amp'   ,{type:'number', distance:5   ,min:1,value:100 ,max:200 ,})\r\n    const dist   = useControl('dist'  ,{type:'number', distance:5   ,min:1,value:1000,max:2000,})\r\n    const time   = useControl('time'  ,{type:'number', distance:0.01,min:0,value:1,max:2,})\r\n    const amount = {x:50,y:50}//useControl('amount',{type:\"xypad\" ,distance:5, value:{x:50,y:50} ,scrub:true})\r\n    const geometry  = useRef()\r\n    const material  = useRef()\r\n    //const [attributes, setAttributes] = useState(null)\r\n    const uniforms = {color:{value:new THREE.Color(0xffffff)}}\r\n    useEffect(() => {\r\n        const scales    = new Float32Array(amount.x*amount.y)\r\n        const positions = new Float32Array(amount.x*amount.y*3)\r\n        var i = 0, j = 0;\r\n        for ( var ix = 0; ix < amount.x; ix ++ ) {\r\n            for ( var iy = 0; iy < amount.y; iy ++ ) {\r\n                positions[ i ] = ix * dist - ( ( amount.x * dist ) / 2 ); // x\r\n                positions[ i + 1 ] = 0; // y\r\n                positions[ i + 2 ] = iy * dist - ( ( amount.y * dist ) / 2 ); // z\r\n                scales   [ j ] = 1;\r\n                i += 3;\r\n                j ++;\r\n            }\r\n        }\r\n        geometry.current.setAttribute('scale'   ,new THREE.BufferAttribute(scales   , 1))\r\n        geometry.current.setAttribute('position',new THREE.BufferAttribute(positions, 3))\r\n    }, [dist, amount])\r\n    const delta = useRef(0)\r\n    useFrame (({})=> {\r\n        var i = 0, j = 0;\r\n        geometry.current.attributes.scale.needsUpdate = true\r\n        geometry.current.attributes.position.needsUpdate = true\r\n        for ( var ix = 0; ix < amount.x; ix ++ ) {\r\n            for ( var iy = 0; iy < amount.y; iy ++ ) {\r\n                const t = delta.current// * time;\r\n                geometry.current.attributes.position.array[i+1] = (Math.sin( (ix+t)*0.3 )*amp)  + (Math.sin( (iy+t)*0.5 )*amp);\r\n                geometry.current.attributes.scale.array   [j]   = (Math.sin( (ix+t)*0.3 )+ 1)*8 + (Math.sin( (iy+t)*0.5 )+ 1)*8;\r\n                i += 3; j ++;\r\n                delta.current += 0.0001 * time\r\n            }\r\n        }\r\n        geometry.current.attributes.scale.needsUpdate = true\r\n        geometry.current.attributes.position.needsUpdate = true\r\n    })\r\n    return (\r\n        <points {...{position, rotation, scale}}>\r\n            <bufferGeometry ref={geometry} attach=\"geometry\"/>\r\n            <shaderMaterial ref={material} attach=\"material\" args={[{uniforms,vertexShader,fragmentShader}]} />\r\n        </points>\r\n    )\r\n}\r\nconst Stage = () => (\r\n    <>\r\n        <Points rotation={[0, 0, 0]} position={[0, -11, 0]} scale={[0.1,0.1,0.1]} />\r\n        <Plane  rotation={[-0.5*Math.PI, 0, 0]} position={[0, -11, 0]} />\r\n    </>\r\n)\r\nexport default Stage\r\n","import React, { Suspense, useRef, createRef} from \"react\"\r\nimport ReactDOM from 'react-dom';\r\nimport * as THREE from 'three';\r\nimport { Canvas, Dom } from \"react-three-fiber\"\r\nimport { Controls } from 'react-three-gui';\r\nimport { HTML, Stats } from \"drei\"\r\nimport Model from \"./Model\"\r\n//import { getMousePos } from \"./utils\"\r\n//import \"./styles.css\"\r\nimport Logerror from '../Logerror';\r\nimport Spot from './Spot'\r\nimport Stick from './Stick'\r\nimport Stage from './Stage'\r\n\r\nfunction Portal({ children }) {\r\n    const root = React.useMemo(() => document.createElement('div'), [])\r\n    return ReactDOM.createPortal(<React.Fragment>{children}</React.Fragment>, root)\r\n}\r\n\r\nconst App = (props) => {\r\n    const spot = useRef()\r\n    const stick = useRef()\r\n    const ref1 = useRef(null)\r\n    const ref2 = useRef(null)\r\n    const ref3 = useRef(null)\r\n    const ref4 = useRef(null)\r\n    const assetPath = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/2666677/';\r\n    //pixelRatio={window.devicePixelRatio} shadowMap\r\n    return (\r\n        <React.Fragment>\r\n            <Canvas concurrent\r\n                style={{position:\"fixed\",width:\"100%\",height:\"100%\",top:0,left:0}}\r\n                onCreated={({ gl, scene }) => {\r\n                    scene.background = new THREE.CubeTextureLoader()\r\n                        .setPath(`${assetPath}skybox1_`)\r\n                        .load(['px.jpg','nx.jpg','py.jpg','ny.jpg','pz.jpg','nz.jpg'])\r\n                    //gl.toneMapping = THREE.Uncharted2ToneMapping\r\n                    //gl.setClearColor(new THREE.Color('#070810'))\r\n                }}>\r\n                <hemisphereLight skyColor=\"black\" groundColor={0xffffff} intensity={0.68} position={[0, 50, 0]} />\r\n                <directionalLight  position={[-8, 12, 8]} castShadow />\r\n                <axesHelper position={[0, 0, 0]} scale={[7,7,7]}/>\r\n                <Suspense fallback={null}>\r\n                    <Model spot={spot} stick={stick} scale={[7, 7, 7]} />\r\n                </Suspense>\r\n                <Stage />\r\n                <Stats />\r\n            </Canvas>\r\n            <Spot  ref={spot}/>\r\n            <Stick ref={stick}/>\r\n            <Controls />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default App;\r\n","import React from 'react';\r\n//import {MDBRow, MDBCol,MDBContainer} from 'mdbreact';\r\nimport {Walk} from '../src'\r\nexport default Walk\r\n/*\r\nconst App = (props) => {\r\n    return (\r\n        <Walk />\r\n    )\r\n}\r\nexport default App;\r\n*/\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root') );\nserviceWorker.unregister();\n"],"sourceRoot":""}