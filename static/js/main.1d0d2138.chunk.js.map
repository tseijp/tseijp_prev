{"version":3,"sources":["docs/serviceWorker.ts","docs/Demo.tsx","docs/index.tsx","src/components/Root.tsx","src/components/Text.tsx","src/components/Paragraph.tsx","src/components/Blockquote/Grid.tsx","src/components/Blockquote/index.tsx","src/components/Delete.tsx","src/components/Link/Button.tsx","src/components/Link/index.tsx","src/components/Image/Image.tsx","src/components/Image/index.tsx","src/components/Table/Cards.tsx","src/components/Table/Tables.tsx","src/components/Table/Pills.tsx","src/components/Table/Modal.tsx","src/components/Table/index.tsx","src/components/List/ListGroup.tsx","src/components/List/Navi.tsx","src/components/List/Foot.tsx","src/components/List/Drop.tsx","src/components/List/index.tsx","src/components/ListItem.tsx","src/components/Heading.tsx","src/components/Code/Code.tsx","src/components/InlineCode.tsx","src/components/Math.tsx","src/components/InlineMath.tsx","src/Mdmd.tsx","src/utils.ts","src/index.ts","docs/pages/About.md","docs/pages/Basic.md","docs/pages/Component.md","docs/pages/Container.md","docs/pages/Content.md","docs/pages/Grid.md","docs/pages/Help.md","docs/pages/How.md","docs/pages/Test.md"],"names":["Boolean","window","location","hostname","match","pagesKey","Object","keys","Pages","Root","props","style","backgroundImage","backgroundColor","backgroundPosition","backgroundSize","filter","children","Modal","setColor","page","setPage","isOpen","setIsOpen","toggle","fullHeight","position","map","color","i","key","onClick","p","replace","Demo","leftRef","useRef","aceEditorRef","separatorXRef","useGrid","md","lg","fontSize","useState","useEffect","fetch","then","res","text","setAceValue","setSource","source","aceValue","isChanged","setIsChanged","interval","setInterval","clearInterval","width","setWidth","current","clientWidth","setTimeout","editor","resize","separatorMouseMove","useCallback","e","newwidth","clientX","styles","useMemo","height","bottom","borderRadius","transition","padding","transform","WIDTH","left","right","iconStyle","textAlign","top","sepaStyle","display","stateMdmd","renderers","root","stateAce","value","onChange","ref","editorProps","$blockScrolling","name","mode","theme","onMouseDown","onMouseMove","onMouseUp","flexDirection","overflow","Mdmd","innerWidth","icon","defaultProps","path","RootCustom","App","exact","styleRoot","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","Text","className","Paragraph","Grid","grid","renderGrid","arr","Array","every","c","isBlock","length","Blockquote","getGrid","some","blockquote","tag","mb","Delete","colors","Button","level","href","isOpened","setIsOpened","state","outline","hoverText","slice","domElement","placement","Link","social","getLevel","open","ImageView","src","alt","hover","overlay","Image","Cards","columns","rows","argments","cards","column","row","argment","toHead","r","join","margin","boxShadow","Animation","reveal","type","chart","charAt","toUpperCase","getType","card","label","waves","j","Tables","maxHeight","bordered","paging","searching","scrollX","scrollY","striped","small","data","tableState","Pills","isPill","tab","setTab","border","link","to","active","num","preventDefault","togglePills","l","activeItem","tabId","modalNum","setModalNum","inline","noClickableBodyWithoutBackdrop","overflowScroll","Table","columnAlignment","undefined","heads","getarr","v","bodys","gettrs","h","getths","th","getcol","b","getrow","getkey","getIsX","indexProps","ListGroup","Navi","Children","toArray","toggleCollapse","expand","fixed","dark","scrolling","transparent","getLink","getText","id","navbar","getArray","_","Foot","maxWidth","marginLeft","marginRight","fluid","Drop","caret","basic","List","getAnyCh","getAnyGr","ListItem","Heading","Tag","Code","language","onDoubleClick","clipboard","writeText","customStyle","verticalAlign","atomOneDark","atomOneLight","PreTag","useInlineStyles","showLineNumbers","InlineCode","MathJax","require","Math","Node","formula","InlineMath","renderersKey","Renderers","React","forwardRef","nowSource","String","options","assign","Renderer","toLowerCase","els","concat","el","field","sort","k","g","n","depth","child","module","exports"],"mappings":"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","file":"static/js/main.1d0d2138.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Fragment,useRef,useState,useEffect,useCallback,useMemo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AceEditor from 'react-ace';\r\nimport {\r\n    MDBContainer, MDBFreeBird, MDBEdgeHeader, MDBIcon, MDBBtn,\r\n    MDBModal, MDBModalBody, MDBModalHeader, /*MDBModalFooter*/} from \"mdbreact\";\r\nimport {useGrid} from 'use-grid'\r\nimport {Mdmd, buttonColor} from \"../src\"; //develop&test\r\nimport * as Pages from './pages';\r\nimport \"ace-builds/src-noconflict/mode-markdown\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nconst INITIALDOCSPAGE = \"Grid\";\r\nconst pagesKey  = Object.keys(Pages);\r\nconst WIDTH = 15;\r\n/*---------- context ----------*/\r\n\r\nconst Root = (props:any) => { //customize node for Mdmd.props.renderers\r\n    const style = {\r\n        backgroundImage:\"url('https://mdbootstrap.com/wp-content/uploads/2016/12/big-bundle1.jpg')\",\r\n        backgroundColor:\"#123456\", backgroundPosition:\"center center\", backgroundSize:\"cover\",\r\n        filter:\"blur(3px) opacity(.3) drop-shadow(5px -25px 50px black) hue-rotate(-90deg) \",}\r\n    return (\r\n        <main>\r\n            <MDBEdgeHeader style={style} />\r\n            <MDBFreeBird>\r\n                <MDBContainer {...props}>\r\n                    {props.children}\r\n                </MDBContainer>\r\n            </MDBFreeBird>\r\n        </main>\r\n    )\r\n}\r\nconst Modal = (props:any) => {\r\n    const {setColor,page,setPage,isOpen,setIsOpen,} = props;\r\n    const colors = [\"danger\",\"warning\",\"success\",\"info\",\"default\",\"primary\",\r\n                    \"secondary\",\"elegant\",\"stylish\",\"unique\",\"special\",];\r\n    return (\r\n        <MDBModal isOpen={isOpen} toggle={()=>setIsOpen(false)} fullHeight position=\"right\">\r\n            <MDBModalHeader toggle={()=>setIsOpen(false)}>MDMD Setting</MDBModalHeader>\r\n            <MDBModalBody>\r\n                    <h3>Color</h3>\r\n                    <Fragment>\r\n                        {colors.map((color,i)=>\r\n                            <MDBBtn key={i} color={color as buttonColor}\r\n                            onClick={()=>setColor(color+\"-color\")}>{color}</MDBBtn>)}\r\n                    </Fragment>\r\n                    <h3>Pages</h3>\r\n                    <Fragment>\r\n                        {pagesKey.map((p,i)=>\r\n                            <MDBBtn key={i} color={page===p?props.color.replace(\"-color\",\"\"):null}\r\n                                onClick={()=>setPage(p)}>{p}</MDBBtn>)}\r\n                    </Fragment>\r\n            </MDBModalBody>\r\n        </MDBModal>\r\n    )\r\n}\r\nexport const Demo = (props:any) => {\r\n    /******************** for mdmd props ********************/\r\n    const leftRef = useRef<React.LegacyRef<HTMLDivElement>>();//createRef\r\n    const aceEditorRef = useRef(null);\r\n    const separatorXRef = useRef(null);\r\n    const [fontSize] = useGrid({md:50, lg:75})\r\n    const [page, setPage] = useState(INITIALDOCSPAGE);\r\n    const [color, setColor] = useState(props.color);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    /******************** for docs pages ********************/\r\n    useEffect(()=>{\r\n        fetch(Pages[page]).then(res=>res.text()).then(res=>{\r\n            setAceValue(res);\r\n            setSource(res);\r\n        });\r\n    }, [page])\r\n    /******************** for should update ********************/\r\n    const [source, setSource] = useState(props.source);//for Mdmd props.source\r\n    const [aceValue, setAceValue] = useState(props.source);\r\n    const [isChanged, setIsChanged] = useState(false);\r\n    useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            if (isChanged) {\r\n                setIsChanged(false)\r\n                setSource(aceValue)\r\n            }\r\n        },1000);\r\n        return ()=>clearInterval(interval);\r\n    })\r\n    /******************** for split window ********************/\r\n    const [width, setWidth] = useState(WIDTH);\r\n    useEffect(() => {\r\n        if (!width)\r\n            return setWidth(leftRef.current.clientWidth);\r\n        leftRef.current.style.width = `${width}px`;\r\n        setTimeout(()=>\r\n            aceEditorRef.current && aceEditorRef.current.editor.resize()\r\n        ,1000)\r\n    }, [width, leftRef]);\r\n    const separatorMouseMove =useCallback(e=>{\r\n        if (!separatorXRef.current)\r\n            return;\r\n        const newwidth = width+e.clientX-separatorXRef.current;\r\n        separatorXRef.current = e.clientX;\r\n        setWidth(newwidth);\r\n    }, [width] )\r\n    /******************** styles ********************/\r\n    const styles = useMemo<React.CSSProperties[]>(() => ([\r\n      { width:fontSize,height:fontSize,bottom:fontSize/4,borderRadius:fontSize,\r\n        transition:\"0.75s\",position:\"fixed\",padding:0,fontSize },\r\n      { transform:`rotate(${width<WIDTH*2?\"-18\":\"\"}0deg)`,left:width+fontSize*(width<WIDTH*2?1/4:-2) },\r\n      { transform:`rotate(${isOpen?\"90\":\"0\"}deg)`,right:fontSize/4 },\r\n    ]),[isOpen, width, fontSize])\r\n    const iconStyle = useMemo(()=>({\r\n        position:\"absolute\",textAlign:\"center\",top:0,bottom:0,left:0,right:0\r\n    }), [])\r\n    const sepaStyle = useMemo(()=>({\r\n        transition:\"0.75s\",display:\"table-cell\",backgroundColor:\"#E8E8E8\",width:WIDTH+\"px\"\r\n    }), [])\r\n    /******************** peformance tuning ********************/\r\n    const stateMdmd = useMemo(()=>({color, renderers:{root:Root}}), [color]);\r\n    const stateAce = useMemo(()=>({\r\n        value:aceValue,onChange:(value:any)=>{setAceValue(value);setIsChanged(true)},\r\n        width:\"100%\",ref:aceEditorRef,editorProps:{$blockScrolling:false},\r\n        height:\"100%\",name:\"UNIQUE_ID_OF_DIV\",mode:\"markdown\",theme:\"github\",\r\n    }),[aceValue]);\r\n    const onMouseDown = useCallback(e=>{separatorXRef.current=e.clientX},[])\r\n    const onMouseMove = useCallback(e=>separatorMouseMove(e), [separatorMouseMove])\r\n    const onMouseUp   = useCallback(()=>{separatorXRef.current=null}, [])\r\n    /******************** render ********************/\r\n    return (\r\n        <div {...{onMouseMove,onMouseUp}} style={{display:\"table\",width:\"100%\",flexDirection:\"column\"}}>\r\n            <div ref={leftRef} style={{transition:\".5s\",display:\"table-cell\",overflow:\"hidden\"}}>\r\n                <MDBContainer  style={{transition:\".75s\",position:\"fixed\",padding:0,width,height:\"100%\"}}>\r\n                    {useMemo(()=><AceEditor {...stateAce}/>,[stateAce])}\r\n                </MDBContainer>\r\n            </div>\r\n            { useMemo(()=><>\r\n            <div {...{onMouseDown}} style={sepaStyle}/>\r\n            <div {...{onMouseDown}} style={{width:\"auto\",overflow:\"hidden\"}}>\r\n                <Mdmd source={source} {...stateMdmd}/>\r\n            </div>\r\n            </>,[onMouseDown,sepaStyle,source,stateMdmd]) }\r\n            <MDBBtn style={{...styles[0],...styles[1]}}\r\n                color={color.replace('-color','')}\r\n                onClick={()=>setWidth(width<WIDTH*2?window.innerWidth/3:WIDTH)}>\r\n                { useMemo(()=><MDBIcon icon=\"angle-left\" style={iconStyle}/>,[iconStyle]) }\r\n            </MDBBtn>\r\n            <MDBBtn style={{...styles[0],...styles[2]}}\r\n                color={color.replace('-color','')}\r\n                onClick={()=>setIsOpen(!isOpen)}>\r\n                { useMemo(()=><MDBIcon icon=\"ellipsis-v\" style={iconStyle}/>,[iconStyle]) }\r\n            </MDBBtn>\r\n            { useMemo(()=>\r\n                <Modal {...{color,setColor,page,setPage,isOpen,setIsOpen}}/>\r\n            ,[color,setColor,page,setPage,isOpen,setIsOpen]) }\r\n        </div>\r\n    )\r\n}\r\n\r\nDemo.propTypes = {\r\n    /*----------main----------*/\r\n    source   :PropTypes.string,\r\n    renderers:PropTypes.object,\r\n    /*----------sub----------*/\r\n    className :PropTypes.string,\r\n    color     :PropTypes.string,\r\n    style     :PropTypes.object,\r\n};\r\n\r\nDemo.defaultProps = {\r\n    /*----------main----------*/\r\n    path     :null,\r\n    color    :'elegant',\r\n    source   :''  ,\r\n};\r\n\r\nexport default Demo;\r\n","import React, {useMemo} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport {MDBEdgeHeader,MDBFreeBird,MDBContainer} from 'mdbreact';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Mdmd from \"../src\";  //develop&test\r\nimport {Demo} from './Demo';\r\nimport * as Pages from './pages';\r\n\r\n// MDBReact:Import style files into the src/index.js before the App.js file:\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nconst RootCustom = (props:any) => {\r\n    const style = useMemo(()=>({\r\n        backgroundImage:\"url('https://mdbootstrap.com/wp-content/uploads/2016/12/big-bundle1.jpg')\",\r\n        backgroundColor:\"#123456\",\r\n        backgroundPosition:\"center center\",\r\n        backgroundSize:\"cover\",\r\n        filter:\"blur(3px) opacity(.3) drop-shadow(5px -25px 50px blue) hue-rotate(-90deg) \",\r\n    }),[])\r\n    return (\r\n        <main>\r\n            <MDBEdgeHeader style={style} />\r\n            <MDBFreeBird>\r\n                <MDBContainer {...props}>\r\n                    {props.children}\r\n                </MDBContainer>\r\n            </MDBFreeBird>\r\n        </main>\r\n    )\r\n}\r\nexport const App =()=> (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            { Object.keys(Pages).map((key)=>\r\n                <Route key={key} exact path={'/mdmd/'+key}>\r\n                    <Mdmd md={Pages[key]}\r\n                        styleRoot={{padding:\"500px\"}}\r\n                        renderers={{root: RootCustom}} />\r\n                </Route>\r\n            ) }\r\n            <Route component={Demo}/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {MDBContainer} from 'mdbreact';\r\nexport const Root:FC<BaseProps> = ({\r\n        children, style={padding:\"0 0 0 0\"}, ...props\r\n}) => {\r\n    return <MDBContainer style={style} {...props}>{children}</MDBContainer>;\r\n};\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\n\r\nexport const Text:FC<BaseProps> = ({\r\n        children, className='', color='', style={}\r\n    }) => {\r\n    className = (color?`${color}-text `:'') + className\r\n    return <span {...{children, className, color, style}} />\r\n};\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\n\r\nexport const Paragraph:FC<BaseProps> = ({\r\n        children, className='', color='', style={padding:\"0 25px 0 25px\"},\r\n    }) => {\r\n    return <div {...{className,color,style}}>{children}</div>;\r\n};\r\n","import React, {FC, useCallback, useMemo} from 'react';\r\nimport {MDBCol, MDBRow} from 'mdbreact';\r\n//import {BaseProps} from '../../types'\r\n\r\nexport const Grid:FC<any> = ({grid=null}) => {\r\n    const isBlock =(c:any)=> 0\r\n         || c instanceof Array\r\n         || !!c?.key?.match('blockquote')\r\n         || !!c?.key?.match('paragraph')\r\n    const renderGrid =useCallback((arr:any)=>\r\n        (arr instanceof Array && arr.every(c=>isBlock(c)) )\r\n          ? <MDBRow>\r\n                {arr.map((c,i)=>\r\n                    <MDBCol key={`${i}-${c.length}`}>\r\n                    {(c instanceof Array)\r\n                        ? renderGrid(c)\r\n                        : c\r\n                    }</MDBCol>\r\n                )}\r\n                </MDBRow>\r\n          : arr, [])\r\n    return useMemo(()=>renderGrid(grid), [renderGrid, grid])\r\n};\r\n/* props- children : [blockquote, ...]\r\n> if depth = 0 (no \\n)\r\n    props.children\r\n      - c   (key=text)\r\n        .props.children\r\n          - c (key=None)\r\n> if depth = 0 (include \\n)\r\n> if depth = 1 (include \\n)\r\n    props.children\r\n      - c (key=blockquote)\r\n        .props.children\r\n          - c (key=paragraph)\r\n            .props.children\r\n              - c (key=text)\r\n              - c (key=text)...\r\n>if depth=1\r\n    //bind depth=0\r\n>?\r\n    props.children\r\n      - c (key=blockquote)\r\n        .prosp.children\r\n          - c (key=paragraph)\r\n          - c\r\n            .props.children\r\n              - c (key=text)\r\n              - c\r\n              - c ...\r\n*/\r\n","import React, {FC, useMemo} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getGrid} from '../../utils';\r\nimport {Grid} from './Grid';\r\nimport {MDBTypography,MDBBox} from 'mdbreact';\r\nexport const Blockquote:FC<BaseProps> = ({children, className='', color='', style={}}) => {\r\n    const grid = useMemo(()=>\r\n        getGrid(children as React.ReactElement)\r\n    ,[children])\r\n    if ( grid instanceof Array && grid.some((c:any)=>(c instanceof Array)) )\r\n        return <Grid {...{className, color, style, grid}} />\r\n    return  (\r\n        <MDBTypography blockquote>\r\n            <MDBBox tag=\"div\" mb={0}>{grid}</MDBBox>\r\n        </MDBTypography>\r\n    )\r\n};\r\n\r\n/*props\r\n  - children : [blockquote, ]\r\n\r\n>if depth = 0 (no \\n)\r\nprops.children\r\n  - child   (key=text)\r\n    .props.children\r\n      - child (key=None)\r\n\r\n>if depth = 0 (include \\n)\r\n\r\n>>if depth = 1 (include \\n)\r\nprops.children\r\n  - child (key=blockquote)\r\n    .props.children\r\n      - child (key=paragraph)\r\n        .props.children\r\n          - child (key=text)\r\n          - child (key=text)...\r\n\r\n>>if depth=1\r\n>  //bind depth=0\r\n>>?\r\nprops.children\r\n  - child (key=blockquote)\r\n    .prosp.children\r\n      - child (key=paragraph)\r\n      - child\r\n        .props.children\r\n          - child (key=text)\r\n          - child\r\n          - child ...\r\n*/\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {MDBBadge} from 'mdbreact';\r\nexport const Delete:FC<BaseProps> = ({\r\n        children, className=\"\", color=\"\", style={}\r\n    }) => {\r\n    const colors = [\"default\",\"primary\",\"success\",\"info\",\"warning\",\"danger\",\"light\",\"dark\"]\r\n    color = colors.some(c=>c===color) ? color :\"danger\"\r\n    return <MDBBadge {...{className,color,style}}>×{children}</MDBBadge>;\r\n};\r\n","import React, {FC,useState,useCallback} from 'react';\r\nimport {ButtonProps, buttonColor} from '../../types';\r\nimport {MDBBadge, MDBBtn, MDBTooltip} from 'mdbreact'\r\nconst colors = [\"default\",\"primary\",\"success\",\"info\",\"warning\",\"danger\",\"light\",\"dark\"]\r\nexport const Button:FC<ButtonProps> = ({\r\n        level=1,/*social='',*/href='',onClick=null,\r\n        children, className='', color='black',style={}\r\n    }) => {\r\n    const [isOpened, setIsOpened] = useState(false);\r\n    const toggle = useCallback(() => {\r\n        setIsOpened(true);\r\n        onClick && onClick();\r\n    }, [onClick])\r\n    const state = { onClick:toggle, level, className, style,...(level===3&&{outline:true}), }\r\n    const hoverText = href.length>30? href.slice(0, 30)+\"...\":href\r\n    return (\r\n        <MDBTooltip domElement tag=\"span\" placement=\"bottom\">\r\n            <span>\r\n                {level===1\r\n                    ? <MDBBadge {...{...state,children,color: color in colors? color: \"dark\"}}/>\r\n                    : <MDBBtn   {...{...state,children,color: color as buttonColor}}/>}\r\n            </span>\r\n            <span>{isOpened?'Opened':hoverText}</span>\r\n        </MDBTooltip>\r\n    ) //TODO (social?{social}:{color}\r\n}\r\n","import React, {ReactChild as RC, FC, useCallback} from 'react';\r\nimport {LinkProps} from '../../types';\r\nimport {getLevel} from '../../utils'\r\nimport {Button} from './Button'\r\n\r\nexport const Link:FC<LinkProps> = ({\r\n        social='', href='',\r\n        children, className='', color='', style={},\r\n    }) => {\r\n    const level = getLevel(children as RC)\r\n    const onClick=useCallback(()=>window.open(href, '_blank', 'noopener noreferrer'),[href])\r\n    return level > 0\r\n    ? <Button {...{level,social,href,onClick,children,className,color,style}} />\r\n    : <span {...{onClick,className,style}}><u>{children}</u></span>;\r\n};\r\n","import React, {FC} from 'react';\r\nimport {ImageProps} from '../../types';\r\nimport {MDBView, MDBMask} from 'mdbreact';\r\n\r\nexport const ImageView:FC<ImageProps> = ({\r\n    src='',alt='_',/*active=false,color='',*/className='',style={position:\"absolute\"}\r\n}) => {\r\n    className = `img-fluid${' '+className||''}`\r\n    //color = `${color}-text` //TODO\r\n    return (\r\n        <MDBView hover>\r\n            <img {...{src,alt,className,style}}/>\r\n            <MDBMask className=\"flex-center\" overlay=\"white-light\">\r\n                <p className=\"black-text\" style={{fontSize:\"1em\"}}>{alt}</p>\r\n            </MDBMask>\r\n        </MDBView>\r\n    )\r\n};\r\n/* props\r\n  - alt:\"\"\r\n  - children\r\n  - className: \"\"\r\n  - src: \"\"\r\n*/\r\n","import React, {ReactChild as RC, FC} from 'react';\r\nimport {getLevel} from '../../utils';\r\nimport {ImageProps} from '../../types';\r\nimport {MDBIcon} from 'mdbreact';\r\nimport {ImageView} from './Image';\r\n\r\nexport const Image:FC<ImageProps> = ({children, alt='', ...props}) => {\r\n    if (!children && alt.slice(0,1).match(':'))\r\n        return <MDBIcon icon={alt.slice(1)}/>\r\n    const level = getLevel(children as RC)//is_3?3:is_2?2:is_1?1:0\r\n    //if (src.match('https://youtube.com')) //TODO\r\n    //    return <Embed {...state}/>\r\n    return <ImageView {...props} {...{alt,level,children}}/>\r\n}\r\n","import React, {FC,CSSProperties,useCallback,useMemo} from 'react';\r\nimport {CardsProps} from '../../types';\r\nimport {MDBRow,MDBCol,MDBCard,MDBCardBody,MDBCardImage,\r\n        MDBCardTitle,MDBCardText,MDBAnimation} from 'mdbreact';\r\n\r\n\r\nexport const Cards :FC<CardsProps> = ({columns, rows, argments}) => {\r\n    const cards = useMemo(()=>columns.map((column:any,i:number)=>(\r\n        {column, rows:rows.map((row:any)=>row[''+i]), argment:argments[i]}\r\n    )), [columns, rows, argments])\r\n    const toHead =useCallback((row:any)=>{\r\n        const text = row && row.map((r:any)=>r.props.children).join('')\r\n        return (text&&text[0]===\"#\")?text.slice(1):null\r\n    }, [])\r\n    const styles = useMemo<CSSProperties[]>(()=>[\r\n        {textAlign:\"center\", margin:\"25px auto\"},\r\n        {borderRadius:\"5px\"},\r\n        {margin:\"0 auto\", borderRadius:\"5px\", boxShadow:\"0 10 25 rgba(0,0,0,0.25)\"},\r\n    ], [])\r\n    const Animation =useCallback((props:any) => {\r\n        const getUpper=(chart:string)=>chart.charAt(0).toUpperCase()+chart.slice(1)\r\n        const getType=(argment:string)=>argment?`fadeIn${getUpper(argment==='center'?'up':argment)}`:\"swing\"\r\n        return props.argment\r\n        ? <MDBAnimation reveal type={getType(props.argment) as 'fadeInUp'|\"swing\"}>\r\n            {props.children}\r\n          </MDBAnimation>\r\n        : props.children\r\n    }, [])\r\n    return (\r\n        <MDBRow>\r\n            {cards&&cards.map((card:any,i:number)=>\r\n                <MDBCol key={i} style={styles[0]}>\r\n                    <Animation argment={card.argment}>\r\n                        <MDBCard style={styles[1]}>\r\n                            <MDBCardImage style={styles[2]} className=\"img-fluid\"\r\n                                src={card.column.label[0].props.src} waves />\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle>{card.column.label[0].props.alt}</MDBCardTitle>\r\n                                {card.rows && card.rows.map((row:any,j:number)=>\r\n                                    <MDBCardText key={j}>{toHead(row)||row}</MDBCardText>\r\n                                )}\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </Animation>\r\n                </MDBCol>\r\n            )}\r\n        </MDBRow>\r\n    )\r\n}\r\n","import React, {FC} from 'react';\r\nimport {TableProps} from '../../types'\r\nimport { MDBDataTable} from 'mdbreact';\r\nexport const Tables:FC<TableProps> = ({\r\n        maxHeight=\"300px\",\r\n        bordered =false ,\r\n        paging   =true , //pagination of Table and select data num\r\n        searching=true , //able to search for table\r\n        scrollX  =false, //able to scroll if overflow-x\r\n        scrollY  =false, //able to scroll if overflow-y\r\n        //sorting  :true ,//error TODO\r\n        striped  =true ,\r\n        small    =true ,\r\n        data={},\r\n        className='', color='', style={}\r\n    }) => {\r\n    const tableState = {bordered,maxHeight,paging,searching,scrollX,scrollY,small,striped}; //sorting TODO\r\n    const state = {data,className,color,style,...tableState}\r\n    return <MDBDataTable {...state} />\r\n}\r\n","import React, {FC,Fragment,useState} from 'react';\r\nimport {TablesProps} from '../../types';\r\nimport {MDBTabPane, MDBTabContent, MDBNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n\r\nexport const Pills:FC<TablesProps> =({\r\n        isPill=true, /*color, style,*/ columns=[], rows=[],\r\n        className='', //children, color='', style={}\r\n    }) => {\r\n    const [tab, setTab] = useState(0)\r\n    //const getarr =arr=>arr?arr instanceof Array?arr:[arr]:[]\r\n    //const isPill = columns.every( col=>col.label.every(c=>getAnyChild(c.props,'emphasis').length) )\r\n    const cards = columns.map((column,i)=>(\r\n        {column, rows:rows.map(row=>row[''+i])}\r\n    ))\r\n    const togglePills =(e:any, num:number) => {\r\n        e.preventDefault(); //?\r\n        if (tab!==num)\r\n            setTab(num);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <MDBNav style={{border:\"none\"}}\r\n                className={className+` mt-5 nav-${isPill?'pills':'tabs'}`}>\r\n                {cards && cards.map((card,i)=>\r\n                <Fragment key={i}>\r\n                    <MDBNavItem>\r\n                       <MDBNavLink link to=\"#\" active={tab===(i)}\r\n                          onClick={(e:any)=>togglePills(e,i)} >\r\n                          {card.column.label.map((l:any)=>l.props.children)}\r\n                        </MDBNavLink>\r\n                    </MDBNavItem>\r\n                </Fragment>\r\n                )}\r\n            </MDBNav>\r\n            <MDBTabContent activeItem={\"\"+tab}>\r\n                {cards && cards.map((card,i)=>\r\n                <Fragment key={i}>\r\n                    <MDBTabPane tabId={i+\"\"}>\r\n                        <p> {card.rows} </p>\r\n                    </MDBTabPane>\r\n                </Fragment>\r\n                )}\r\n          </MDBTabContent>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React, {FC, Fragment, useState} from 'react';\r\nimport {buttonColor, TablesProps, } from '../../types';\r\nimport { MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\nexport const Modal:FC<TablesProps> = ({\r\n        columns=[], rows=[], argments=[],\r\n        children, className='', color='dark', style={}\r\n    }) => {\r\n    const [modalNum, setModalNum] = useState<number>(0)\r\n    const cards = columns.map((column,i)=>(\r\n        {column, rows:rows.map(row=>row[''+i]), argment:argments[i]}\r\n    ))\r\n    color = color.replace('-color','')\r\n    return (\r\n        <Fragment>\r\n        {cards.map((card,i)=>\r\n            <Fragment key={i}>\r\n                <MDBBtn {...{className, color:color as buttonColor, style}}\r\n                    onClick={()=>setModalNum((modalNum===i)?0:i)}>\r\n                    {card.column.label[0].props.children[0].props.children}</MDBBtn>\r\n                <MDBModal\r\n                    inline noClickableBodyWithoutBackdrop overflowScroll //?? TODO error if no\r\n                    fullHeight position=\"right\"\r\n                    isOpen={modalNum===i}\r\n                    toggle={()=>setModalNum(0)}>\r\n                    <MDBModalHeader toggle={()=>setModalNum(0)}>\r\n                        {card.column.label[0].props.children}\r\n                    </MDBModalHeader>\r\n                    <MDBModalBody> {card.rows} </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn {...{className, color:color as buttonColor, style}}\r\n                            onClick={()=>setModalNum(0)}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </Fragment>\r\n        )}\r\n    </Fragment>\r\n    )\r\n}\r\n","import React, {FC, useMemo} from 'react';\r\nimport {TableProps} from '../../types';\r\nimport {getarr,gettrs,getths,getcol,getrow,getkey,getIsX} from '../../utils'\r\nimport {Cards} from './Cards';\r\nimport {Tables} from './Tables';\r\nimport {Pills} from './Pills';\r\nimport {Modal} from './Modal';\r\n\r\nexport const Table:FC<TableProps> = ({\r\n        columnAlignment=undefined,\r\n        children, className='', color='', style={}, ...props\r\n    }) => {\r\n    const {columns, rows, keys} = useMemo(()=>{\r\n        const heads   = getarr(children).filter(v=>v.key.match(\"tableHead\"));\r\n        const bodys   = getarr(children).filter(v=>v.key.match(\"tableBody\"));\r\n        const columns = gettrs(heads).map(h=>getths(h)).map(th=>getcol(th))[0];\r\n        const rows    = gettrs(bodys).map(b=>getths(b)).map(th=>getrow(th));\r\n        const keys    = gettrs(heads).map(v=>getths(v)).map(th=>getkey(th))[0];\r\n        return {columns, rows, keys}\r\n    }, [children])\r\n    if ( keys.every(key=>key.match('image')) )\r\n        return <Cards {...{columns,rows,keys,className,color,style}} argments={columnAlignment}/>\r\n    if ( keys.every(key=>key.match('link')) )\r\n        return (getIsX(columns, 'delete'))\r\n            ? <Modal {...{columns, rows, keys, className, color, style}} argments={columnAlignment}/>\r\n            : <Pills {...{columns, rows, keys, className, color, style}} isPill={getIsX(columns, 'emphasis')?true:false}/>\r\n    return <Tables indexProps={props} data={ {columns,rows} }/>\r\n};\r\n","import React, {FC,useMemo} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {MDBListGroup} from 'mdbreact';\r\n\r\nexport const ListGroup:FC<BaseProps> = ({\r\n        children, className='', color='elegant', style={}\r\n    }) => {\r\n    return useMemo(()=>\r\n        <MDBListGroup {...{children, className, color, style:{margin:\"auto auto\",...style}}} color=\"light\"/>\r\n    , [children, className, color, style])\r\n\r\n};\r\n","/***\r\n  * REF : Full Page Intro with fixed, transparent Navbar↓\r\n  * https://mdbootstrap.com/docs/react/navigation/navbar/\r\n  * https://mdbootstrap.com/docs/react/navigation/compositions/\r\n  * https://mdbootstrap.com/previews/docs/latest/html/navigation/intro-fixed-transparent.html\r\n***/\r\nimport React, {FC, Children, useCallback, useState} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr as getArray,getText,getLink} from '../../utils'\r\nimport {MDBNavbar,MDBNavbarBrand,MDBNavbarNav,MDBNavItem,MDBNavLink,MDBNavbarToggler,MDBCollapse} from \"mdbreact\";\r\nexport const Navi:FC<BaseProps> = ( {\r\n    className=\"\", color=\"elegant\", style={}, ...props\r\n}) => {\r\n    const children = Children.toArray(props.children)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const toggleCollapse = useCallback(()=>setIsOpen(p=>!p), [])\r\n    color = `${color}${color.match(\"-color\")?\"\":\"-color\"}`\r\n    return (\r\n        <MDBNavbar {...{color,className,style}}\r\n            expand=\"md\" fixed=\"top\" dark scrolling transparent>\r\n            <MDBNavbarBrand href={getLink((children as any)[0].props.children)}>\r\n                <strong className=\"white-text\">{getText((children as any)[0].props.children)}</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarToggler onClick={toggleCollapse} />\r\n            <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\r\n                <MDBNavbarNav left>\r\n                {getArray(children).filter((_:any,i:number)=>i>0).map((c,i)=>\r\n                    <MDBNavItem key={i}\r\n                        active={window.location.href.match(getLink(c.props?.children))?true:false}\r\n                        onClick={()=>{window.location.href=getLink(c.props?.children)}}>\r\n                        <MDBNavLink  to=\"#\">{getText(c.props?.children)}</MDBNavLink>\r\n                    </MDBNavItem>\r\n                )}\r\n                </MDBNavbarNav>\r\n            </MDBCollapse>\r\n        </MDBNavbar>\r\n    );\r\n};\r\n","//https://mdbootstrap.com/docs/react/navigation/footer/\r\nimport React, {FC} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr as getArray,getText,getLink} from '../../utils'\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nexport const Foot:FC<BaseProps> = ({\r\n        children, className='', color='', style={}\r\n    }) => {\r\n    className = 'footer-copyright text-center font-small py-3'+className;\r\n    style = { maxWidth:\"99vw\",left:\"50%\",right:\"50%\",marginLeft:\"-50vw\",marginRight:\"-50vw\",\r\n                    position:\"relative\",bottom:\"0\",overflow:\"hidden\",...style}\r\n    const state ={className,color,style}\r\n    return (\r\n        <MDBFooter {...state}>\r\n            <MDBContainer fluid>\r\n                <MDBRow>\r\n                    {getArray(children).map((c,i)=>\r\n                        <MDBCol key={i}\r\n                            onClick={()=>{window.location.href=getLink(c.props.children)}}>\r\n                                {getText(c.props.children)}\r\n                        </MDBCol>\r\n                    )}\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        </MDBFooter>\r\n    )\r\n};\r\n","/***\r\n  * REF\r\n  * https://mdbootstrap.com/docs/react/components/dropdowns/\r\n***/\r\nimport React, {FC} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr as getArray,getText,getLink} from '../../utils'\r\nimport {MDBDropdown,MDBDropdownToggle,MDBDropdownMenu,MDBDropdownItem} from \"mdbreact\";\r\n\r\nexport const Drop:FC<BaseProps> = ({\r\n        children, className='', color='', style={}\r\n    }) => {\r\n    color = color.replace('-color','')\r\n    const state = {className,style}\r\n    return (\r\n        <MDBDropdown {...state}>\r\n            <MDBDropdownToggle caret color={color}>\r\n                {getText(getArray(children)[0]?.props?.children)}\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu basic>\r\n            {getArray(children).filter((_,i:number)=>i>0).map((c,i)=>\r\n                <MDBDropdownItem key={i}\r\n                    onClick={()=>{window.location.href=getLink(c.props?.children)}}>\r\n                    {getText(c.props?.children)||c.props?.children}</MDBDropdownItem>\r\n            )}\r\n            </MDBDropdownMenu>\r\n        </MDBDropdown>\r\n    )\r\n};\r\n","import React, {FC,useMemo} from 'react';\r\nimport {BaseProps} from '../../types';\r\nimport {getarr, getAnyCh, getAnyGr} from '../../utils';\r\nimport {ListGroup} from './ListGroup';\r\nimport {Navi} from './Navi';\r\nimport {Foot} from './Foot';\r\nimport {Drop} from './Drop';\r\nexport const List:FC<BaseProps> = ({\r\n        children, className='', color='elegant', style={}\r\n    }) => {\r\n    const state = useMemo(()=>({\r\n        children,className,color,style\r\n    }),[children,className,color,style])\r\n    if( getarr( children ).every((c:any)=>getAnyCh(c.props?.children,'link').length ) ){\r\n        if ( getarr( children ).every(c=>getAnyGr(c.props?.children, 'link', 'strong').length) )\r\n            return <Foot {...state}/>\r\n        if ( getarr( children ).every(c=>getAnyGr(c.props?.children, 'link', 'emphasis').length) )\r\n            return <Navi {...state}/>\r\n        return <Drop {...state}/>\r\n    }\r\n    return <ListGroup>{children}</ListGroup>\r\n/***\r\n  * TODO : not used (migrate to table)\r\n  * if( children.every(c=>getAnyChild(c.props?.children, 'image').length ) )\r\n  *     return <Carousel {...state}/>\r\n  * if( children.map(c=>getAnyGrand(c.props?.children, 'link', 'emphasis')).filter(a=>a.length).length )\r\n  *     return <Pill {...state}/>\r\n  * if( children.map(c=>getAnyGrand(c.props?.children, 'link', 'strong')).filter(a=>a.length).length )\r\n  *   return <Tabs {...state}/>\r\n***/\r\n}\r\nexport {\r\n    ListGroup,\r\n    Navi,\r\n    Foot,\r\n    Drop,\r\n};\r\n/*props\r\nprops.depth  : 0\r\nprops.ordered: false\r\nprops.start  : null\r\nprops.tight  :false\r\nprops?.children\r\n  - child (key=listItem)\r\n  - cilld ...\r\n    .props?.children\r\n      - child(key=text and so)\r\n*/\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {MDBListGroupItem} from 'mdbreact';\r\nexport const ListItem:FC<BaseProps> = ({\r\n    children, className='', style={padding:\"0 50px\"}, ...props\r\n}) => {\r\n    type Colors = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | undefined\r\n    const colors= [\"primary\",\"secondary\",\"success\",\"danger\",\"warning\",\"info\",\"light\",\"dark\"]\r\n    const color = props.color && colors.some(c=>c===props.color)\r\n        ? props.color as Colors\r\n        : \"light\"\r\n    return <MDBListGroupItem {...{children, className, color, style}} />\r\n};\r\n","import React, {FC,useMemo,Children} from 'react';\r\nimport {HeadingProps} from '../types';\r\n//import {MDBTypography} from 'mdbreact'\r\nimport {TagTypes} from '../types'\r\nexport const Heading:FC<HeadingProps> = ({\r\n        level=1, /*responsive=true, */\r\n        children, className='', color=\"\", style={},\r\n    }) => {\r\n    const Tag = useMemo(()=>`h${level}` as TagTypes,[level])\r\n    return (\r\n        <div {...{color,style}}>\r\n        {Children.map(children,(c,key)=>{\r\n            return !(c as any)?.props?.children ? null :\r\n            <Tag {...{className,key}}>{(c as any)?.props?.children}</Tag>\r\n        })}\r\n        </div>\r\n    )\r\n    // ***\r\n    // *MDBTypegraphy Error\r\n    // *    DOC1: https://mdbootstrap.com/docs/jquery/content/typography/\r\n    // *    DOC2: https://mdbootstrap.com/docs/react/content/typography/\r\n    // *    Code: https://github.com/mdbootstrap/React-Bootstrap-with-Material-Design/blob/25ae803b9121efe64a02c5d9e4466cf6ea908a3f/src/components/Typography/Typography.js\r\n    // *Warning: Failed prop type:\r\n    // *   Invalid prop `children` of type `array` supplied to `a`,\r\n    // *   expected `boolean`.\r\n    // *Warning: Received `false` for a non-boolean attribute `abbr`.\r\n    // *   If you want to write it to the DOM,\r\n    // *   pass a string instead: abbr=\"false\" or abbr={value.toString()}.\r\n    // *   If you used to conditionally omit it with abbr={condition && value},\r\n    // *   pass abbr={condition ? value : undefined} instead.\r\n    // ***\r\n    /*\r\n    const tag = useMemo(()=>`h${level}` as TagTypes,[level])\r\n    const variant = useMemo(()=>\"responsive\" as VarTypes,[])\r\n    return <MDBTypography {...{\r\n        tag, variant, abbr:\"true\", //error if none\r\n        children, // warning\r\n        className, color, style}}/>\r\n    */\r\n};\r\n","import React, {FC,useCallback,useMemo} from \"react\";\r\nimport {atomOneLight, atomOneDark} from 'react-syntax-highlighter/dist/esm/styles/hljs'\r\nimport {Light} from 'react-syntax-highlighter'\r\nimport {CodeProps} from \"../../types\";\r\n\r\nexport const Code:FC<CodeProps> = ({value=\"\", language=\"javascript\", inline=false,dark=false}) => {\r\n    const onDoubleClick = useCallback((_:any)=>navigator.clipboard.writeText(value),[value])\r\n    const customStyle = useMemo(()=>{\r\n        return {\r\n            ...(inline? {verticalAlign:\"top\"}: {}),\r\n            display:inline? \"inline-block\": \"fixed\", \r\n            position:'relative',\r\n            padding:0,\r\n            margin:0\r\n        }\r\n    }, [inline])\r\n    const style = useMemo(()=>dark? atomOneDark: atomOneLight, [dark])\r\n    return (\r\n        <Light\r\n            PreTag={inline?\"span\":\"pre\"}\r\n            useInlineStyles={true}\r\n            showLineNumbers={!inline}\r\n            {...{style, customStyle, onDoubleClick, language}}>{value}</Light>\r\n    );\r\n}\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {Code} from './Code'\r\n\r\nexport const InlineCode:FC<BaseProps> = ({...props}) => {\r\n    return <Code {...props} inline/>\r\n}\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nconst MathJax = require('react-mathjax');\r\n\r\ninterface MathProps extends BaseProps {inline?:boolean,value?:string}\r\nexport const Math:FC<MathProps> = ({\r\n        inline=false, value='',\r\n        //children, className='', color='', style={} //TODO\r\n    }) => {\r\n    //const [isCopied, setIsCopied] = useState(false);\r\n    const handleCopy = (_:any)=> {\r\n    //    setIsCopied(true);\r\n        navigator.clipboard.writeText(value)\r\n    }\r\n    return (\r\n            <MathJax.Node inline={inline} formula={value}\r\n                onDoubleClick={handleCopy}/>\r\n    )\r\n}\r\n","import React, {FC} from 'react';\r\nimport {BaseProps} from '../types';\r\nimport {Math} from './Math'\r\n\r\nexport const InlineMath:FC<BaseProps> = ({...props}) => {\r\n    return <Math {...props} inline/>\r\n}\r\n","import React, {FC, useState, useEffect, useMemo} from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {MdmdProps} from './types'\r\nimport * as Renderers from './components';\r\n//const {Provider} = require('react-mathjax');\r\n//const RemarkMathPlugin = require('remark-math');\r\n\r\nconst renderersKey  = Object.keys(Renderers)\r\nexport const Mdmd:FC<MdmdProps> = React.forwardRef(({\r\n    md=null, path=null, source='',\r\n    className=\"\", color=\"elegant\", style={fontSize:\"1rem\"},\r\n    children, ...props\r\n}, ref) => {\r\n    // ************************* FOR SOURCE ************************* //\r\n    const [nowSource, setSource] = useState(source);\r\n    useEffect(()=>{(path||md)&&fetch(path||md).then(r=>r.text()).then(r=>setSource(r)) }, [md,path])\r\n    useEffect(()=>{(source||children)&&setSource(source||String(children))}, [source,children])\r\n    // ************************* FOR PROPS ************************* //\r\n    const options = useMemo(()=>Object.assign({}, ...[\r\n        'escapeHtml','skipHtml','sourcePos','rawSourcePos','includeNodeIndex',\r\n        'allowedTypes','disallowedTypes','unwrapDisallowed','allowNode',\r\n        'linkTarget','transformLinkUri','transformImageUrl', ]\r\n        .filter(key => key in props).map(key => ({[key]:props[key]})),\r\n        props.options\r\n    ), [props]);\r\n    const renderers = useMemo(()=>Object.assign({},\r\n        ...renderersKey.map(key=>{\r\n            const Renderer  = (Renderers as any)[key];\r\n            return {[ key.charAt(0).toLowerCase()+key.slice(1) ] : (props:any) =>\r\n                <Renderer {...{...props,\r\n                    className: [ className, props[`className${key}`] ].filter(c=>c).join(' '),\r\n                    color    :     color || props[`color${key}`] ,\r\n                    style    : {...style,...props[`style${key}`]}, }}/>}\r\n        }), props.renderers\r\n    ), [className, color, style, props.renderers]);\r\n    // ************************* FOR RENDER ************************* //\r\n    return useMemo(()=>\r\n        <ReactMarkdown {...{\r\n            source:nowSource||'',...options,\r\n            renderers,/*plugins*/...(ref?{ref}:{})}} />\r\n    , [nowSource, renderers, options, ref])\r\n    /*\r\n    return (\r\n        <Provider input=\"tex\">\r\n            <ReactMarkdown {...{plugins, renderers, ...optionState, markdownRef, source:nowSource}} />\r\n        </Provider>\r\n    )\r\n    */\r\n});\r\n","import {ReactNode as RN, Children} from 'react'\r\n\r\n// ************************* 🎰 FOR TABLE 🎰 ************************* //\r\n// ************************* **************** ************************* //\r\nexport const getarr=(arr:any)=>arr?arr instanceof Array?arr:[arr]:[]\r\nexport const gettrs=(els:any[])=>[].concat(...(els.map(el=>getarr(el?.props?.children)) as never[]));\r\nexport const getths=(row:any  )=>getarr(row?.props?.children).map(el=>getarr(el?.props?.children));\r\nexport const getcol=(els:any[])=>els.map((c,i)=>({label:c, field:\"\"+i, sort:\"asc\", width:10}));\r\nexport const getrow=(els:any[])=>Object.assign( {},...els.map((c,i)=>({[\"\"+i]:c})) )\r\nexport const getkey=(els:any[])=>[].concat(...els.map(el=>el)).map((v:any)=>v.key);\r\nexport const getIsX=(els:any[],key:string)=>els.every(el=>el.label.every((c:any)=>getAnyCh(c.props,key).length) )\r\n\r\n// ************************* 📋 FOR LIST 📋 ************************* //\r\n// * grands : i want to know as g0 is btn? link? g0.child is ?\r\n// * i want know g0 have 'link' child and g0 have 'strong' grandchild.\r\n// ************************* ************** ************************* //\r\ntype GetAnyCh<T=any> = (children:T, key:string) => T[]\r\ntype GetAnyGr<T=any> = (children:T, k1:string, k2:string) => (T[])[]\r\nexport const getAnyCh:GetAnyCh=(children,key)=>getarr(children).filter(c=>c.key&&c.key.match(key))//[g0,..]or[]\r\nexport const getAnyGr:GetAnyGr=(children,k,l)=>getAnyCh(children,k).map(c=>getAnyCh(c?.props?.children,l)).filter(g=>g.length)\r\nexport const getText=(children:any)=>getarr(children).map(c=>c.key&&c.key.match('link')?c.props.children:c)\r\nexport const getLink=(children:any)=>getarr(children).map(c=>c.key&&c.key.match('link')?c.props.href:'#!').filter(n=>n)[0]||'#!'\r\n\r\n// ************************* 🤏 FOR GRID 🤏 ************************* //\r\n// ************************* *************** ************************* //\r\nexport const getGrid = (children:RN, depth=0) : any =>\r\n    getarr(children).map((child:any)=>\r\n        child?.key && !!child.key.match('blockquote') && !!child?.props?.children\r\n             ? getGrid(child.props.children, depth+1)\r\n             : child\r\n    )\r\nexport const getLevel = (children: RN) : number => {\r\n    if (!children) return 0\r\n    const keys = Children.toArray(children).map((c:any)=>c?.key).filter((k:any)=>k) as string[]\r\n    return keys.every(key=>key.match('strong')) ? 2       //put by 2 underbar __e.g.__\r\n            : keys.every(key=>key.match('emphasis')) ? 1 //put by 1 underbar __e.g.__\r\n                : keys.every(key=>key.match('delete'))   //put by delete     ~~e.g.~~\r\n                    ? -1\r\n                    : 0\r\n}\r\n","import {Mdmd} from './Mdmd'\nexport default Mdmd\nexport * from './Mdmd';\nexport * from './components';\nexport * from './hooks'\nexport * from './types'\nexport * from './utils'\n","module.exports = __webpack_public_path__ + \"static/media/About.05374727.md\";","module.exports = __webpack_public_path__ + \"static/media/Basic.faa17e22.md\";","module.exports = __webpack_public_path__ + \"static/media/Component.6c791648.md\";","module.exports = __webpack_public_path__ + \"static/media/Container.ed6be2c2.md\";","module.exports = __webpack_public_path__ + \"static/media/Content.185a9f22.md\";","module.exports = __webpack_public_path__ + \"static/media/Grid.8d3f1f49.md\";","module.exports = __webpack_public_path__ + \"static/media/Help.5aecf85a.md\";","module.exports = __webpack_public_path__ + \"static/media/How.b77fae6b.md\";","module.exports = __webpack_public_path__ + \"static/media/Test.f44e1c49.md\";"],"sourceRoot":""}