{"version":3,"sources":["docs/serviceWorker.js","src/components/Stick.js","src/components/Spot.js","src/components/Signin/SigninContainer.jsx","src/components/Signin/SigninHead.jsx","src/components/Signin/SigninInput.jsx","src/components/Signin/index.jsx","src/hooks/useUserio.js","src/meshs/Screen.js","src/Walk.js","src/World.js","src/hooks/useSignin.js","docs/index.js"],"names":["Boolean","window","location","hostname","match","Stick","forwardRef","ref","size","limit","bind","useDrag","down","movement","mx","my","rx","ry","current","style","useMemo","width","height","position","React","onDrag","color","alpha","useState","x","y","scale","stick","setStick","immediate","level","userSelect","boxShadow","backgroundColor","join","transform","borderRadius","bottom","left","SigninContainer","open","setOpen","children","root","document","getElementById","fontSize","top","display","padding","justifyContent","alignItems","onClick","icon","createPortal","zIndex","e","stopPropagation","SigninHead","isSignin","setIsSignin","styleBtn","transition","right","SigninInput","cred","setCred","inputChange","useCallback","persist","pre","target","name","value","username","onChange","label","group","type","validate","error","success","password","autoComplete","email","Signin","signin","setSignin","authtoken","isAlert","setIsAlert","handleUser","setTimeout","handleOut","reload","margin","useUserio","onmessage","socket","room","hash","slice","url","WebSocket","rotation","actions","userio","set","useEffect","JSON","parse","data","message","onclose","console","onerror","onopen","log","send","stringify","src","id","transparent","pointerEvents","border","Box","active","setActive","useRef","useFrame","attach","args","World","props","usergroup","host","useCookie","setSigninname","setAuthtoken","headers","isSignIn","Cookies","axios","post","then","res","status","token","path","catch","useSignin","rotasion","user","users","setUsers","userprocess","func","include_self","find","v","setUserio","Fragment","camera","skyColor","groundColor","intensity","castShadow","map","u","Object","values","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63166ed6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState, useEffect} from 'react'\r\nimport { useSpring } from 'react-spring'\r\nimport { useDrag } from 'react-use-gesture'\r\nconst Stick = React.forwardRef(({onDrag=null,color=0xffffff,alpha=0.1, size=100,limit=100}, ref) => {\r\n    const [stick, setStick] = useState({ x:0, y:0, scale:1 })\r\n    const bind = useDrag(({ down, movement: [x, y] }) => {\r\n        if (x*x+y*y > limit*limit)\r\n            return\r\n        setStick({x:down?x:0, y:down?y:0, scale:down?1.2:1, immediate:down})\r\n        ref.current = {x:(down?x:0)/limit, y:(down?y:0)/limit}\r\n        if (onDrag)\r\n            onDrag(x/limit, -y/limit)\r\n    })\r\n    //useEffect(()=>(ref.current = {x:0,y:0}),[])\r\n    const position = {x:limit*1.5, y:limit*1.5}\r\n    const level = (stick.x<0?-stick.x:stick.x)/limit + (stick.y<0?-stick.y:stick.y)/limit\r\n    const style = {\r\n        userSelect:\"none\",\r\n        width :size*stick.scale+\"px\",\r\n        height:size*stick.scale+\"px\",\r\n        boxShadow:`rgba(0,0,0,${level})`,\r\n        backgroundColor:`rgba(${[(color>>16)&255,(color>>8)&255,color&255].join(',')},${alpha+level/10})`,\r\n        transform:\"translate(-50%, 50%)\",\r\n        position:\"fixed\",borderRadius:100+\"px\",\r\n        bottom:position.x-stick.y +\"px\",\r\n        left  :position.y+stick.x+\"px\" }\r\n    return  <div style={style} {...bind()} />\r\n})\r\n\r\nexport {Stick};\r\n","import React, {forwardRef, useEffect, useMemo} from 'react'\r\nimport { useDrag } from 'react-use-gesture'\r\nconst Spot = forwardRef(({size=100,limit=100}, ref) => {\r\n    const bind = useDrag(({ down, movement: [mx, my] }) => {\r\n        const rx = (down? mx:0)/limit\r\n        const ry = (down? my:0)/limit\r\n        ref.current = {rx,ry}\r\n    })\r\n    //useEffect(()=>(ref.current = {x:0,y:0}), [])\r\n    const style = useMemo(()=>({\r\n        width :\"100%\",\r\n        height:\"100%\",\r\n        position:\"fixed\"}), [])\r\n    return  <div style={style} {...bind()}/>\r\n})\r\n\r\nexport {Spot};\r\n","import React, {useRef, useMemo, useState, useEffect, useCallback} from 'react'\r\nimport {createPortal} from 'react-dom';\r\nimport {MDBInput, MDBBtn, MDBIcon, MDBAlert} from 'mdbreact'\r\n\r\nconst SigninContainer = ({open, setOpen, children}) => {\r\n    const root = useMemo(()=>document.getElementById('root'),[])\r\n    const stylePortal= {display:\"flex\",justifyContent:\"center\",alignItems:\"center\",top:0,left:0,zIndex:200,\r\n                        position:\"fixed\",width:\"100%\" ,height:\"100%\",backgroundColor:\"rgba(0,0,0,0.5)\"}\r\n    const styleModal = {position:\"fixed\",width:\"min(24rem,95%)\",height:\"auto\",backgroundColor:\"white\",padding:\"1em\"}\r\n    const styleButton= {position:\"fixed\",width:\"1.7em\",height:\"1.7em\",fontSize:\"1.7em\",top:\"1em\",left:\"1em\",\r\n                        display:\"flex\",borderRadius:\"1em\",backgroundColor:\"white\",padding:\"0 0\",\r\n                        justifyContent:\"center\",alignItems:'center',}\r\n    return (\r\n        <>\r\n            <MDBBtn style={styleButton} onClick={()=>setOpen(!open)}>\r\n                <MDBIcon icon=\"user\"/></MDBBtn>\r\n\r\n            {open && createPortal(\r\n                <div style={stylePortal} onClick={()=>setOpen(false)}>\r\n                    <div style={styleModal} onClick={(e)=>e.stopPropagation()}>\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            , root)}\r\n        </>\r\n    )\r\n}\r\nexport {SigninContainer}\r\n","import React, {useRef, useMemo, useState, useEffect, useCallback} from 'react'\r\nimport {createPortal} from 'react-dom';\r\nimport {MDBInput, MDBBtn, MDBIcon, MDBAlert} from 'mdbreact'\r\n\r\nconst SigninHead = ({isSignin, setIsSignin}) => {\r\n    const styleBtn={width:\"1.7em\",height:\"1.7em\",fontSize:\"1em\",borderRadius:\"1em\",\r\n                    transform:`translate(30%,-30%) rotate(${isSignin?0:180}deg)`, transition:\"2s\",\r\n                    top:0,right:0,padding:0,position:\"absolute\",}\r\n    return(\r\n        <h1>Sign {isSignin?\"In\":\"Up\"}\r\n            <MDBBtn style={styleBtn}\r\n                onClick={()=>{setIsSignin(!isSignin)}}>\r\n                <MDBIcon icon=\"sync-alt\"/></MDBBtn>\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport {SigninHead}\r\n","import React, {useRef, useMemo, useState, useEffect, useCallback} from 'react'\r\nimport {createPortal} from 'react-dom';\r\nimport {MDBInput, MDBBtn, MDBIcon, MDBAlert} from 'mdbreact'\r\n\r\nconst SigninInput = ({isSignin, cred, setCred}) => {\r\n    const inputChange = useCallback(e=> {\r\n        e.persist()\r\n        setCred(pre=>({...pre, [e.target.name]:e.target.value}))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <MDBInput value={cred.username} name=\"username\" onChange={inputChange}\r\n                label=\"Type your username\" icon=\"user\"\r\n                group type=\"text\" validate error=\"wrong\" success=\"right\"/>\r\n            <MDBInput value={cred.password} name=\"password\" onChange={inputChange}\r\n                label=\"Type your password\" icon=\"lock\"\r\n                group type=\"password\" validate autoComplete=\"on\" />\r\n            {!isSignin &&\r\n            <MDBInput value={cred.email} name=\"email\" onChange={inputChange}\r\n                label=\"Type your email\" icon=\"envelope\"\r\n                group type=\"email\" validate error=\"wrong\" success=\"right\"/> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport {SigninInput}\r\n","import React, {useRef, useMemo, useState, useEffect, useCallback} from 'react'\r\nimport {createPortal} from 'react-dom';\r\nimport {MDBInput, MDBBtn, MDBIcon, MDBAlert} from 'mdbreact'\r\n\r\nimport {SigninContainer} from './SigninContainer'\r\nimport {SigninHead}      from './SigninHead'\r\nimport {SigninInput}     from './SigninInput'\r\n\r\nconst Signin = ({signin, setSignin}) => {\r\n    const [open, setOpen] = useState(signin.authtoken?false:true)\r\n    const [isSignin, setIsSignin] = useState(signin.username?true:false)\r\n    const [isAlert, setIsAlert] = useState(false)\r\n    const [cred, setCred] = useState({username:signin.username||'',password:'',email:''})\r\n    const handleUser =useCallback(()=> {\r\n        setSignin(cred,isSignin); setIsAlert(true)\r\n        setTimeout( () => setIsAlert(false), 2500)\r\n    }, [cred, isSignin])\r\n    const handleOut = useCallback(() => {\r\n        setSignin(null); setOpen(false)\r\n        window.location.reload()\r\n    }, [])\r\n    if (signin.username && signin.authtoken)\r\n        return (\r\n            <SigninContainer {...{open, setOpen}}>\r\n                <h1>Sign out</h1>\r\n                <MDBBtn style={{width:\"100%\",margin:\"2em auto\",borderRadius:\"2em\"}}\r\n                    onClick={()=>handleOut()}>Sign out</MDBBtn>\r\n            </SigninContainer>\r\n        )\r\n    return (\r\n        <SigninContainer {...{open, setOpen}}>\r\n            <SigninHead  {...{isSignin, setIsSignin}}/>\r\n            <SigninInput {...{isSignin, cred, setCred}}/>\r\n            {isAlert &&\r\n            <MDBAlert color=\"danger\" onClick={()=>setIsAlert(false)}>\r\n                400 Bad Request</MDBAlert>}\r\n            <MDBBtn style={{width:\"100%\",margin:\"2em auto\",borderRadius:\"2em\"}}\r\n                onClick={()=>handleUser()}>\r\n                Sign {isSignin?\"In\":\"Up\"}</MDBBtn>\r\n        </SigninContainer>\r\n    )\r\n}\r\nexport {Signin}\r\n","import {useRef, useMemo, useState, useEffect, useCallback} from 'react'\r\n\r\nconst useUserio = (onmessage) => {\r\n    const socket = useMemo(()=>{\r\n        const host = \"192.168.0.112:8000\"//window.location.host.match('localhost')?\"localhost:8000\":window.location.host\r\n        const room = window.location.hash.slice(1) || \"home\"\r\n        const url = `ws://${host}/ws/chat/${room}/`\r\n        const ws = new WebSocket(url)\r\n        return ws\r\n    }, [])\r\n    const username = useMemo(()=>'tseijp')\r\n    const [userio, set] = useState({position:[0,0,0],rotation:[0,0,0],actions:[]})\r\n    useEffect( () => {\r\n        socket.onmessage =e=> onmessage( JSON.parse(e.data).message )\r\n        socket.onclose   =e=> console.error('User socket closed', e)\r\n        socket.onerror   =e=> console.error('User socket error', e)\r\n        socket.onopen    =e=> console.log('User socket opened', e)\r\n        //socket.send( JSON.stringify({message:\"hi\"}) )\r\n    }, [socket, onmessage] )\r\n    const setUserio = ({position=userio.position,\r\n                        rotation=userio.rotation,\r\n                        actions =userio.actions ,})=> {\r\n        const message  = {position, rotation, actions, username}\r\n        socket.send( JSON.stringify({message, username}) )\r\n        console.log(JSON.stringify({message}));\r\n        set(message)\r\n    }\r\n    return [userio, setUserio]\r\n}\r\nexport {useUserio}\r\n","//https://github.com/mrdoob/three.js/blob/master/examples/css3d_youtube.html#L60\r\nimport * as THREE from 'three';\r\nimport React, { useEffect, useRef,  } from \"react\"\r\nimport { useLoader, useFrame, useThree, Dom } from \"react-three-fiber\"\r\nimport { useControl } from 'react-three-gui';\r\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer'\r\n\r\nfunction ScreenObject({ el, position=[0,0,0], rotation=[0,0,0] }) {\r\n    const { scene } = useThree()\r\n    const ref = useRef(null)\r\n    useEffect(() => {\r\n        if (!el)\r\n            return\r\n        console.log(el.current);\r\n        const geometry = new THREE.BoxGeometry( 5, 5, 5 )\r\n        const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\r\n        ref.current = new /*THREE.Mesh(geometry,material)*/CSS3DObject(el.current)\r\n        console.log(ref.current);\r\n        ref.current.position.set(...position)\r\n        ref.current.rotation.set(...rotation)\r\n        scene.add(ref.current)\r\n        console.log(ref.current.element);\r\n        return () => scene.remove(ref.current)\r\n    }, [el, scene])\r\n    return null\r\n}\r\n\r\n//<div style=\"position: absolute; pointer-events: auto; transform: translate(-50%, -50%) matrix3d(0.99995, 9.99967e-05, -0.00999933, 0, 0, -0.99995, -0.00999983, 0, 0.00999983, -0.00999933, 0.9999, 0, 0, 0, 0, 1);\">hello</div>\r\nconst Screen = ({els, position=[0,0,0], scale=[1,1,1]}) => {\r\n    return (\r\n        <group {...{position, scale}}>\r\n            <Dom style={{width:\"1000px\", backgroundColor:\"red\"}}>Hello</Dom>\r\n        </group>\r\n    )\r\n}\r\n\r\nconst ScreenElement = React.forwardRef(({id}, ref) => {\r\n    const src = [ 'https://www.youtube.com/embed/', id, '?rel=0&autoplay=1&mute=1' ].join( '' );\r\n    //return <div ref={ref} style={{backgroundColor:\"red\",color:0xffffff}}>Hello</div>\r\n    return (\r\n        <div ref={ref} style={{width:\"480px\", height:\"360px\",backgroundColor:\"rgba(0,0,0,0)\",transparent:false,\r\n            position:\"absolute\", pointerEvents:\"auto\",transform:\"translate(-50%, 0%)\"}}>\r\n            <iframe src={src} style={{width:\"480px\", height:\"360px\",border:\"0px\"}} />\r\n        </div>\r\n    )\r\n})\r\n\r\nexport {Screen, ScreenElement, ScreenObject}\r\n/*\r\n<Portal>\r\n    <ScreenElement ref={ref1} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref2} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref3} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref4} id=\"SJOz3qjfQXU\" />\r\n</Portal>\r\n*/\r\n/*\r\n<div style={{width:\"480px\", height:\"360px\",backgroundColor:\"rgba(0,0,0,0)\",transparent:false,\r\n    position:\"absolute\", pointerEvents:\"auto\",}}>\r\n    <iframe src={[ 'https://www.youtube.com/embed/', 'SJOz3qjfQXU', '?rel=0' ].join( '' )}\r\n     style={{width:\"480px\", height:\"360px\",border:\"0px\"}} />\r\n</div>\r\n\r\n    */\r\n\r\n/*\r\nconst ref1 = useRef(null)\r\nconst ref2 = useRef(null)\r\nconst ref3 = useRef(null)\r\nconst ref4 = useRef(null)\r\n\r\n\r\n<Canvas>\r\n    <Screen els={[ref1,ref2,ref3,ref4]} position={[0,10,0]}/>\r\n</Canvas>\r\n<Portal>\r\n    <ScreenElement ref={ref1} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref2} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref3} id=\"SJOz3qjfQXU\" />\r\n    <ScreenElement ref={ref4} id=\"SJOz3qjfQXU\" />\r\n</Portal>\r\n\r\n*/\r\n","import React, { Suspense, useRef, createRef} from \"react\"\r\nimport ReactDOM from 'react-dom';\r\nimport * as THREE from 'three';\r\nimport { Canvas, Dom } from \"react-three-fiber\"\r\nimport { Controls } from 'react-three-gui';\r\nimport { HTML, Stats } from \"drei\"\r\n//import { getMousePos } from \"./utils\"\r\n//import \"./styles.css\"\r\nimport {Model, Stage} from \"./meshs\"\r\nimport {Spot, Stick} from './components'\r\n\r\nfunction Portal({ children }) {\r\n    const root = React.useMemo(() => document.createElement('div'), [])\r\n    return ReactDOM.createPortal(<React.Fragment>{children}</React.Fragment>, root)\r\n}\r\n\r\nconst Walk = (props) => {\r\n    const spot = useRef()\r\n    const stick = useRef()\r\n    const assetPath = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/2666677/';\r\n    //pixelRatio={window.devicePixelRatio} shadowMap\r\n    return (\r\n        <React.Fragment>\r\n            <Canvas concurrent\r\n                style={{position:\"fixed\",width:\"100%\",height:\"100%\",top:0,left:0}}\r\n                onCreated={({ gl, scene }) => {\r\n                    scene.background = new THREE.CubeTextureLoader()\r\n                        .setPath(`${assetPath}skybox1_`)\r\n                        .load(['px.jpg','nx.jpg','py.jpg','ny.jpg','pz.jpg','nz.jpg'])\r\n                    //gl.toneMapping = THREE.Uncharted2ToneMapping\r\n                    //gl.setClearColor(new THREE.Color('#070810'))\r\n                }}>\r\n                <hemisphereLight skyColor=\"black\" groundColor={0xffffff} intensity={0.68} position={[0,50,0]} />\r\n                <directionalLight  position={[-8, 12, 8]} castShadow />\r\n                <axesHelper position={[0, 0, 0]} scale={[7,7,7]}/>\r\n                <Suspense fallback={null}>\r\n                    <Model spot={spot} stick={stick} scale={[7, 7, 7]} />\r\n                </Suspense>\r\n                <Stage />\r\n                <Stats />\r\n            </Canvas>\r\n            <Spot  ref={spot}/>\r\n            <Stick ref={stick}/>\r\n            <Controls />\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport {Walk};\r\n","import React, { useEffect, useCallback, useState, useRef } from \"react\"\r\nimport { Canvas, useFrame } from \"react-three-fiber\"\r\nimport { HTML } from \"drei\"\r\nimport { Stick, Signin } from './components'\r\nimport { useSignin, useUserio } from './hooks'\r\n\r\nconst Box = ({name, position, rotation}) =>{\r\n    const [active, setActive] = useState(false)\r\n    const ref = useRef()\r\n    useFrame(() => (ref.current.rotation.x = ref.current.rotation.y += 0.01))\r\n    useEffect(()=>{\r\n        ref.current.position.set(...position)\r\n    }, [position])\r\n    return (\r\n        <mesh name={name} ref={ref} scale={active?[1.5,1.5,1.5]:[1,1,1]} onClick={(e)=>setActive(!active)}>\r\n            <HTML>{name}</HTML>\r\n            <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\r\n            <meshStandardMaterial attach=\"material\" color={active ? 'hotpink' : 'orange'} />\r\n            <axesHelper scale={[1,1,1]}/>\r\n        </mesh>\r\n    )\r\n}\r\n\r\nconst World = (props) => {\r\n    const stick = useRef(null)\r\n    const assetPath = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/2666677/';\r\n    //const userbox = useRef(null)\r\n    const usergroup = useRef(null)\r\n    const [signin, setSignin] = useSignin()\r\n    const [user, setUser] = useState({name:signin.username,position:[0,0,0],rotasion:[0,0,0]})\r\n    const [users, setUsers] = useState([])\r\n    const userprocess = useCallback((name, func=null,include_self=false)=>{\r\n        const user = usergroup.current.children.find(v=>v.name===name)\r\n        if (include_self&&name===user.name) return\r\n        if (!user) setUsers(pre=>[...pre,{name,position:[0,0,0],rotation:[0,0,0]}])\r\n        if (func) func(user)\r\n    }, [usergroup])\r\n    const [userio, setUserio] = useUserio((message)=>{\r\n        userprocess(message.username, user=>{\r\n            console.log(user.position)\r\n            console.log(message.position);\r\n            if(user.position)user.position.set(...message.position)\r\n        })\r\n    })\r\n    return (\r\n        <React.Fragment>\r\n            <Canvas camera={[0,0,0]} style={{position:\"fixed\",width:\"100%\",height:\"100%\",backgroundColor:\"blue\",top:0,left:0}}>\r\n                <hemisphereLight skyColor=\"black\" groundColor={0xffffff} intensity={0.68} position={[0,50,0]} />\r\n                <directionalLight  position={[-8, 12, 8]} castShadow />\r\n                <axesHelper position={[0, 0, 0]} scale={[1,1,1]}/>\r\n                <group ref={usergroup}>\r\n                    <Box {...user}/>\r\n                    {users.map(u=><Box {...u}/>)}\r\n                </group>\r\n            </Canvas>\r\n            <Signin {...{signin,setSignin}} />\r\n            <Stick ref={stick} color={\"rgba(0,0,0)\"}\r\n                onDrag={(mx, my)=>{\r\n                    userprocess(signin.username, user=>{\r\n                        user.position.x += mx\r\n                        user.position.y += my\r\n                        const position = Object.values(user.position)\r\n                        const rotation = Object.values(user.rotation)\r\n                        setUserio({position,rotation, username:user.name})\r\n                    })\r\n                }}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport {World};\r\n","import axios from 'axios';\r\nimport * as Cookies from \"js-cookie\";\r\nimport {useRef, useMemo, useState, useEffect, useCallback} from 'react'\r\nimport { useCookie } from \"@use-hook/use-cookie\";\r\n\r\nconst useSignin = () => {\r\n    const host = '192.168.0.112:8000'//window.location.host//\r\n    const [username, setSigninname] = useCookie('username', '')\r\n    const [authtoken, setAuthtoken] = useCookie('authtoken', null)\r\n    const [signin, set] = useState({username, authtoken})\r\n    const headers = useMemo(()=>({'Content-Type':'application/json'}))\r\n    useEffect(()=>set({username, authtoken}), [username, authtoken])\r\n    const setSignin = useCallback((cred,isSignIn=true)=> {//cred={username, password, email}\r\n        if(!cred)\r\n            return Cookies.remove('authtoken')\r\n        const url =  `http://${host}/${isSignIn?\"auth\":\"api/user\"}/`\r\n        axios.post(url, cred, {headers}).then(res=>{\r\n            if ((res.status===200||res.status===201) && res.data.token){\r\n                setSigninname(cred.username, {path:\"/\"});\r\n                setAuthtoken(res.data.token, {path:\"/\"});\r\n            }//console.log(res);\r\n        }).catch(e=>{return 500})\r\n    }, [host, headers])\r\n    return [signin, setSignin]\r\n}\r\nexport {useSignin}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\nimport {World} from '../src'\r\n\r\n//Import style files into the src/index.js before the App.js file:\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\nReactDOM.render( <World /> , document.getElementById('root') );\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}