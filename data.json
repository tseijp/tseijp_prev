[{"model": "backend.notemodel", "pk": 1, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.188Z", "ja_text": "# TouchDesigner\u3067\u52d5\u753b\u751f\u6210\n\u5148\u65e5, \u5927\u5b66\u306e\u30aa\u30fc\u30d7\u30f3\u30ad\u30e3\u30f3\u30d1\u30b9\u3067GAN\u306b\u3088\u308b\u52d5\u753b\u751f\u6210\u306e\u30c7\u30e2\u767a\u8868\u3092\u3057\u307e\u3057\u305f\uff0e\n\nTouchDesigner\u4f7f\u3048\u3070\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u5b9f\u88c5\u3067\u304d\u308b\u304b\u306a...\u3068\u601d\u3063\u3066\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\n\u4ed6\u306e\u65b9\u306e\u30b3\u30fc\u30c9\u3092\u304b\u306a\u308a\u4f7f\u3063\u3066\u307e\u3059\u304c\uff0c\u3082\u3057\u3088\u3051\u308c\u3070\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u4ee5\u964d\u3067\u306f\u4e8c\u3064\u306e\u3053\u3068\u3092\u5171\u6709\u51fa\u6765\u305f\u3089\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\uff0e\u6700\u5f8c\u306b\u30c7\u30e2\u306b\u3064\u3044\u3066\u5c11\u3057\u66f8\u304d\u307e\u3059\uff01\n\n  1. TouchDesigner\u3067Python\u306e\u91cd\u3044\u51e6\u7406\u306e\u5b9f\u884c.\n  1. Python\u30e9\u30a4\u30d6\u30e9\u30ea\uff08PyTorch\u7b49\uff09\u3092\u5165\u308c\u308b.\n\nTouchDesigner\u3092\u521d\u3081\u3066\u6570\u304b\u6708\u306a\u306e\u306b, \u4f55\u6545\u304bqiita\u306e\u8a18\u4e8b\u306b\u767b\u9332\u3057\u3066\u307e\u3057\u305f\uff0eqiita\u3082\u521d\u3081\u3066\u3067\u3059\uff0e\u3042\u307e\u308a\u5b9f\u7528\u6027\u3042\u308a\u305d\u3046\u306a\u3053\u3068\u66f8\u3051\u307e\u305b\u3093\u3067\u3057\u305f(;_;)\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 2, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.191Z", "ja_text": "# \u91cd\u3044\u51e6\u7406\u306e\u5b9f\u884c\u306b\u3064\u3044\u3066\nTouchDesigner\u306f  Python\u304c\u4e2d\u306e\u51e6\u7406\u306b\u3082\u4f7f\u308f\u308c\u3066\u304a\u308a\uff0c\u4ed6\u3067\u91cd\u3044\u51e6\u7406\u3092\u3059\u308b\u3068\u30d5\u30ea\u30fc\u30ba\u3057\u307e\u3059\uff0e\n\u306a\u306e\u3067\uff0c\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u51e6\u7406\u3092\u3044\u304f\u3064\u304b\u306b\u5206\u3051\u307e\u3059\n\n\u524d\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u7d42\u4e86\u3092`chop_exec`\u3067\u53d6\u5f97\u3057\uff0c`td_utils.py`\u3067\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092\u6e21\u3057\u307e\u3059\uff0e\n\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089socket\u901a\u4fe1\u3067`udpin`\u306b\u9001\u308a\uff0c`datexec2`\u3067\u901a\u77e5\u3092\u6b21\u306e\u51e6\u7406\u306b\u9001\u308a\u307e\u3059\uff0e\n\n* [ref]\n* [td_utils.py\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb](https://gist.github.com/tseijp/caab3149c3c9fcbe1e45c466c1f41a53)\n* [\u53c2\u8003:TouchDesigner | Python and the Subprocess Module | Matthew Ragan](https://matthewragan.com/2019/08/14/touchdesigner-python-and-the-subprocess-module/)\n```\nimport subprocess\narg0 = '{{Python Path}}'\narg1 = '{{Python File}}'\nargs = [\"--%s %s\"%(a,b) for a,b in op('opt_test_full').rows() if a]\ncmd  = ' '.join( [arg0, arg1] + args)\nop('udpin2').par.clear.pulse()\nsubprocess.Popen(['python', 'util/td_utils.py',\n                  '-p',str(op('udpin2').par.port.val),\n                  '-d','%s'%project.folder,'-c',cmd,'-s','15'],\n                  cwd=dir,shell=True)\n```\n", "en_text": "", "note_object": 1, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 3, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.195Z", "ja_text": "pose\u306e\u52d5\u753b\u304b\u3089\u5168\u8eab\u306e\u52d5\u753b\u3092\u3059\u308b\u30d9\u30fc\u30b9COMP\u3067\u3059. \u524d\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u751f\u6210\u3092\u958b\u59cb\u3057\u307e\u3059\uff0e\n\u751f\u6210\u304c\u7d42\u308f\u3063\u305f\u3089\u6b21\u306e\u51e6\u7406\u306b\u901a\u77e5\u3055\u305b\u307e\u3059\uff0e\n\n![demo](https://res.cloudinary.com/dpimrj9cp/image/upload/v1575855138/pose2vid.jpg)\n", "en_text": "", "note_object": 1, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 4, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.198Z", "ja_text": "# TouchDeisnger\u3067\u306ePython\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\n`venv`\u3067`pip install` -> TouchDesinger\u5185\u3067Path\u3092\u901a\u3059 or `sys.path.append()`\n\n  1. TouchDesinger\u3067\u306f\u5185\u90e8\u306bNumpy\u3092\u542b\u3093\u3067\u304a\u308a\uff0c\u3057\u304b\u3082\u7d50\u69cb\u5185\u90e8\u3067\u4f9d\u5b58\u3057\u3066\u305d\u3046\u3067\u3057\u305f\uff0e\n  1. PyTorch\u3092\u5165\u308c\u305f\u3068\u304d\uff0c\u4e00\u7dd2\u306bNumpy\u304c\u5165\u3063\u3066\u304d\u3066\u4f7f\u3048\u306a\u304f\u306a\u308a\uff0c\u74b0\u5883\u69cb\u7bc9\u3057\u306a\u304a\u3057\u307e\u3057\u305f\uff0e\n\n\nconda\u3067\u4eee\u60f3\u74b0\u5883 -> TouchDesigner\u306e`site-packages`\u6d88\u3059 -> `mlink /d site-packages {{path-to-venv}}/site-packages`\n\n  1. \u3053\u306e\u65b9\u6cd5\u304c\u552f\u4e00PyTorch\u304c\u52d5\u3044\u305f\u306e\u3067\u3059\u304c\uff0c\u30c7\u30e2\u5f53\u65e5\u306bGPU\u5468\u308a\u3067\u8b0e\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3057\u305f\uff0e\n  (`libiomp5md.dll\u3001libiomp5mmd.pdb libiompstubs5md.dll` \u3092\u4e0a\u66f8\u304d\u3057\u305f\u3089\u52d5\u304d\u307e\u3057\u305f)\n  1. \u7d50\u5c40\u6700\u521d\u304b\u3089\u30d7\u30ed\u30bb\u30b9\u3092\u5206\u3051\u308c\u3070\u3088\u304b\u3063\u305f\u306a\u3068\u53cd\u7701\u3057\u3066\u307e\u3059\uff0e\u7d50\u8ad6\u306f\u307e\u3060\u51fa\u3066\u306a\u3044\u3067\u3059\u304c\uff0c\u81ea\u5206\u306a\u308a\u306e\u8003\u3048\u3092\u307e\u3068\u3081\u307e\u3057\u305f\uff0e\n", "en_text": "", "note_object": 1, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 5, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.202Z", "ja_text": "\u5de6\u4e0a\u304c\u751f\u6210\u7d50\u679c\u3067\u3059\uff0e\u30dc\u30fc\u30f3\u691c\u51fa\u304c\u3046\u307e\u304f\u3067\u304d\u3066\u306a\u3044\u306e\u3067\uff0c\u3046\u307e\u304f\u52d5\u753b\u304c\u751f\u6210\u3067\u304d\u306a\u304b\u3063\u305f\u3067\u3059\uff0e\uff08RealSense\u3068\u304b\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u65e9\u3044\u3057\u5b89\u5b9a\u3057\u3066\u3088\u304b\u3063\u305f\u304b\u3082\uff09\n![demo](https://res.cloudinary.com/dpimrj9cp/image/upload/v1575855510/output2.gif)\n", "en_text": "", "note_object": 1, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 6, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.205Z", "ja_text": "# Django in AWS and Nginx\n\n1. [ref]\n1.  [\u301020\u5206\u3067\u30c7\u30d7\u30ed\u30a4\u3011AWS EC2\u306bDjango+PostgreSQL+Nginx\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u30b5\u30b5\u30c3\u3068\u516c\u958b - Qiita](https://qiita.com/tachibanayu24/items/b8d73cdfd4cbd42c5b1d)\n1. [Django\u306e\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092ec2\u306b\u30c7\u30d7\u30ed\u30a4 - Qiita](https://qiita.com/kur/items/fb75354ee53671c79614)\n1. [\u3010AWS\u3067\u30b5\u30a4\u30c8\u5236\u4f5c5\u3011\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u8a2d\u5b9a - Qiita](https://qiita.com/HitomiHoshisaki/items/7d7345eb67390f16fed4)\n1. [AWS Route 53\u3092\u4f7f\u3063\u3066\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u306eWeb\u30da\u30fc\u30b8\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u3088\u3046 | Avinton\u30b8\u30e3\u30d1\u30f3\u682a\u5f0f\u4f1a\u793e](https://avinton.com/academy/route53-dns-vhost/)\n1. [\u304a\u540d\u524d.com\u3067\u53d6\u3063\u305f\u30c9\u30e1\u30a4\u30f3\u3092AWS\u306e\u300cRoute 53\u300d\u3067\u5229\u7528\u3059\u308b | melon.Lab](https://mel.onl/onamae-domain-aws-route-53/#toc2)\n1. [EC2\u4e0a\u306eDjango\u30a2\u30d7\u30ea\u3092\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u3001SSL\u5bfe\u5fdc\u3059\u308b - Qiita](https://qiita.com/moto2g/items/e6454a51d61570948171)\n\n\u4eca\u5e74\u306e\u6625\u306bDjango\u3092\u52c9\u5f37\u3057\u3066\uff0cgunicorn\u3068Heroku\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u534a\u5e74\u653e\u7f6e\u3057\u3066\u3044\u305f\u3089\u30b5\u30fc\u30d0\u30fc\u30a8\u30e9\u30fc\u3067\u52d5\u304b\u306a\u304f\u306a\u3063\u3066\u3044\u307e\u3057\u305f\uff0e\uff0e\uff0e\n\n[Advent Calendar](https://qiita.com/advent-calendar/2019/touchdesigner)\u306b\u53c2\u52a0\u3057\u305f\u304f\u3066\uff0c\u3067\u3082\u521d\u6295\u7a3f\u306f\u81ea\u5206\u306e\u30b5\u30a4\u30c8\u3067\u3057\u3066\u307f\u305f\u304b\u3063\u305f\u306e\u3067\uff0c\u7d50\u5c40\u5225\u306e\u30b5\u30fc\u30d0\u30fc\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u76f4\u3057\u307e\u3057\u305f\uff0e\uff08\u3042\u3068\uff0c\u590f\u306e\u5897\u7a0e\u524d\u306b\u99c6\u3051\u8fbc\u307f\u3067\u8cb7\u3063\u305f\u30c9\u30e1\u30a4\u30f3\u3082\u4f9b\u990a\u3057\u306a\u3044\u3068\u306a\u3068\u601d\u3063\u3066\u307e\u3057\u305f\uff0e\uff09\n\nAWS\u304cKyash\u3068\u3044\u3046\u30d0\u30fc\u30c1\u30e3\u30ebVisa\u30ab\u30fc\u30c9\u3092\u4f7f\u3048\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u4e0b\u306e\u30b5\u30a4\u30c8\u901a\u308a\u306b\u3057\u305f\u3089\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\uff08\u7279\u306b\u6700\u521d\u306e\u30b5\u30a4\u30c8\u51c4\u3044\uff0120\u5206\uff01\uff09\uff0eAWS\u3067\u521d\u3081\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u306e\u3067\uff0c\u4f5c\u696d\u4e2d\u306e\u30e1\u30e2\u3092\u307e\u3068\u3081\u307e\u3057\u305f\uff0e\n", "en_text": "# Django in AWS and Nginx with \u304a\u540d\u524d.com\n\u4eca\u5e74\u306e\u6625\u306bDjango\u3092\u52c9\u5f37\u3057\u3066\uff0cgunicorn\u3068Heroku\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u534a\u5e74\u653e\u7f6e\u3057\u3066\u3044\u305f\u3089\u30b5\u30fc\u30d0\u30fc\u30a8\u30e9\u30fc\u3067\u52d5\u304b\u306a\u304f\u306a\u3063\u3066\u3044\u307e\u3057\u305f\uff0e\uff0e\uff0e\n\n[Advent Calendar](https://qiita.com/advent-calendar/2019/touchdesigner)\u306b\u53c2\u52a0\u3057\u305f\u304f\u3066\uff0c\u3067\u3082\u521d\u6295\u7a3f\u306f\u81ea\u5206\u306e\u30b5\u30a4\u30c8\u3067\u3057\u3066\u307f\u305f\u304b\u3063\u305f\u306e\u3067\uff0c\u7d50\u5c40\u5225\u306e\u30b5\u30fc\u30d0\u30fc\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u76f4\u3057\u307e\u3057\u305f\uff0e\uff08\u3042\u3068\uff0c\u590f\u306e\u5897\u7a0e\u524d\u306b\u99c6\u3051\u8fbc\u307f\u3067\u8cb7\u3063\u305f\u30c9\u30e1\u30a4\u30f3\u3082\u4f9b\u990a\u3057\u306a\u3044\u3068\u306a\u3068\u601d\u3063\u3066\u307e\u3057\u305f\uff0e\uff09\n\nAWS\u304cKyash\u3068\u3044\u3046\u30d0\u30fc\u30c1\u30e3\u30ebVisa\u30ab\u30fc\u30c9\u3092\u4f7f\u3048\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u4e0b\u306e\u30b5\u30a4\u30c8\u901a\u308a\u306b\u3057\u305f\u3089\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\uff08\u7279\u306b\u6700\u521d\u306e\u30b5\u30a4\u30c8\u51c4\u3044\uff0120\u5206\uff01\uff09\uff0eAWS\u3067\u521d\u3081\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u306e\u3067\uff0c\u4f5c\u696d\u4e2d\u306e\u30e1\u30e2\u3092\u307e\u3068\u3081\u307e\u3057\u305f\uff0e\n\n### ref\n1.  [\u301020\u5206\u3067\u30c7\u30d7\u30ed\u30a4\u3011AWS EC2\u306bDjango+PostgreSQL+Nginx\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u30b5\u30b5\u30c3\u3068\u516c\u958b - Qiita](https://qiita.com/tachibanayu24/items/b8d73cdfd4cbd42c5b1d)\n1. [Django\u306e\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092ec2\u306b\u30c7\u30d7\u30ed\u30a4 - Qiita](https://qiita.com/kur/items/fb75354ee53671c79614)\n1. [\u3010AWS\u3067\u30b5\u30a4\u30c8\u5236\u4f5c5\u3011\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u8a2d\u5b9a - Qiita](https://qiita.com/HitomiHoshisaki/items/7d7345eb67390f16fed4)\n1. [AWS Route 53\u3092\u4f7f\u3063\u3066\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u306eWeb\u30da\u30fc\u30b8\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u3088\u3046 | Avinton\u30b8\u30e3\u30d1\u30f3\u682a\u5f0f\u4f1a\u793e](https://avinton.com/academy/route53-dns-vhost/)\n1. [\u304a\u540d\u524d.com\u3067\u53d6\u3063\u305f\u30c9\u30e1\u30a4\u30f3\u3092AWS\u306e\u300cRoute 53\u300d\u3067\u5229\u7528\u3059\u308b | melon.Lab](https://mel.onl/onamae-domain-aws-route-53/#toc2)\n1. [EC2\u4e0a\u306eDjango\u30a2\u30d7\u30ea\u3092\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u3001SSL\u5bfe\u5fdc\u3059\u308b - Qiita](https://qiita.com/moto2g/items/e6454a51d61570948171)\n\n", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 7, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.208Z", "ja_text": "# AWS EC2\n\u6700\u521d\u9593\u9055\u3048\u3066Ubuntu\u3092\u9078\u3093\u3067\u306a\u304f\u3066\u6c17\u3065\u304f\u306e\u306b\u6642\u9593\u304b\u304b\u308a\u307e\u3057\u305f\uff0e\uff0e\uff0e(;__;)\n\n1. \u30b5\u30fc\u30d3\u30b9(\u5de6\u4e0a) -> EC2 -> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9(\u5de6\u5074)->\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7ba1\u7406\u753b\u9762\u3078\n1. [\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210] \u3092\u62bc\u4e0b -> `AMI(Amazon Machine Image)`\u306bUbuntu\u9078\u629e -> \u65b0\u898f\u306b\u30ad\u30fc\u3092\u4f5c\u6210\u3059\u308b -> `aws_ubuntu.pem` \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n1. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u72b6\u614b\u304crunning\u304b\u3092\u78ba\u8a8d\n1. `chmod 400 aws-ubuntu.pem`:\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u5909\u66f4->\u81ea\u5206\u306e`~/.ssh`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u304b\u306b\u4fdd\u7ba1\n1. `ssh -i \"~/.ssh/aws_ubuntu.pem\" ubuntu@<ip address>`:\u30e6\u30fc\u30b6\u30fc\u540d\u306fubuntu\u4ee5\u5916\u3060\u3068ec2-user\u3068\u304b\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 8, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.212Z", "ja_text": "# Ubuntu env\nUbuntu\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3057\uff0c\u4f5c\u3063\u305f\u30e6\u30fc\u30b6\u30fc\u3067ssh\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\n1. `sudo -i`\n1. `apt update -y`\n1. `adduser <app-user>` : ubuntu\u4ee5\u5916\u306fuseradd\u3067\u307e\u305f\u9055\u3046\u3089\u3057\u3044\n1. `gpasswd -a user_name sudo` : sudo \u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\n1. `usermod -aG sudo <app-user>`\n1. `cp -r /home/ec2-user/.ssh /home/<app-user>/.ssh`\n1. `chown -R <app-user>:<app-user> /home/<app-user>/.ssh`\n1. `sudo su <app-user>`\n1. `chmod 0600 ~/.ssh/authorized_keys`\n\n# Python env\n\n1. `apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib`\n1. `sudo -H pip3 install virtualenv`\n1. `virtualenv <venv_name>`\n1. `source <venv_name>/bin/activate`\n1. `pip install django gunicorn psycopg2 psycopg2-binary Pillow`\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 9, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.215Z", "ja_text": "# PostgreSQL\nHeroku\u3068\u304b\u3068\u3060\u3044\u305f\u3044\u540c\u3058\u3067\u3059\uff0e\n\n1. `sudo -u postgres psql`\n1. `CREATE DATABASE <DB_NAME>;`\n1. `CREATE USER <DB_USERNAME> WITH PASSWORD '<DB_PASSWORD>';`\n1. `ALTER ROLE <DB_USERNAME> SET client_encoding TO 'utf8';`\n1. `ALTER ROLE <DB_USERNAME> SET default_transaction_isolation TO 'read committed';`\n1. `ALTER ROLE <DB_USERNAME> SET timezone TO 'UTC+9';`\n1. `GRANT ALL PRIVILEGES ON DATABASE <DB_NAME> TO <DB_USERNAME>;`\n\n\n```\n...\nALLOWED_HOSTS = ['{{ip adress}}']\n...\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': '{{DB_NAME}}',\n        'USER': '{{DB_USERNAME}}',\n        'PASSWORD': '{{DB_PASSWORD}}',\n        'HOST': 'localhost',\n        'PORT': '',\n}}\n```\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 10, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.219Z", "ja_text": "# AWS\n1. \u5de6\u30ab\u30e9\u30e0\u304b\u3089\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 -> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\n1. \u4f5c\u6210\u3057\u305f\u3082\u306e\u3092\u53f3\u30af\u30ea\u30c3\u30af -> \u30eb\u30fc\u30eb\u306e\u4f5c\u6210 ->\n    1. `\u30ab\u30b9\u30bf\u30e0TCP\u25bd`,\n    1. `TCP`,\n    1. `8000`\n    1. `0,0,0,0/0`\n1. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 -> \u53f3\u30af\u30ea\u30c3\u30af -> \u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0 -> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u5909\u66f4->\u4f5c\u6210\u3057\u305f\u3082\u306e\u3092\u9078\u629e\n\n1. `python3 manage.py runserver 0.0.0.0:8000`\n1. `http://<your_ip>:8000`\u3067\u78ba\u8a8d->`deactivate`:venv\u306c\u3051\u308b\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 11, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.223Z", "ja_text": "# gunicorn\ngunicorn\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\uff0e\u81ea\u5206\u306f\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3068\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\u3057\u3066\u307e\u3059\uff0egunicorn\u306e\u5834\u6240\u3092\u9593\u9055\u3048\u3066\u306f\u307e\u3063\u305f\u306e\u3067\u6c17\u3092\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\uff0e\uff08venv\u4f7f\u3063\u305f\u304b\u3067\u5909\u308f\u308a\u307e\u3059\uff09\n\n1. `sudo vi /etc/systemd/system/gunicorn.service`\n1. `sudo systemctl start gunicorn.service`\n1. `sudo systemctl enable gunicorn`\n\n```\n[Unit]\nDescription=gunicorn daemon\nAfter=network.target\n[Service]\nUser=ubuntu\nGroup=www-data\nWorkingDirectory=/home/ubuntu/<PJ_NAME>\nExecStart={{`which gunicorn` \u3067\u3067\u305fpath. **/gunicorn\u3068\u304b}}\n--workers 3 --bind unix:/home/{{user}}/{{prj}}/{{prj}}.sock\n{{prj_name}}.wsgi:application\n--access-logfile \"{{any_dir}}/access.log\"\n--error-logfile \"{{any_dir}}/error.log\"\n[Install]\nWantedBy=multi-user.target\n\n```\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 12, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.226Z", "ja_text": "# nginx\nnginx\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\uff0e\u4e00\u5ea6\u3057\u305f\u3089\u3042\u3093\u307e\u308a\u89e6\u308c\u306a\u3044\u3067\u3059\uff0evi\u3092\u4f7f\u3044\u307e\u3059\ud83d\udd25\n\n1. `sudo vi /etc/nginx/sites-available/<PJ_NAME>`\n1. `sudo ln -s /etc/nginx/sites-available/<PJ_NAME> /etc/nginx/sites-enabled/`\n1. `sudo systemctl restart nginx`\n1. `sudo ufw delete allow 8000`\n1. `sudo ufw allow 'Nginx Full'`\n\n```\n\nserver {\n    listen 80;\n    server_name <EC2\u306e\u30d1\u30d6\u30ea\u30c3\u30afIP>;\n    location = /favicon.ico {access_log off; log_not_found off;}\n    location /static/ {\n        root /home/ubuntu/<PJ_NAME>;\n    }\n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/home/ubuntu/<PJ_NAME>/<PJ_NAME>.sock;\n    }\n}\n```\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 13, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.229Z", "ja_text": "# ec2\n1. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 -> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u30bf\u30a4\u30d7: HTTP\u306e\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\n1. \uff08\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9-> \u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0 -> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u5909\u66f4->\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u9078\u629e\uff09\u2190\u5148\u307b\u3069\u3057\u3066\u306a\u304b\u3063\u305f\u3089\n\n### Elastic IPs\n1. \u30b5\u30a4\u30c9\u30e1\u30cb\u30e5\u30fc -> Elastic IPs\u304b\u3089\u30dd\u30c1\u30dd\u30c1\n1. Elastic IP \u30a2\u30c9\u30ec\u30b9\u306e\u5272\u308a\u5f53\u3066 -> \u5272\u308a\u5f53\u3066\n1. Elastic IP \u30a2\u30c9\u30ec\u30b9\u306e\u95a2\u9023\u4ed8\u3051 -> \u95a2\u9023\u4ed8\u3051\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 14, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.233Z", "ja_text": "# domain\n\u30c9\u30e1\u30a4\u30f3\u3068\u30b5\u30fc\u30d0\u30fc\u306e\u7e4b\u3052\u65b9\u304c\u3044\u308d\u3044\u308d\u3042\u3063\u3066\u6df7\u4e71\u3057\u307e\u3059\u304c\uff0c\n\n* [\u304a\u540d\u524d.com\u3067\u306e\u30c9\u30e1\u30a4\u30f3\u53d6\u5f97\u3068Route 53\u3068\u306e\u9023\u643a(\u304a\u540d\u524d.com\u3078\u306eRoute 53DNS\u767b\u9332) - \u306e\u3074\u3074\u306e\u30e1\u30e2](http://nopipi.hatenablog.com/entry/2019/01/03/132701)\n\n\u306b\n\u5404\u30e1\u30ea\u30c3\u30c8\u30c7\u30e1\u30ea\u30c3\u30c8\u304c\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u3066\uff0c\u7d50\u5c40\u30cd\u30fc\u30e0\u30b5\u30fc\u30d0\u30fc\u3092\u3044\u3058\u308b\u306e\u304c\u304c\u4e00\u756a\u697d\u3067\u3057\u305f\n\n\n1. AWS SERVICE -> Route 53 -> DNS \u7ba1\u7406 -> Create Hosted Zone -> \u53d6\u5f97\u3057\u305f\u30c9\u30e1\u30a4\u30f3\u3092\u8a18\u5165 -> create\n1. \u30db\u30b9\u30c8\u30be\u30fc\u30f3\u306e\u8a73\u7d30 -> \u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u306e\u4f5c\u6210 -> type:A, value:<\u53d6\u5f97\u3057\u305fElastic IP\u8a18\u5165> -> \u4f5c\u6210\n1. \u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u306e\u4e00\u89a7\u306b\u5143\u3005\u3042\u308bType:NS\u306e\u56db\u3064\u306evalue\uff08ns-\\*\\*.\\*\\*.\\*\\*\uff09\u3092\u63a7\u3048\u3066\u304a\u304f\n1. \u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u306e\u4e00\u89a7\u306e\u3044\u305a\u308c\u3092\u9078\u629e -> TTL\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u6642\u9593\uff09\u3092300s\u306b\u8a2d\u5b9a\n1. \u304a\u540d\u524d.com -> \u30c9\u30e1\u30a4\u30f3\u4e00\u89a7 -> \u53d6\u5f97\u3057\u305f\u30c9\u30e1\u30a4\u30f3\u3092\u9078\u629e -> \u30cd\u30fc\u30e0\u30b5\u30fc\u30d0\u30fc\u60c5\u5831\n1. \u4ed6\u306e\u30cd\u30fc\u30e0\u30b5\u30fc\u30d0\u3092\u5229\u7528 -> \u30cd\u30fc\u30e0\u30b5\u30fc\u30d0\u306b\u5148\u307b\u3069\u306eNS\u306e\u56db\u3064\u306evalue -> \u8a2d\u5b9a\n1. `sudo vi /etc/nginx/sites-available/<PJ_NAME>` -> `server_name <your doman> <your Elastic IP>;`\n1. `vi <PJ_NAME>/<settings file>.py` -> `ALOWED_HOST=[\"<DOMAIN>\",\"<Elastic IP>\"]`\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 15, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.237Z", "ja_text": "# SSL\nHTTPS\u3067\u7e4b\u304c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\n1. [certbot](https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx)\u3067Ubuntu\u3068Nginx\u9078\u629e->\u30b3\u30de\u30f3\u30c9\u4e0a\u304b\u3089\u5b9f\u884c\n1. `sudo add-apt-repository universe`\u304c\u3067\u304d\u306a\u3044\u306e\u3067\uff0cURL\u304b\u3089\u76f4\u63a5\u5165\u308c\u308b\n1. `sudo certbot --nginx`\u3067\u30dd\u30c1\u30dd\u30c1 -> `whether or not to redirect HTTP`\u30672\u3092\u9078\u629e\n1. `sudo certbot renew --post-hook \"systemctl restart nginx\"`:\u3092\u8a66\u3059\n1. `sudo vi /etc/cron.d/letsencrypt` -> `0 1 * * 1 sudo certbot renew --post-hook \"systemctl restart nginx\"`\n1. ec2 -> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7 -> \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u30bf\u30a4\u30d7: HTTPS\u306e\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\n", "en_text": "", "note_object": 6, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 16, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.240Z", "ja_text": "# pipenv\u3067\u7ba1\u7406\u3057\u306a\u304a\u3059\npip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305flib\u3092\u6d88\u3057\u3066\uff0c\u518d\u3073install\u3057\u3088\u3046\u3068\u601d\u3046.\nPyTorch\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u65b0\u3057\u304f\u3057\u3088\u3046\u3068\u3057\u305f\u3089\uff0csol\u30b5\u30fc\u30d0\u30fc\u306e\u30e1\u30e2\u30ea\u304c30GB\u3092\u8d85\u3048\u3066\u3066\uff0cdatasets\u3084checkpoints\u3092\u6d88\u3057\u3066\u304b\u3089\u3082\u3046\u4e00\u5ea6\u8abf\u3079\u3066\u307f\u3066\u308222GB\u3082\u4f7f\u3063\u3066\u3044\u305f\uff0e\n\n\u901a\u5e38\u306a\u3089`pip freeze > instaled.txt`->`pip uninstall -r installed.txt`\u3067\n\u4f7f\u3063\u3066\u3044\u306a\u3044lib\u3084\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6d88\u305b\u308b\u3089\u3057\u3044\u304c\uff0c\u666e\u6bb5--user\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u308a\uff0c\u4e00\u6c17\u306b\u524a\u9664\u3057\u3088\u3046\u3068\u3059\u308b\u3068Permission Error\u3067\u51e6\u7406\u304c\u6b62\u307e\u3063\u3066\u3057\u307e\u3046\u306e\u3067\uff0cPython\u3067\u306a\u3093\u3068\u304b\u3057\u3088\u3046\u3068\u601d\u3063\u305f\uff0e\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 17, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.243Z", "ja_text": "```\n[***@sol ~]$ du -h -d 3 | sort -hr | head -25\n22G     .\n12G     ./IED_HOME\n9.1G    ./.ced_ubuntu\n5.7G    ./IED_HOME/notebook\n5.2G    ./IED_HOME/notebook/project\n3.9G    ./.ced_ubuntu/.cache\n3.3G    ./IED_HOME/.cache\n2.9G    ./IED_HOME/.local\n2.9G    ./.ced_ubuntu/.cache/pip\n2.7G    ./IED_HOME/.local/lib\n2.7G    ./IED_HOME/.cache/pip\n2.7G    ./.ced_ubuntu/.conda/pkgs\n2.7G    ./.ced_ubuntu/.conda\n1.9G    ./.ced_ubuntu/.local\n1.8G    ./.ced_ubuntu/.local/lib\n549M    ./IED_HOME/.cache/torch\n549M    ./.ced_ubuntu/.torch/models\n549M    ./.ced_ubuntu/.torch\n549M    ./.ced_ubuntu/.cache/torch\n464M    ./.cache\n445M    ./.cache/mozilla/firefox\n445M    ./.cache/mozilla\n374M    ./.ced_ubuntu/.cache/mozilla\n281M    ./IED_HOME/notebook/y7_test_super_slomo\n206M    ./IED_HOME/.local/share\n```\n", "en_text": "", "note_object": 16, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 18, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.246Z", "ja_text": "python\u304b\u3089pip\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\uff0c\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\uff0e\n\n```\n\nimport os\nimport sys\nimport subprocess\ndef run(cmd):\n    proc = subprocess.Popen(cmd, shell=True,\n                            stdout=subprocess.PIPE,\n                            stderr=subprocess.STDOUT)\n    buf = []\n    while True:\n        line = proc.stdout.readline().decode('utf-8')\n        buf.append(line)\n        sys.stdout.write(line)\n        if not line and proc.poll() is not None:\n            break\n    return ''.join(buf)\n```\n", "en_text": "", "note_object": 16, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 19, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.250Z", "ja_text": "\u6b21\u306b\uff0c\u73fe\u5728\u306elibrary\u3092\u53d6\u5f97\u3057\uff0c\u914d\u5217\u3092\u8fd4\u3059\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\uff0e\n\n```\ndef get_libs():\n    run('python3 -m pip freeze > libs.txt')\n    with open(\"libs.txt\", 'r') as f:\n        return [l.rstrip('\n') for l in f.readlines()]\n\n```\n\n\u305d\u308c\u3067\u3053\u3046\n```\nif __name__=='__main__':\n    pri_libs = get_libs()\n    # delete libs\n    cmd = [\"python3 -m pip uninstall %s -y\"%l.split('==')[0] for l in installed_lib]\n    _=[print(run(c)) for c in cmd]\n    del_libs = [l for l in get_libs() if not l in pri_libs]\n    # result\n    libs_len = tuple(len(l) for l in [pri_libs, get_libs(), del_libs])\n    print(\"\npri:%s\tnow:%s\tdel:%s\"%libs_len)\n    _=[print(\"\tdel:\",l) for l in del_libs ]\n\n```\n", "en_text": "", "note_object": 16, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 20, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.253Z", "ja_text": "\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\u3068\uff0c\u3061\u3087\u3063\u3068\u3078\u3063\u305f\u304b\u3082\n`pri:250,now:209`\n```\n22->20G     .\n12->7.4G    ./.ced_ubuntu\n1.9G->0?    ./.ced_ubuntu/.local\n1.8G->0?    ./.ced_ubuntu/.local/lib\n\n```\n\n`conda clean --all`\u3057\u305f\u3089\u3061\u3087\u3063\u3068\u6e1b\u3063\u305f\n```\n20->18G     .\n7.4->4.8G    ./.ced_ubuntu\n1.9G->177M    ./.ced_ubuntu/.local\n1.8G->?M    ./.ced_ubuntu/.local/lib\n\n```\n\nied\u3067\u3082ced\u3068\u540c\u69d8\u306b\u305f\u3081\u3057\u305f\uff0e\n`pri:249 now:239 del:3`\n```\n\n18->16G     .\n12->11G     ./IED_HOME\n2.9G->0?M    ./.ced_ubuntu/.cache/pip\n2.9->1.5G    ./IED_HOME/.local\n2.7G->0?M    ./IED_HOME/.local/lib\n2.7->1.3G    ./IED_HOME/.local/lib\n\n\n```\n", "en_text": "", "note_object": 16, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 21, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.257Z", "ja_text": "`.cache`\u524a\u9664\u3057\u305f\u3089\u3059\u3054\u3044\u3053\u3068\u306b\u306a\u3063\u305f\uff08\u6d88\u3057\u3066\u3044\u3044\u306e\u304b\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\u3067\u3059\uff09\n```\n8.5G    .\n7.3G    ./IED_HOME\n5.7G    ./IED_HOME/notebook\n5.2G    ./IED_HOME/notebook/project\n1.5G    ./IED_HOME/.local\n1.3G    ./IED_HOME/.local/lib\n899M    ./.ced_ubuntu\n549M    ./.ced_ubuntu/.torch/models\n549M    ./.ced_ubuntu/.torch\n281M    ./IED_HOME/notebook/y7_test_super_slomo\n206M    ./IED_HOME/.local/share\n177M    ./.ced_ubuntu/.local\n123M    ./.local\n114M    ./.local/share\n113M    ./.local/share/Trash\n110M    ./.mozilla/firefox/57lndhxp.default\n110M    ./.mozilla/firefox\n110M    ./.mozilla\n90M     ./.ced_ubuntu/.local/lib\n87M     ./.ced_ubuntu/.local/share\n75M     ./IED_HOME/notebook/y5_opencw\n64M     ./IED_HOME/notebook/y11_test_dence_pose\n53M     ./.ced_ubuntu/.old/\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n53M     ./.ced_ubuntu/.old\n45M     ./.torch/models\n\n```\n", "en_text": "", "note_object": 16, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 22, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.260Z", "ja_text": "# pipenv\u3067\u74b0\u5883\u69cb\u7bc9\nsudo\u3067\u306a\u3044\u74b0\u5883\u3067virtualenv\u3060\u3068 \u69cb\u6587\u30a8\u30e9\u30fc\u304b\u304d\u3087\u304b\u304c\u306a\u3044\u3068\u3044\u308f\u308c\u308b\u306e\u3067\u4f7f\u3048\u306a\u304b\u3063\u305f\uff0e\n\n1. `python3 -m pip install pipenv`\n1. `python3 -m pipenv install --python 3.6`\n1. `python3 -m pipenv shell`\n1. `python --version` -> 3.6.9\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\n1. `pip install torch==1.2.0 torchvision==0.4.0`\n1. `pip install numpy==1.17` 1.18\u3060\u3068\u30a8\u30e9\u30fc\n1. `pip install pillow==6.2.2` : 7.0\u3060\u3068\u30a8\u30e9\u30fc\n1. `pip install opencv-python scipy pytz`\n", "en_text": "", "note_object": 16, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 23, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.264Z", "ja_text": "# few-shot-vid2vid\n\u81ea\u5206\u7528\u306e\u30e1\u30e2\u3067\u3059\uff0e\u82f1\u5f31\u306a\u306e\u3067\uff0c\u3056\u3063\u304f\u308a\u8aad\u3093\u3067\uff0c\u91cd\u8981\u305d\u3046\u306a\u90e8\u5206\u3092\u3072\u305f\u3059\u3089google\u5148\u751f\u306b\u805e\u3044\u3066\u8aad\u3093\u3067\u307e\u3059\uff0eGAN\u5168\u304f\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u9593\u9055\u3063\u3066\u308b\u7b87\u6240\u591a\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u7121\u65ad\u8ee2\u8f09\u306a\u306e\u30675\u5272\u7406\u89e3\u51fa\u6765\u305f\u3089\u6d88\u3057\u307e\u3059\ud83d\udd25\n\n* [ref]()\n* [arXiv](https://arxiv.org/abs/1910.12713)\n* [youtube](https://youtu.be/8AZBuyEuDqc)\n* [github](https://github.com/NVlabs/few-shot-vid2vid)\n\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 24, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.267Z", "ja_text": "# Introdunction\n1. vid2vid: \u4eba\u9593\u306e\u30dd\u30fc\u30ba\u3084\u30de\u30b9\u30af\u306e\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u3092\u5165\u529b\u30d3\u30c7\u30aa\u3068\u3057\uff0c\u30d5\u30a9\u30c8\u30ea\u30a2\u30eb\u306a\u30d3\u30c7\u30aa\u306b\u5909\u63db\u3059\u308b\u30bf\u30b9\u30af\uff0e\u5927\u304d\u306a\u5236\u9650\u304c\u3042\u308b\uff0e\n  1.  \u751f\u6210\u3057\u305f\u3044\u4eba\u3084\u30b7\u30fc\u30f3\u306e\u591a\u6570\u306e\u753b\u50cf\u304c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u5fc5\u8981\n  1. \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u305f\u4eba\u306e\u52d5\u753b\u306e\u307f\u5408\u6210\u3067\u304d\u308b\n1.  `Typically, to obtain such a model, one begins with collecting a training dataset for the target task.` !?!?\n\n1. \u65b0\u305f\u306a\u5165\u529b\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30d3\u30c7\u30aa\u3078\u306e\u4e00\u822c\u5316\u306f\u4e0d\u5341\u5206\u3067\u3042\u308b!?\n  1. \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u88ab\u9a13\u8005\u306e\u52d5\u753b\u3092\u751f\u6210\u3059\u308b\u306a\u3069\u76ee\u306b\u898b\u3048\u306a\u3044\u30c9\u30e1\u30a4\u30f3\u306b\u4e00\u822c\u5316\u3067\u304d\u308b\u30e2\u30c7\u30eb\u3092\u76ee\u6307\u3059\u3079\u304d\n  1. vid2vid\u30e2\u30c7\u30eb\u304c\u5c11\u6570\u306e\u753b\u50cf\u3060\u3051\u3067\u4e00\u822c\u5316\u3067\u304d\u306a\u3044\u5834\u5408\uff0c\u591a\u304f\u306e\u753b\u50cf\u3092\u53ce\u96c6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n", "en_text": "", "note_object": 23, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 25, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.270Z", "ja_text": "1. attention(\u6ce8\u76ee\u306e\uff1f)\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u4f7f\u3063\u305f\u65b0\u3057\u3044Network weight\u751f\u6210\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4ecb\u3057\u3066\u3001\u4e00\u822c\u5316\u3092\u5b9f\u73fe.\n1. vid2vid\u304ctrain\u30c7\u30fc\u30bf\u3068\u540c\u3058\u30d3\u30c7\u30aa\u306e\u307f\u5408\u6210\u3067\u304d\u308b\u306e\u306b\u5bfe\u3057\uff0c\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f,\u30d3\u30c7\u30aa\u5408\u6210\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u52d5\u7684\u306b\u69cb\u6210.\n1. \u30b5\u30f3\u30d7\u30eb\u753b\u50cf\u3092\u4f7f\u7528\u3057\u3066\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u91cd\u307f\u3092\u751f\u6210\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0.\n1. \u751f\u6210\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b66\u7fd2\u3092\u4fc3\u9032\u3059\u308b\u305f\u3081,the learning objective function(\u5b66\u7fd2\u76ee\u7684\u95a2\u6570\uff1f)\u3092\u614e\u91cd\u306b\u8a2d\u8a08\u3059\u308b\u3002\n", "en_text": "", "note_object": 23, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 26, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.274Z", "ja_text": "# Related work\n### GAN\n\n1. GANs [[13](https://arxiv.org/abs/1612.05424)]: few-shot vid2vid model\u306e\u57fa\u76e4\uff0e\u30ce\u30a4\u30ba\u5206\u5e03\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u3092\u5909\u63db\u3057\u3066\u51fa\u529b\n1. conditional GAN framework[[13](https://arxiv.org/abs/1612.05424), [42](https://arxiv.org/abs/1511.06434), [32](https://arxiv.org/abs/1606.07536), [14](https://arxiv.org/abs/1704.00028), [25](https://arxiv.org/abs/1812.04948)]: \u5165\u529b\u30c7\u30fc\u30bf\u306b\u57fa\u3065\u3044\u3066\u51fa\u529b\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3067\uff0c\u51fa\u529b\u3092\u3088\u308a\u67d4\u8edf\u306b\u5236\u5fa1\uff0e\u5165\u529b\u30c7\u30fc\u30bf\u5f62\u5f0f\u306f\u3055\u307e\u3056\u307e..\uff0e\n  1. images [[22](https://arxiv.org/abs/1611.07004), [68](https://arxiv.org/abs/1703.10593), [30](https://arxiv.org/abs/1703.00848), [41](https://arxiv.org/abs/1903.07291)]\n  1. categorical labels [39, 35, 65, 4]\n  1. textual descriptions [43, 66, 62]\n  1. videos [7, 12, 57, 67]: \u4eca\u56de\u4f7f\u7528\u3057\u305f\u304c\u3053\u308c\u306f\u5165\u529b\u52d5\u753b\u304c\u4e00\u3064\uff0e\n\n### Video generative models\n\n1.  unconditional video synthesis models [54, 45, 51]:\u30e9\u30f3\u30c0\u30e0\u30ce\u30a4\u30ba\u304b\u3089\u52d5\u753b\u306b\u5909\u63db\n2. future video prediction models [48, 24, 11, 34, 33, 63, 55, 56, 10, 53, 29, 27, 18, 28, 16, 40]:\u672a\u6765\u306e\u30d3\u30c7\u30aa\u30d5\u30ec\u30fc\u30e0\u3092\u89b3\u5bdf\u3055\u308c\u305f\u3082\u306e\u306b\u57fa\u3065\u3044\u3066\u751f\u6210\n3. vid2vid models [57, 7, 12, 67]: semantic\u5165\u529b\u52d5\u753b\u304b\u3089\u30d5\u30a9\u30c8\u30ea\u30a2\u30eb\u306a\u52d5\u753b\u306b\u5909\u63db\uff0e\u898b\u3048\u306a\u3044\u30c9\u30e1\u30a4\u30f3\uff08\u5b66\u7fd2\u3057\u3066\u3044\u306a\u3044\u30e2\u30c7\u30eb\uff09\u306e\u30d3\u30c7\u30aa\u3092\u5408\u6210\u3067\u304d\u308b\u3053\u3068\u304c\u65b0\u898f\u6027.\n", "en_text": "", "note_object": 23, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 27, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.277Z", "ja_text": "### Adaptive networks\n\u91cd\u307f\u306e\u4e00\u90e8\u304c\u5165\u529b\u30c7\u30fc\u30bf\u306b\u57fa\u3065\u3044\u3066\u52d5\u7684\u306b\u8a08\u7b97\u3055\u308c\u308bnetworks. \u901a\u5e38\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u306f\u7570\u306a\u308binductive bias(\u8a98\u5c0e\u30d0\u30a4\u30a2\u30b9?)\u304c\u3042\u308b\uff0e\n\n  1. sequence modeling [15],\n  1. image filtering [23, 59, 49]\n  1. frame interpolation [38, 37]\n  1. neural architecture search [64]:aply\n\n### Human pose transfer\n\n1. \u7570\u306a\u308b\u30dd\u30fc\u30ba\u306e\u4eba\u9593\u306e\u753b\u50cf\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u898b\u3048\u306a\u3044\u30dd\u30fc\u30ba\u306e\u4eba\u9593\u3092\u5408\u6210\n1. Human pose transfer\u306e\u65b9\u6cd5\u306f\u4eba\u4f53\u306e\u4e8b\u524d\u512a\u5148\u9806\u4f4d\u3092\u4e3b\u306b\u5229\u7528\u3059\u308b\n  1. \u8eab\u4f53\u90e8\u5206\u30e2\u30c7\u30ea\u30f3\u30b0[1]\n  1. \u4eba\u9593\u306e\u8868\u9762\u30d9\u30fc\u30b9\u306e\u5ea7\u6a19\u30de\u30c3\u30d4\u30f3\u30b0[36]\n1. \u4eca\u56de\u306f\u5165\u529bsemantic\u30d3\u30c7\u30aa\u306e\u307f\u4f7f\u7528\u3057\uff0c\u7279\u5b9a\u306e\u4eba\u4f53\u512a\u5148\u9806\u4f4d\u306f\u4f7f\u7528\u3057\u306a\u3044\uff0e\u30b9\u30c8\u30ea\u30fc\u30c8\u30b7\u30fc\u30f3\u30d3\u30c7\u30aa\u5408\u6210\u306a\u3069\u306e\u4ed6\u306evid2vid\u30bf\u30b9\u30af\u306b\u540c\u3058\u30e2\u30c7\u30eb\u3092\u76f4\u63a5\u4f7f\u7528\u3067\u304d\u308b\uff0e\uff0e\uff0e\uff01\uff1f\uff01\uff1f\u3048\n1. (\u65e2\u5b58\u306e\u4eba\u9593\u306e\u30dd\u30fc\u30ba\u8ee2\u9001\u65b9\u6cd5\u306f\u4e3b\u306b\u9759\u6b62\u753b\u50cf\u5408\u6210\u7528\u306b\u8a2d\u8a08\u3055\u308c\u3066\u304a\u308a\u3001\u554f\u984c\u306e\u6642\u9593\u7684\u5074\u9762\u3092\u8003\u616e\u3057\u3066\u3044\u306a\u3044\uff0e\u3088\u308a\u6642\u9593\u7684\u306b\u4e00\u8cab\u3057\u305f\u7d50\u679c\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b)\n", "en_text": "", "note_object": 23, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 28, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.281Z", "ja_text": "vid2vid model can convert a sequence of input semantic images $s^T_1 : s_1,s_2,...s_T$ to a sequence of output images $x^T_1=x_1,x_2,...x_T$\nsequential generative model given by\n\n$$x_t = F(x^{t-1}_{t-r}, s^t_{t-r}) = (1-m_t) \\kentengCircle w_{t-1}(x_{t-1})+m_t \\kentengCircle h_t$$\n\n- $m_t = M_{\theta_M}(x^{t-1}_{t-r},s^t_{t-r})$ is  a soft occlution map\n- $w_{t-1} = W_\theta_W(x^{t-1}_{t-r},s^t_{t-r})$ is the optical flow warped version of the last generated images\n- $h_t=H_\theta_H(x^{t-1}_{t-r},s^t_{t-r})$ is the synthesized intermediate image\n\n", "en_text": "", "note_object": 23, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 29, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.284Z", "ja_text": "# few shot vid2vid synthesis\nfewshot vid2vid model convert novel input semantic videos,  K-shot example image and semantic image ${e_1,e_2,...e_K},{S_{e_1},S_{e_2},...S_{e_K}}$.\n\n$$x_t = F(x^{t-1}_{t-\tau}, s^t_{t-\tau},{e_1,e_2,...e_K}, {S_{e_1}, S_{e_2},...S_{e_K})$$\n\nwe propose a network weight $\theta$ generation module $E$ for the image synthesis network $H$.\n\n$$\theta_H = E(x_{t-1}^{t-\tau}, s^t_{t-\tau},{e_1,e_2,...e_K},{s_{e_1},s_{e_2}})$$\n\nfew-shot vid2vid framework based on Wang et al. [57],], which is the state-of-the-art. for the vid2vid task .we adopt the SPADE generator [41]\n\n", "en_text": "", "note_object": 23, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 30, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.288Z", "ja_text": "# How to hack Django Server Error 500\nError\u6587\u3092Slack\u3067\u9001\u308c\u305f\u3089\u7c21\u5358\u306bServer Error 500\u3092\u7c21\u5358\u306b\u76f4\u305b\u305f\u306e\u3067\u899a\u3048\u66f8\u304d\uff0eError\u304c\u51fa\u308b\u305f\u3073\u306b\u60b2\u3057\u304f\u306a\u308b\u306e\u3067\uff0c\u3064\u3044\u3067\u306b\u30a8\u30e9\u30fc\u753b\u9762\u306b\u732b\u306eGIF\u3092\u8868\u793a\u3055\u305b\u305f\uff0e\n\n* [ref]()\n* [Django Server Error (500)\u653b\u7565\u6cd5\u30102019 \u30a2\u30c9\u30ab\u30ec\u3011 - Qiita](https://qiita.com/yuu-eguci/items/a1e4b0a2f238d5ccc985)\n* [Python\u3092\u4f7f\u3063\u3066Slack\u306b\u9001\u4fe1\u3059\u308b\u65b9\u6cd5 - Qiita](https://qiita.com/yoshitaku_jp/items/8a53272a0118e7604994)\n\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 31, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.291Z", "ja_text": "# Step1\n1. Slack\u3067Login\u5f8c\uff0c[Incoming](https://slack.com/services/new/incoming-webhook)\u306b\u30a2\u30af\u30bb\u30b9 -> \u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u9078\u3073\uff0cWebhook URL\u3092\u63a7\u3048\uff0c\u30dd\u30c1\u30dd\u30c1\u9032\u3080\n1. \u9069\u5f53\u306aviews.py\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\n\n```\nyour_app/views.py\nfrom django.http import HttpResponseServerError\nfrom django.views.decorators.csrf import requires_csrf_token\nwebhook_url = '\u63a7\u3048\u305fSlack Webhook URL \u3092\u30b3\u30d4\u30da'\ncat_iframes = [\n  '(https://giphy.com/)\u3067\u691c\u7d22\u3057\u3066\uff0c\u57cb\u3081\u8fbc\u307f\u5206\u3092\u30b3\u30d4\u30da',\n]\n```\n", "en_text": "", "note_object": 30, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 32, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.294Z", "ja_text": "```\n\u7d9a\u304d\n@requires_csrf_token\ndef my_server_error(request, template_name='500.html'):\n    import json\n    import random\n    import requests\n    import traceback\n    requests.post(\n        webhook_url,\n        data=json.dumps({\n            'text': '\n'.join([\n                f'Request uri: {request.build_absolute_uri()}',\n                traceback.format_exc(),\n            ]),\n            'username': 'Django Server Error 500',\n            'icon_emoji': ':jack_o_lantern:',\n        })\n    )\n    message  = '\\<h1\\>Server Error (500)\\</h1\\>'\n    message +=  random.choices(cat_iframes)[0]\n    return HttpResponseServerError(message)\n\n```\n", "en_text": "", "note_object": 30, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 33, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.297Z", "ja_text": "# Step2\nDjango\u306ehandler500\u306b\u30ab\u30b9\u30bf\u30e0\u3057\u305f\u3082\u306e\u3092\u4e0a\u66f8\u304d\u3059\u308b\uff0e\n\n```\nyour_prj_name/urls.py\nfrom your_app_name.views import my_server_error\nfrom django.conf.urls import handler500\nhandler500 = my_server_error\n```\n", "en_text": "", "note_object": 30, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 34, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.301Z", "ja_text": "# Linux \u30b3\u30de\u30f3\u30c9\u30e1\u30e2\n`export: Command not found.`\u304c\u3067\u3066\u304d\u3066\uff0c\u307e\u305f\u4f55\u304b\u60aa\u3044\u3053\u3068\u3092\u3057\u305f\u306e\u304b\u3068\u601d\u3063\u3066\u7126\u3063\u305f\uff0e\u305d\u3082\u305d\u3082shell\u306b\u7a2e\u985e\u304c\u3042\u308b\u3089\u3057\u3044\uff0e\n\n1. setenv\uff1acsh\u7cfb\n1. export\uff1ash\u7cfb\n\ntcsh\u30b3\u30de\u30f3\u30c9\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8\n\n1. `set var1 = ham` -> \u30b7\u30a7\u30eb\u5909\u6570\n1. `setenv var2 egg` -> \u74b0\u5883\u5909\u6570\n1. `alias python python3` -> python\u30672\u7cfb\u304c\u51fa\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 35, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.303Z", "ja_text": "# Shell\u306b\u3064\u3044\u3066\n- [ref]()\n- [\u521d\u5fc3\u8005\u304c\u8abf\u3079\u305f\u3002shell\u3068\u306f](https://qiita.com/ycoda/items/87d23b818cb06ba1c348)\n- [\u30b7\u30a7\u30eb\u5165\u9580](http://webcache.googleusercontent.com/search?q=cache:RYdotdNX1RUJ:www-kn.sp.u-tokai.ac.jp/com/computer/shell/shell.html+&cd=7&hl=ja&ct=clnk&gl=jp)\n\n\u77e5\u3089\u306a\u304b\u3063\u305f\uff0e\uff0e\uff0e\n\n1. shell: UNIX\u7cfbOS\u3067\u64cd\u4f5c\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e00\u7a2e\uff0ebash\u3084tcsh, ksh,zsh,fish\u306a\u3069\u7121\u6570\u306b\u5b58\u5728.\u30ab\u30fc\u30cd\u30eb\u3068\u30b7\u30a7\u30eb\u306f\u5206\u96e2\u3057\u3066\u3044\u308b\uff0e\n1. sh, bash, sch\u306f\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3068\u304d\u306b\u9069\u7528\u3055\u308c\u308b\u30bf\u30a4\u30d7\uff0e\n1. CUI\uff08bash\u3068\u304b\uff09\u3068GUI\uff08\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\uff09\u304c\u3042\u308b\n1. B\u30b7\u30a7\u30eb\u7cfb\uff08sh,bash,...\uff09\u3068C\u30b7\u30a7\u30eb\u7cfb\uff08csh, tcsh\uff09\u304c\u3042\u308b\n1. `echo $SHELL` -> tcsh\u3092\u4f7f\u3063\u3066\u3044\u305f\n1. `cat /etc/shells` -> 8\u3064\u3067\u3066\u304d\u305f\uff08screen\u3084tmux\u3082\u3042\u3063\u305f\uff09\n1. 'cat /etc/profile' -> \u8d77\u52d5\u6642\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u30d5\u30a1\u30a4\u30eb\n", "en_text": "", "note_object": 34, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 36, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.307Z", "ja_text": "# \u74b0\u5883\u5909\u6570\u306b\u3064\u3044\u3066\nref\n1. [\u30b7\u30a7\u30eb\u5909\u6570\u3068\u74b0\u5883\u5909\u6570\u306e\u9055\u3044\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u78ba\u8a8d\u3059\u308b - Qiita](https://qiita.com/kure/items/f76d8242b97280a247a1)\n\n1. \u30b7\u30a7\u30eb\u5909\u6570\uff1a\u5b9f\u884c\u4e2d\u306e\u30b7\u30a7\u30eb\u3060\u3051\u3067\u6709\u52b9\n1. \u74b0\u5883\u5909\u6570\uff1a\u5b50\u30d7\u30ed\u30bb\u30b9\u3067\u3082\u6709\u52b9\n\n\n", "en_text": "", "note_object": 34, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 37, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.310Z", "ja_text": "# auto download datasets\n\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092wget\u3059\u308b\u3068\uff0c`403 Forbidden`\u304c\u51fa\u308b\uff0e(`wget  <URL> -d`\u3067\u78ba\u8a8d\u3059\u308b\u3068\uff0c`You don't have permission to access <URL>\u3068\u3044\u308f\u308c\u3066\u3044\u305f)\uff0e\n\u3044\u3064\u3082\u306fssh\u3067\u30c7\u30fc\u30bf\u3092\u9001\u3063\u3066\u3044\u305f\u304c\uff0c\u4eca\u56de\u306f600GB\u3092\u8d85\u3048\u3066\u3044\u3066(\u30ed\u30fc\u30ab\u30eb\u306f\u3042\u30685GB\u3057\u304b\u306a\u3044...)\u3069\u3046\u306b\u3082\u3067\u304d\u306a\u3044\u306e\u3067\uff0c\u76f4\u63a5\u3044\u308c\u305f\u3044\uff0e\n\n\u6700\u8fd1\u8a66\u3057\u305fnvidia\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b[\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u81ea\u52d5setup\u3057\u3066\u304f\u308c\u308bscript](https://github.com/tseijp/few-shot-vid2vid/blob/master/scripts/download_gdrive.py) \u304c\u3042\u3063\u3066\u611f\u52d5\u3057\u305f.\n\u306a\u306e\u3067\uff0cPython\u3067\u4f55\u3068\u304b\u3057\u3088\u3046\u3068\u3057\u305f\u304c\uff0c\u30e1\u30e2\u30ea\u304c\u3042\u3075\u308c\u3066\u3044\u305f\u306e\u3068\u30c7\u30fc\u30bf\u304c\u5927\u304d\u3059\u304e\u3066\u9014\u4e2d\u3067\u6b62\u3081\u3066\u3044\u305f\u3053\u3068\u306b\u6c17\u3065\u304b\u305a\u7d50\u69cb\u306f\u307e\u3063\u3066\u3057\u307e\u3063\u305f\uff0e\n\nrequests.Sesssion\u306e.iter_content\u3067\u30e1\u30e2\u30ea\u3092\u5206\u3051\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\uff0ctqdm\u3067\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u8868\u793a\u3055\u305b\u308b\u3068\u3046\u307e\u304f\u3044\u3063\u305f\uff0e\n\n- [ref]()\n-  [Requests\u3068tqdm\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u9032\u6357\u3092\u8868\u793a\u3059\u308b - Narito Blog](https://narito.ninja/blog/detail/66/)\n- [Python\u306erequests\u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u65b9\u6cd5 - Qiita](https://qiita.com/5zm/items/366f10fcde5d3435b417)\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 38, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.313Z", "ja_text": "\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\uff0e\n```\nimport requests, zipfile, os, sys, subprocess\nfrom tqdm import tqdm\ndef download_file(url, dir='./'):\n    session  = requests.Session()\n    response = session.get(url, stream=True)\n    destination = os.path.join(dir, os.path.basename(url) )\n    content_size = int(response.headers[\"content-length\"])\n    try:\n        print('download %s'%destination)\n        CHUNK_SIZE = 32768\n        pbar = tqdm(total=content_size, unit=\"B\", unit_scale=True)\n        with open(destination, \"wb\") as f:\n            for chunk in [c for c in response.iter_content(CHUNK_SIZE) if c]:\n                pbar.update(len(chunk))\n                f.write(chunk)\n        pbar.close()\n    except:\n        import traceback\n        traceback.print_exc()\n```\n", "en_text": "", "note_object": 37, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 39, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.316Z", "ja_text": "unzip\u3059\u308b\uff0e[torchnlp](https://pytorchnlp.readthedocs.io/en/latest/_modules/torchnlp/download.html)\u306e\u30b3\u30fc\u30c9\u3092\u5909\u3048\u3066\u5229\u7528\u3059\u308b.\n```\ndef unzip_file(url, dir='./'):\n    destination  = os.path.join(dir, os.path.basename(url) )\n    extension    = extension = os.path.basename(url).split('.', 1)[1]\n    if 'zip' in extension:\n        with zipfile.ZipFile(destination, \"r\") as f:\n            f.extractall(dir)\n    elif 'tar.gz' in extension or 'tgz' in extension:\n        subprocess.call(['tar', '-C', dir, '-zxvf', destination])\n    elif 'tar' in extension:\n        subprocess.call(['tar', '-C', dir, '-xvf', destination])\n    os.remove(destination)\n```\n\n\u30e1\u30a4\u30f3\u3092\u304b\u3044\u3066\u304a\u3057\u307e\u3044\uff0e\u4eca\u56de\u306frgb_url\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308burl\u306e\u4e00\u89a7\u304c\u3042\u3063\u305f\u306e\u3067\uff0c\u30ea\u30b9\u30c8\u3067\u53d6\u5f97\u3057\u3066\u5404\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\uff0e\n```\ndef main():\n    rgb_url = \"URL\"\n    chpt_path = \"./datasets\"\n    rgb_dir = os.path.join(chpt_path, \"train_images\")\n    dirs = [chpt_path, rgb_dir]\n    \\_=[os.makedirs(dir) for dir in dirs if not os.path.isdir(dir)]\n    for url in [u for u in requests.get(rgb_url).text.split(\"\n\") if u][:1]:  #Debug mode\n        download_file(url, rgb_dir)\n        unzip_file(url, rgb_dir)\nif \\_\\_name\\_\\_==\"\\_\\_main\\_\\_\":\n    main()\n\n```\n", "en_text": "", "note_object": 37, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 40, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.320Z", "ja_text": "### \u8ffd\u8a18\uff1adataloader\n\u672c\u6765\u306envidia\u306e\u30b3\u30fc\u30c9\u3068\u306f\u7570\u306a\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306a\u306e\u3067\uff0cdataloader\u306e\u69cb\u6210\u3092\u5909\u3048\u3088\u3046\u3068\u601d\u3063\u305f\u3089\uff0c\u305d\u3082\u305d\u3082\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u5165\u3063\u305fpath\u304b\u3067\u5224\u5225\u3057\u3066\u3044\u305f\uff0e\n\n```\nIMG_EXTENSIONS = [\n    '.jpg', '.JPG', '.jpeg', '.JPEG',\n    '.png', '.PNG', '.ppm', '.PPM', '.bmp', '.BMP', '.tiff', '.webp',\n    '.txt', '.json',]\ndef is_image_file(filename):\n    return any(filename.endswith(extension) for extension in IMG_EXTENSIONS)\ndef make_grouped_dataset(dir):\n    for fname in sorted(sorted(os.walk(dir))):\n        paths = []; root = fname[0]\n        for f in sorted(fname[2]):\n            if is_image_file(f):\n                paths.append(os.path.join(root, f))\n        if len(paths) > 0:\n            images.append(paths)\n    return images\n```\n\n\u4e00\u884c\u306b\u3059\u308b\u3068`[p for p in [[os.path.join(fn[0],f) for f in sorted(fn[2])if is_image_file(f)] for fn in sorted(os.walk(dir))]if len(p)>0]`\n", "en_text": "", "note_object": 37, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 41, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.324Z", "ja_text": "importlib\u306b\u3088\u3063\u3066, dataset_name\u304b\u3089import\u3059\u308bclass\u3092\u9078\u629e\u3067\u304d\u308b\uff0e\n```\ndataset_filename = \"data.\" + dataset_name + \"_dataset\"\ndatasetlib = importlib.import_module(dataset_filename)\n```\nimport\u3057\u305flib\u306e\u4e2d\u304b\u3089\uff0cBaseDataset\u3092\u7d99\u627f\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306eclass\u3092\u898b\u3064\u3051\u308b\n```\ndataset=None\nfor name, cls in datasetlib.__dict__.items():\n    if name.lower() == target_dataset_name.lower() \\\n       and issubclass(cls, BaseDataset):\n        dataset = cls\n```\n", "en_text": "", "note_object": 37, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 42, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.327Z", "ja_text": "# Python memo\n\u4ed6\u4eba\u306e\u30b3\u30fc\u30c9\u3067\u898b\u304b\u3051\u305f\u4e0d\u601d\u8b70\u306a\u66f8\u304d\u65b9\u3092\u5c11\u3057\u305a\u3064\u30e1\u30e2\u3057\u3066\u3044\u304f\n\n- `new_w = new_w // 4 * 4`\uff1a4\u3067\u5272\u308a\u5207\u308c\u308b\u6570\u306b\u3067\u304d\u308b\uff0e`//`\u306f\u5207\u308a\u6368\u3066\u9664\u7b97\u306e\u6f14\u7b97\u5b50\uff0e\n- `is_img = input_type=='img'`\uff1a\u8ad6\u7406\u5024\u3092\u4e00\u884c\u3067\u4ee3\u5165.\n- `a, b = b, a`\uff1a\u53c2\u7167\u5148\u3092\u5165\u308c\u66ff\u3048\u308b`a,b = copy.copy(b), copy.copy(a)`\u3082\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 43, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.330Z", "ja_text": "### op\u306e\u95a2\u6570\u4e00\u89a7\u3092\u53d6\u5f97\n`obj = op('/project1/...')`\u3067op\u3092\u53d6\u5f97\u3057\u305f\u3042\u3068\uff0cdir(obj)\u3067\u30e1\u30f3\u30d0\u30fc\u4e00\u89a7\u304c\u898b\u308c\u308b\u304c\uff0c`inspect.getmembers(obj, inspect.ismethod)`\u3067\u30e1\u30bd\u30c3\u30c9\u4e00\u89a7\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\uff0eobj.error\u304bobj.warning\u304c\u547c\u3070\u308c\u308b\u3068\u5f37\u5236\u505c\u6b62\u3059\u308b\u3089\u3057\u3044\uff0e\n\n- `[s for s in dir(obj) if not s in ['error','warning'] and callable(eval('obj.%s'%s))]` : \u547c\u3073\u51fa\u3057\u53ef\u80fd\u306e\u30ea\u30b9\u30c8\n", "en_text": "", "note_object": 42, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 44, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.333Z", "ja_text": "# html\u3068views.py\u3060\u3051\u3067Django\nDjango\u3070\u304b\u308a\u89e6\u3063\u3066\u3044\u305f\u306e\u3067\uff0c\u7d44\u307f\u8fbc\u307f\u30bf\u30b0\u306a\u3057\u3067\u306fweb\u30da\u30fc\u30b8\u304c\u4f5c\u308c\u306a\u3044\u3051\u3069\uff0cDjango\u306f\u8a2d\u5b9a\u3068\u304b\u9762\u5012\u306a\u306e\u3067\uff0c\u7c21\u5358\u306b\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u307e\u3057\u305f\uff0e\nglsl1,2,3,4...\u3068\u91cf\u7523\u3059\u308b\u30a2\u30d7\u30ea\u3092\u4f8b\u306b\u30b3\u30fc\u30c9\u3092\u304b\u304d\u307e\u3059\uff0e\n\n\u307e\u305a\uff0cthreejs\u3068\u3044\u3046project\u3092\u4f5c\u308a\u307e\u3059\n\n* `django-admin startproject threejs`\n* `cd threejs`\n* `python manage.py startapp glsl1` : glsl2,3,4\u3082\u540c\u69d8\u306b...\n* `INSTALLED_APPS+=['glsl%s'%s for s in [1,2,3,4]]` \u3092threejs/settings.py \u6700\u5f8c\u306b\u8ffd\u52a0\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 45, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.336Z", "ja_text": "\u6b21\u306b\uff0c\u4e0b\u306e\u69d8\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u308b(\u5404app\u306fviews.py\u4ee5\u5916\u6d88\u3057\u3066ok)\n```\nC:.\n\u251c\u2500glsl1\n\u2502  \u2514\u2500views.py\n\u251c\u2500glsl2\n\u2502  \u2514\u2500views.py\n\u2502(...\u540c\u69d8\u306b3,4\u3068\u4f5c\u308b)\n\u251c\u2500templates\n\u2502  \u251c\u2500glsl1\n\u2502  \u2514\u2500glsl2\n\u2502    (...\u540c\u69d8\u306b3,4\u3068\u4f5c\u308b)\n\u2514\u2500threejs\n   \u251c\u2500settings.py\n   \u2514\u2500urls.py\n```\nthreejs/urls.py\u306e\u6700\u5f8c\u306b\u8ffd\u52a0\u3059\u308b\n```\nfor i, app in enumerate(['glsl%s'%s for s in [1,2,3,4]]):\n    views_name = app + \".views\"\n    views_lib  = importlib.import_module(views_name)\n    for name, cls in views_lib.__dict__.items():\n        if name.lower() == \"fromdirview\":\n            url = \"%s/%s\"%( i, cls.url() )\n            urlpatterns += [path(url, cls.as_view()]\n\n```\n", "en_text": "", "note_object": 44, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 46, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.340Z", "ja_text": "\u5404app\u306eviews.py\u306b\u6b21\u306eView\u3092\u8ffd\u52a0\u3059\u308b\n```\nclass FromDirView(TemplateView):\n    def __init__(self):\n        self.name = osp.basename(osp.dirname(osp.abspath(__file__)))\n        self.path = osp.join(settings.TEMPLATES[0]['DIRS'][0], self.name)\n        self.pages = self.make_grouped_pages()\n        self.page  = osp.join(self.path, 'test.html')\n    def url():\n        return ''\n    def get(self, request, *args, **kwargs):\n        page = request.GET['p'] if 'p' in request.GET else ''\n        self.template_name = self.pages[page] if page in self.pages else self.page\n        return super().get(request, *args, **kwargs)\n    def get_context_data(self):\n        context = super().get_context_data()\n        context['pages'] = self.pages.keys()\n        return context\n    def make_grouped_pages(self):\n        paths = {}\n        for fname in sorted(os.walk(self.path)):\n            page = osp.basename(fname[0])\n            if any([ f==page+'.html' for f in fname[2] ]):\n                paths[page] = osp.join(fname[0], page+'.html')\n        return paths\n```\n", "en_text": "", "note_object": 44, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 47, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.343Z", "ja_text": "\u5404app\u306eviews.py\u306b\u6b21\u306eView\u3092\u8ffd\u52a0\u3059\u308b\n```\nclass FromDirView(TemplateView):\n    def __init__(self):\n        self.name = osp.basename(osp.dirname(osp.abspath(__file__)))\n        self.path = osp.join(settings.TEMPLATES[0]['DIRS'][0], self.name)\n        self.pages = self.make_grouped_pages()\n        self.page  = osp.join(self.path, 'test.html')\n    def url():\n        return ''\n    def get(self, request, *args, **kwargs):\n        page = request.GET['p'] if 'p' in request.GET else ''\n        self.template_name = self.pages[page] if page in self.pages else self.page\n        return super().get(request, *args, **kwargs)\n    def get_context_data(self):\n        context = super().get_context_data()\n        context['pages'] = self.pages.keys()\n        return context\n    def make_grouped_pages(self):\n        paths = {}\n        for fname in sorted(os.walk(self.path)):\n            page = osp.basename(fname[0])\n            if any([ f==page+'.html' for f in fname[2] ]):\n                paths[page] = osp.join(fname[0], page+'.html')\n        return paths\n```\n", "en_text": "", "note_object": 44, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 48, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.347Z", "ja_text": "FromDirView\u3067\u7528\u3044\u305fmake_grouped_pages\u306f, url\u306e?p=\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304ctemplates\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u3042\u308a\uff0c\u304b\u3064\u305d\u306e\u5185\u306b\u540c\u3058\u540d\u524d+.html\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\uff0c\u305d\u306ehtml\u30d5\u30a1\u30a4\u30eb\u3092template\u306b\u6307\u5b9a\u3059\u308b.\nosp\u306f`import os.path as osp`\u3067\u7565\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\uff0e\nsettings.py\u306e\u5909\u6570\u306f`from django.conf import settings`\u3067\u53d6\u5f97\u3067\u304d\u308b\n\u4e00\u884c\u306b\u3059\u308b\u3068`{osp.basename(fname[0]):osp.join(fname[0], osp.basename(fname[0])+'.html')\n                for fname in sorted(os.walk(self.template_path))\n                if any([ f==osp.basename(fname[0])+'.html' for f in fname[2] ])}`\n\n\nglsl1/test.html\u306f\u6b21\u306e\u69d8\u306b\u8ffd\u52a0\u3057\u3066\u304a\u304f\n```\n{% for p in pages%}\n  \\<a href=\"?p={{p}}\">{{p}} \\</a>\n{% endfor %}\n```\n", "en_text": "", "note_object": 44, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 49, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.351Z", "ja_text": "# \u958b\u773c\uff01Python vs JS\n\n* [ref]()\n* [# Python VS ES6 syntax comparison](https://gist.github.com/revolunet/537a3448cff850231a74)\n* [\u958b\u773c! JavaScript - \u8a00\u8a9e\u4f7f\u7528\u304b\u3089\u5b66\u3076JavaScript\u306e\u672c\u8cea](https://www.amazon.co.jp/%E9%96%8B%E7%9C%BC-JavaScript-%E2%80%95%E8%A8%80%E8%AA%9E%E4%BB%95%E6%A7%98%E3%81%8B%E3%82%89%E5%AD%A6%E3%81%B6JavaScript%E3%81%AE%E6%9C%AC%E8%B3%AA-Cody-Lindley/dp/487311621X)\n\nJS\u306e\u512a\u308c\u305f\u6f14\u7b97\u5b50\u306e\u4f7f\u3044\u304b\u305f\u3068\u8db3\u308a\u306a\u3044\u95a2\u6570\u306e\u4ee3\u7528\u306e\u30e1\u30e2\u3067\u3059\uff0e\u5185\u5305\u8868\u8a18\u306a\u3069\uff0c\u81ea\u5206\u304c\u3088\u304f\u3064\u304b\u3046\uff08\u5fd8\u308c\u308b\uff09\u304b\u304d\u65b9\u3092Python\u3068\u6bd4\u3079\u307e\u3057\u305f\uff0e\n\u4ee5\u4e0b\u3067\u306f\u6b21\u306e\u5909\u6570a,b,c,d\u3092\u5171\u901a\u3057\u3066\u7528\u3044\u307e\u3059\uff0e\n\n- >> List\n  >\n  >> `a = [1,2,3]`\n- >> List\n  > \n  >> `b = [4,5,6]`\n- >> Int\n  >\n  >> `c = 4`\n- >> Dict\n  >\n  >> `d = {'a':a,'b':b}`\n\n\n### e.g. spread operator\n\n* >>Python\n  > \n  >> JS\n* >> `a + b + [c]`\n  > \n  >>`[...a, ...b, c]`\n* >> `{**d, 'c':c, **dict(d=0)}`\n  > \n  >>`{...d, c, ...{d:0}}`\n* (`*`,`...`\u306fshallow copy\u306a\u306e\u3067\u6ce8\u610f)\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 50, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.353Z", "ja_text": "# basic Python vs JS\n* >>Python\n  > \n  >> JS\n* >> `50//c*c`\n  > \n  >> `~~(50/c)*c` //48 (c=4)\n* >> `True if c>0 else c`\n  > \n  >> `c>0 || c`\n* >> `c if c>0 else False`\n  > \n  >> `c>0 && c`\n* >> `value, _, _ = a`\n  > \n  >> `var [value, _, _] = a`\n* >> `func = lambda v: v*2`\n  > \n  >> `func = v => v*2`\n* >> `bool = b[0]==c`\n  > \n  >> `bool=b[0]===c` : \u5024\u306e\u4e00\u81f4\n* >> `bool = a==b` \n  >\n  >>  `bool=!a.map((v,i)=>v===b[i] ).includes(false)` \u914d\u5217\u306e\u4e00\u81f4(js\u3067\u306f\u914d\u5217\u306f===\u3067\u304d\u306a\u3044)\n", "en_text": "", "note_object": 49, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 51, "fields": {"posted_user": 1, "posted_time": "2020-05-09T11:17:41.357Z", "ja_text": "\n# array Python vs JS\n* >>Python\n  > \n  >> JS\n* >> `sum(a)`\n  > \n  >> `a.reduce((x,y)=>x+y)`\n* >> `max(a)`\n  > \n  >> `a.reduce((x,y)=>x>y?x:y)` //`x<y?`\u3067min\n* >> `map(lambda: v**2, a)`\n  > \n  >> `a.map(v=>v**2)`\n* >> `[0]*c`\n  > \n  >> `Array(c).fill(0)` // `[0, 0, 0, 0]`\n* >> `[i for i in range(c)]`\n  > \n  >> `[...Array(c)].map((_,i)=>i)` //`[0,1,2,3,4]`\n* >> `[v for v in zip(a,b)]`\n  > \n  >> `a.map((v,i)=>[v,b[i]])`\n* >> `[[k,v] for k,v in d.items()]`\n  > \n  >> `Object.keys(d).map((v,i)=>[v,Object.values(d)[i]])`\n", "en_text": "", "note_object": 49, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 54, "fields": {"posted_user": 1, "posted_time": "2020-05-17T10:30:55.888Z", "ja_text": "# GLSL and THREE.js in React\nTHREE.js\u306fWebGL\u3092\u7528\u3044\u30663D\u8868\u73fe\u304c\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\uff0cGLSL\u30d5\u30a1\u30a4\u30eb\u3082\u30d3\u30eb\u30c9\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3068\u3066\u3082\u308f\u304f\u308f\u304f\u3067\u304d\u307e\u3059\uff0e\uff08[\u30c8\u30c3\u30d7\u30da\u30fc\u30b8](https://tsei.jp)\u306bglsl\u3092\u5229\u7528\u3057\u3066\u307e\u3059\uff0e\uff09\u5f93\u6765\u306ejs\u3060\u3068\u5927\u898f\u6a21\u306a\u30a2\u30d7\u30ea\u306b\u306a\u308b\u3068\u4e88\u671f\u3057\u306a\u3044\u3053\u3068\u304c\u591a\u304f\u8d77\u3053\u308b\u306e\u3067\uff0cview\u306b\u7279\u5316\u3057\u305fReact\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u4e0a\u3067\u5b89\u5168\u306b\u69cb\u7bc9\u3057\u307e\u3059\uff0e(\u7279\u306bhook\u3060\u3068\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u304d\u308b\uff0e)  \n\n### \u30dd\u30a4\u30f3\u30c8\nDOM\u3092\u76f4\u63a5\u64cd\u4f5c\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u306fReact\u3067\u306f\u4f7f\u3048\u306a\u3044\u3051\u3069\uff0chook\u3067\u306f`useEffect`\u5185\u306b\u51e6\u7406\u3092\u304b\u304f\u3068, React\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u304b\u3089\u96a0\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\uff08class\u30d9\u30fc\u30b9\u3067\u306f`componentDidMount`\u3092\u3046\u307e\u304f\u5229\u7528\u3059\u308c\u3070\u3067\u304d\u308b.\uff09\n\n\u3042\u3068,THREE.js\u306fmount\u3054\u3068\u306b\u518d\u5b9f\u884c\u3059\u308b\u3068\u91cd\u304f\u306a\u308b\u306e\u3067\uff0cReact\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u95a2\u4fc2\u306a\u3044\u5909\u6570\u306b\u306f`useRef`\u3092\u4f7f\u3046\u3068\u518drender\u305b\u305a\u3046\u307e\u304f\u3044\u304d\u307e\u3059\uff0e", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 55, "fields": {"posted_user": 1, "posted_time": "2020-05-17T10:36:02.430Z", "ja_text": "\nuseEffect\u5185\u306b\u521d\u671f\u51e6\u7406\u3092\u304b\u304d\uff0c\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\uff0e\u7279\u306b`WebGLRenderer`\u4f5c\u6210\u6642\u306bcanvas\u3092\u6307\u5b9a\u3055\u305b\uff0cscene\u3068camera\u306b\u306f`useRef`\u3092\u4f7f\u3046\u3053\u3068\u3067\u3042\u3068\u304b\u3089\u5909\u66f4\u3057\u3066\u3082\u521d\u671f\u51e6\u7406\u304c\u518d\u5b9f\u884c\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n```\nimport React, {useState, useRef, useEffect} from 'react'\nimport * as THREE from \"three\";\n\nconst App = (props) => {\n    const scene = useRef(new THREE.Scene());\n    const camera = useRef(new THREE.Camera());\n    useEffect(()=>{\n        const canvas   = document.getElementById('renderer');\n        const renderer = new THREE.WebGLRenderer({canvas});\n        const light    = new THREE.DirectionalLight(0xFFFFFF, 1);\n        light.position.set( 1, 1, 1 );\n        scene.current.add(light);\n        /*~~more process~~*/\n        const render = () => {\n            requestAnimationFrame( render );\n            renderer.render( scene.current, camera.current );\n        }\n        render();\n    }, []);\n    return <canvas id=\"renderer\" style={{position:\"fixed\",top:0,left:0}}/>\n}\n```", "en_text": "", "note_object": 54, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 56, "fields": {"posted_user": 1, "posted_time": "2020-05-17T10:41:36.744Z", "ja_text": "### GLSL\u3092\u5229\u7528\u3059\u308b\nglsl\u30d5\u30a1\u30a4\u30eb\u3092`fetch`\u3067load\u3057\uff0c\u5909\u6570\u3078set\u3057\u305f\u3068\u304d, \u4e8c\u3064\u76ee\u306e`useEffect`\u304c\u5b9f\u884c\u3057\u307e\u3059. \uff08mount\u6642\u3068,\u5404glsl\u30d5\u30a1\u30a4\u30eb\u304cload\u3067\u304d\u305f\u3068\u304d\u306e\u8a08\u4e09\u56de\u5b9f\u884c\u3055\u308c\u308b\uff09glsl\u306b\u6e21\u3059`uniforms`\u306e\u5024\u306f`useRef`\u3067\u5f8c\u304b\u3089\u5909\u66f4\u3057\u3066\u3082\u518d\u5b9f\u884c\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\uff0e", "en_text": "", "note_object": 54, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 57, "fields": {"posted_user": 1, "posted_time": "2020-05-17T10:54:22.961Z", "ja_text": "```\nimport shaderF from './shaderF.glsl';\nimport shaderV from './shaderV.glsl';\n\nconst App = (props) => {\n    const [vertexShader, setVertexShader] = useState('');\n    const [fragmentShader, setFragmentShader] = useState('');\n    const uniforms = React.useRef({/*your obj*/});\n    /*~~\u7701\u7565~~*/\n    useEffect(()=>{\n        fetch(shaderV).then(res=>res.text()).then(res=>setVertexShader(res));\n        fetch(shaderF).then(res=>res.text()).then(res=>setFragmentShader(res));\n    }, []);\n    useEffect(()=>{\n        if (!vertexShader||!fragmentShader)\n            return\n        const geometry = new THREE.PlaneGeometry(2, 2);\n        const material = new THREE.ShaderMaterial({\n            uniforms:uniforms.current, \n            vertexShader, fragmentShader\n        })\n        const plane = new THREE.Mesh( geometry, material );\n        scene.current.add( plane );\n    }, [vertexShader,fragmentShader]);\n    return <canvas style={{position:\"fixed\",top:0,left:0}} id=\"renderer\"/>\n}\n```", "en_text": "", "note_object": 54, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 58, "fields": {"posted_user": 1, "posted_time": "2020-05-18T05:38:20.677Z", "ja_text": "# webpack\u3068rollup\u3067\u30d3\u30eb\u30c9\n- [ref]()\n- [create-react-app\u3067\u30d5\u30a9\u30eb\u30c0\u540d(src)\u3092\u5909\u66f4\u3059\u308b\u5177\u4f53\u7684\u306a\u624b\u9806](https://freelance-jak.com/technology/react/2409/)\n- [create-react-app \u3067\u4f5c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092rollup\u3067\u6574\u5f62\u3059\u308b](https://qiita.com/kspotfujita/items/f3a50f613828170170ba)\n- [React\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092npm\u3067\u516c\u958b\u3059\u308b](https://qiita.com/Takumon/items/945335b0e0fa035f2201)\n\n\u30a2\u30d7\u30ea\u306b\u306fcss\u7b49\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u6271\u3048\u308b`webpack`, \u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u4e00\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u7e2e\u5c0f\u3057\u3066\u5909\u63db\u3057\u3066\u304f\u308c\u308b`rollup`\u304c\u4f7f\u3044\u3084\u3059\u3044\u3067\u3059\uff0e\n\n\u7279\u306b`create-react-app`\u3067React\u74b0\u5883\u3092\u4f5c\u6210\u5f8c\uff0c\u30c7\u30e2\u30da\u30fc\u30b8\u306e\u4f5c\u6210\u3068\u540c\u6642\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u767a\u3059\u308b\u306e\u304c\u5b89\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u304a\u3059\u3059\u3081\u3067\u3059\uff0e\n\n\u4eca\u56de\u306f\uff0c`cross-env`\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u8a2d\u5b9a\u3057\uff0c`react-app-rewired`\u3067`create-react-app`\u306e\u4e2d\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059. \n\nts\u3084css\u306a\u3069\u8ffd\u52a0\u3067\u7528\u3044\u308b\u5834\u5408\u306f[rollup/plugins: \ud83c\udf63](https://github.com/rollup/plugins)\u304b\u3089\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u9078\u3093\u3067\u4f7f\u3044\u307e\u3059\uff0e\n- `create-react-app {yourapp}` and `cd {yourapp}`\n- `npm i -D cross-env react-app-rewired rollup @rollup/plugin-babel @rollup/plugin-node-resolve @rollup/plugin-commonjs fs`", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 59, "fields": {"posted_user": 1, "posted_time": "2020-05-18T05:43:43.383Z", "ja_text": "\u6b21\u306b`config-overrides.js`\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e(\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092`src`\u304b\u3089`docs`\u306b\u5909\u66f4\u3059\u308b\uff0e`appSrc`\u3092`src`\u304b\u3089`.`\u306b\u3059\u308b\u3068\uff0c`src`\u3068`docs`\u306e\u4e21\u65b9\u304c\u3064\u304b\u3048\u308b\uff0e)\n```\nconst fs = require('fs');\nconst path = require('path');\nconst appDirectory = fs.realpathSync(process.cwd());\nconst resolveApp = relativePath => path.resolve(appDirectory, relativePath);\nmodule.exports = {\n    paths: function(paths, env) {\n        paths.appSrc     = resolveApp('.');\n        paths.appIndexJs = resolveApp('docs/index.js');\n        // Typescript \u306e\u5834\u5408\n        // paths.appTypeDeclarations = resolveApp('docs/react-app-env.d.ts');\n        return paths;\n    }\n}\n```\n\u6b21\u306e\u3088\u3046\u306b`package.json`\u3092\u4fee\u6b63\u3057\u307e\u3059\uff0e\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u306f`rollup`\u3092\u7528\u3044\uff0c\u4ed6\u306f`react-app-rewired`\u3092\u4f7f\u3046\uff0e\uff09Typescript\u306e\u5834\u5408\u306f\uff0c`tsconfig.json`\u306e`include:[...]`\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4fee\u6b63\u3057\u307e\u3059.\n```\n{\n  \"module\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"main\": \"index.cjs.js\",\n  \"private\": false,\n  \"scripts\": {\n    \"test\":\"react-app-rewired test\",\n    \"eject\":\"react-app-rewired eject\",\n    \"start\":\"cross-env NODE_ENV=development BABEL_ENV=development react-app-rewired start\",\n    \"build\":\"cross-env NODE_ENV=production BABEL_ENV=production react-app-rewired build\",\n    \"compile\":\"cross-env NODE_ENV=production BABEL_ENV=production rollup -c config-rollup.js\"\n  },\n  ~~\u7701\u7565~~\n}\n```", "en_text": "", "note_object": 58, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 60, "fields": {"posted_user": 1, "posted_time": "2020-05-18T05:44:09.220Z", "ja_text": "\u5148\u7a0b\uff0c`scripts`\u306e`compile`\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e`config-rollup.js`\u3092\u8ffd\u52a0\u3057\u307e\u3059.\n\uff08`json`\u3084`glsl`\u3092\u3064\u304b\u3046\u306a\u3069\uff0c\u5834\u5408\u306b\u3088\u3063\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\uff0c`plugins`\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\uff09\n```\nimport { promises as fs } from 'fs';\nimport babel from '@rollup/plugin-babel';\nimport resolve from '@rollup/plugin-node-resolve';\nimport commonjs from '@rollup/plugin-commonjs';\nimport pkg from './package.json';\n\nconst input = 'src/index'\nconst external = Object.keys({...pkg.dependencies,...pkg.devDependencies})\nconst extensions = ['.js', '.jsx', '.ts', '.tsx']\n\nfunction babelOption (useESModules) {\n    return {\n        babelrc:false, \n        babelHelpers:'runtime', \n        exclude:'**/node_modules/**',\n        extensions,\n        presets : [\n            ['@babel/env', {loose:true, modules:false}],\n             '@babel/preset-react','@babel/preset-typescript'\n        ],\n        plugins : [\n            [ '@babel/proposal-class-properties'         ,    {loose:true} ],\n            [ '@babel/plugin-proposal-object-rest-spread',    {loose:true} ],\n            [ '@babel/transform-runtime', {regenerator:false,useESModules} ],\n        ],\n    }\n}\n```", "en_text": "", "note_object": 58, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 62, "fields": {"posted_user": 1, "posted_time": "2020-07-01T09:35:49.529Z", "ja_text": "# React\u3067\u30d0\u30fc\u30b3\u30fc\u30c9\u8a8d\u8b58\n\n- [ref]\n- [Quagga.js on react - CodeSandbox](https://codesandbox.io/s/quaggajs-on-react-eexx8)\n\nReact\u4e0a\u3067\u30d6\u30c3\u30af\u30ab\u30d0\u30fc\u306e\u30d0\u30fc\u30b3\u30fc\u30c9\u304b\u3089\u5546\u54c1\u306e\u753b\u50cf\u3092\u53d6\u5f97\u3059\u308b[\u30e9\u30a4\u30d6\u30e9\u30ea](https://github.com/tseijp/use-amazon)\u3092\u516c\u958b\u3057\u307e\u3057\u305f\uff0eWeb\u3067\u30ab\u30e1\u30e9\u304b\u3089\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u8a8d\u8b58\u3057\u3066\u63a2\u7d22\u7d50\u679c\u306e\u4e00\u89a7\u3092\u8868\u793a\u3057\u307e\u3059\uff0e[\u30c7\u30e2](https://tsei.jp/useamazon)\u3067\u7528\u3044\u305f\u30b3\u30fc\u30c9\u306f\uff0c[Github](https://github.com/tseijp/use-amazon/blob/master/src/components/Scanner.tsx)\u3067\u516c\u958b\u3057\u3066\u307e\u3059\uff0e\n\n\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 63, "fields": {"posted_user": 1, "posted_time": "2020-07-01T09:36:12.216Z", "ja_text": "# \u30b9\u30ad\u30e3\u30ca\u30fc\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u884c\u3059\u308b\u95a2\u6570`onStarted`\u3068\u8a8d\u8b58\u3055\u308c\u305f\u969b\u306b\u5b9f\u884c\u3059\u308b`onDetected`\u306f\uff0c\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089`props`\u3068\u3057\u3066\u5165\u529b\u3057\u307e\u3059\uff0e(\u518dRender\u3059\u308b\u3068\u3044\u304f\u3064\u3082\u958b\u59cb\u3057\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u3053\u308c\u3089\u306e\u95a2\u6570\u306f`useRef`\u5185\u3067\u518d\u5b9a\u7fa9\u3055\u305b\u307e\u3059\uff0e)\n\n`useEffect`\u5185\u306e\u2460\u306b\u306fComponent\u306e\u30de\u30a6\u30f3\u30c8\u5f8c\u306eQuagga\u306e\u521d\u671f\u5316\uff0c\u2461\u306b\u306fQuagga\u304c\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u8a8d\u8b58\u3057\u305f\u969b\u306e\u51e6\u7406\u3092\u5f8c\u3067\u5165\u308c\u307e\u3059\uff0e\n\n\u307e\u305f\uff0cCanvas\u306b\u8a8d\u8b58\u7d50\u679c\u3092\u63cf\u5199\u3059\u308b\u95a2\u6570\u306e`drawPath()`, `drawRect()`, `clearRect()`\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n```js \nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport config from \"./config-camera.json\";\nconst Quagga = require ('quagga'); // import\u3060\u3068Typescript\u3067\u4f7f\u3048\u306a\u3044\n\nexport function Scanner ({onStarted, onDetected}) {\n    const onStartedRef = useRef((bool)=>onStarted(bool))\n    const onDetectedRef  = useRef((code)=>onDetected(code))\n    const drawPath = useCallback((path,ctx,xy,color:string) => Quagga.ImageDebug.drawPath(path,xy,ctx,{color,lineWidth:2}),[])\n    const drawRect = useCallback((path,ctx,isMain) => drawPath(path,ctx,{x:0,y:1},isMain?'#0F0':\"#00F\"),[])\n    const clearRect = useCallback((dom,ctx) => ctx.clearRect( 0, 0, ...[\"width\",\"height\"].map(s=>Number(dom.getAttribute(s))) ),[])\n\n    useEffect ( () => {/*...\u2460...*/}, [] ) // \u5f8c\u8ff0\n    useEffect( () => {/*...\u2461...*/}, [] )  // \u5f8c\u8ff0\n\n    return <div id=\"interactive\" className=\"viewport\" style={{width:\"100%\",height:\"100%\"}}/>\n}\n```", "en_text": "", "note_object": 62, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 64, "fields": {"posted_user": 1, "posted_time": "2020-07-01T09:49:37.265Z", "ja_text": "# Quagga\u306e\u521d\u671f\u5316\u3068\u8a8d\u8b58\u51e6\u7406\n\n`Quagga.init()`\u5b9f\u884c\u306e\u6570\u79d2\u5f8c\u306b\u30ab\u30e1\u30e9\u304c\u8d77\u52d5\u3057\u307e\u3059\uff0e\n\u8a8d\u8b58\u304c\u958b\u59cb\u3057\u305f\u304b\u3092`onStarted()`\u3067\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u4f1d\u3048\u308b\u3053\u3068\u3067\uff0c\u30ab\u30e1\u30e9\u304c\u958b\u59cb\u3057\u3066\u304b\u3089\u8868\u793a\u3059\u308b\u307f\u305f\u3044\u306a\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n```js\n    useEffect (() => {/*...\u2460...*/\n        Quagga.init(config, (err) => {\n            if (err) return\n            return (Quagga.start(), onStartedRef.current(true))\n        })\n        return () => (Quagga.stop(), onStartedRef.current(false))\n    }, []);\n```\n\n`result.boxes`\u306b\u306f\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u691c\u51fa\u3057\u305f\u60c5\u5831\uff0c`result.box`\u306b\u306f\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u8a8d\u8b58\u3057\u305f\u60c5\u5831\u304c\u3042\u308b\u306e\u3067\uff0c\u30b3\u30fc\u30c9\u3092\u8a8d\u8b58\u3067\u304d\u305f\u304b\u3069\u3046\u304b\u3067\u8272\u3092\u5909\u3048\u307e\u3059\uff0e\n```js\n    useEffect(()=>{/*...\u2461...*/\n        Quagga.onProcessed( (result) => {\n            if (!result) return\n            const ctx = Quagga.canvas.ctx.overlay\n            const dom = Quagga.canvas.dom.overlay\n            result.boxes && clearRect(dom, ctx)\n            result.boxes.forEach( box => drawRect(box,ctx,box===result.box) )\n            result.codeResult && drawPath(result.line,ctx,{x:\"x\",y:\"y\"},\"#F00\")\n        });\n        Quagga.onDetected( (result) => onDetectedRef.current(result.codeResult.code) )\n    }, [])\n```", "en_text": "", "note_object": 62, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 66, "fields": {"posted_user": 1, "posted_time": "2020-07-03T09:28:07.744Z", "ja_text": "\n\n\u4ee5\u4e0a\u3067`Scanner`\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u3067\u304d\u305f\u3089\uff0c\u958b\u59cb\u3057\u305f\u3068\u304d\u3068\u8a8d\u8b58\u3057\u305f\u3068\u304d\u306b\u5b9f\u884c\u3059\u308b`onStarted, onDetected`\u95a2\u6570\u3092`useCallback`\u5185\u3067\u5b9a\u7fa9\u3059\u308c\u3070\uff0c`<Scanner {{...onStarted, onDetected}}/>`\u306e\u3088\u3046\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\uff0e\n\n\u307e\u305f\uff0cQuaggajs\u306f\u30ad\u30e3\u30f3\u30d0\u30b9\u306eDOM\u3092\u52dd\u624b\u306b\u4f5c\u6210\u3057\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u6b21\u306e\u69d8\u306aCSS\u3092\u5225\u3067\u7528\u610f\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\n\n```css\n#interactive.viewport canvas.drawingBuffer,\n#interactive.viewport canvas, video {\n  width:100%; height:auto; \n  position:absolute; top:0; left:0; \n  border-radius:2em 2em 0px;\n}\n```", "en_text": "", "note_object": 62, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 67, "fields": {"posted_user": 1, "posted_time": "2020-07-03T15:26:31.161Z", "ja_text": "```\nfunction targetTypings(out) {\n  return {\n    writeBundle () {\n      return fs.lstat(pkg.types).catch(() => {\n        return fs.writeFile(pkg.types, `export * from \"./${input}\"`)\n      })\n    }\n  }\n}\n\nexport default [\n    { input, output:{file:pkg.main   ,format:'cjs'}, external, plugins:[\n        babel( babelOption(true) ),\n        commonjs({extensions}),\n        resolve ({extensions}),\n        targetTypings(),\n    ]},\n    { input, output:{file:pkg.module ,format:'esm'}, external, plugins:[\n        babel( babelOption(false) ),\n        commonjs({extensions}),\n        resolve ({extensions}),\n        targetTypings(),\n    ] },\n]\n```", "en_text": "", "note_object": 58, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 68, "fields": {"posted_user": 1, "posted_time": "2020-07-10T16:07:29.386Z", "ja_text": "# React\u3067\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u3092\u4f7f\u3046\n\ncss in js\u3060\u3068\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea(`@media`)\u3067\u306e\u30b9\u30bf\u30a4\u30eb\u306e\u5834\u5408\u5206\u3051\u304c\u3067\u304d\u306a\u304f\u3066\uff0c`styled`\u3084`Radium`\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u307e\u3057\u305f\u304c\uff0chook\u3078\u306e\u5bfe\u5fdc\u304c\u9045\u304b\u3063\u305f\u308a\u5909\u306a\u30a8\u30e9\u30fc\u304c\u591a\u304b\u3063\u305f\u308a\u4e0d\u4fbf\u306a\u306e\u3067\uff0c\u304b\u308f\u308a\u3068\u3057\u3066\u81ea\u4f5chook\u306e[\u30e9\u30a4\u30d6\u30e9\u30ea](https://github.com/tseijp/use-grid)\u3092\u516c\u958b\u3057\u307e\u3057\u305f\uff0e\n\n[use-media](https://github.com/streamich/use-media)\u3068\u3044\u3046\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\uff0e", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 69, "fields": {"posted_user": 1, "posted_time": "2020-07-10T16:13:02.368Z", "ja_text": "# use-media\u306b\u3064\u3044\u3066\n\u5165\u529b\u3057\u305f\u5024\u3092\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066`useRef`\u306e\u4e2d\u306b\u5165\u308c\u307e\u3059\uff0e\n\u306f\u3058\u3081\u306b\uff0c\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u306e\u521d\u671f\u5024`mockMediaString`\u3068\uff0ccss in js\u3067\u8a18\u8ff0\u3057\u305f\u6587\u5b57\u5217\u3092\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u306e\u6587\u5b57\u5217\uff08\u4f8b\u3048\u3070`minWidth`\u304b\u3089`min-width`\uff09\u306b\u76f4\u3059`queryObjectToString`\u95a2\u6570\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e\n`const isMedium = useMedia({minWidth:500})`\u306e\u3088\u3046\u306b\u3064\u304b\u3048\u3070\uff0c\u6307\u5b9a\u3057\u305f\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u3092\u898b\u305f\u3044\u3066\u3044\u308b\u304b\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n```javascript\nimport {mockMediaString, queryObjectToString as qO2S, } from '../utils'\nexport function useMedia (rawQuery={}, defaultState=false) {\n    const query = useRef( qO2S(rawQuery) );\n    const [state, set] = useState(defaultState);\n    useEffect (()=>{\n        const media= typeof window===undefined? mockMediaString:window.matchMedia(query.current);\n        const onChange =()=> set(Boolean(media.matches))\n        state && (onChange(), media.addListener(onChange))\n        return () => media.removeListener(onChange)\n    }, [])\n    return state\n}\n```", "en_text": "", "note_object": 68, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 70, "fields": {"posted_user": 1, "posted_time": "2020-07-10T16:27:29.159Z", "ja_text": "# use-grid\u306b\u3064\u3044\u3066\n`use-media`\u3092\u5c11\u3057\u5909\u66f4\u3057\u3066\uff0c\u8907\u6570\u306e\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff0e\n`const fontSize = useGrid({xs:\"25px\", md:\"50px\", xl:\"75px\"})`\u306e\u3088\u3046\u306b\uff0c\u753b\u9762\u306e\u30b5\u30a4\u30ba\u306b\u3088\u3063\u3066\u5024\u306e\u5185\u5bb9\u3092\u5909\u5316\u3055\u305b\u3089\u308c\u307e\u3059\uff0e\n```\nimport {mockMediaString, queryPropsToList as qP2L } from '../utils'\nconst useGrid = (props) => {\n    const queries = useRef( qP2L(props) )\n    const [state, set] = useState(queries.current[0][1])\n    useEffect ( () => {\n        const medias = queries.current.map( ([query,value]) => {\n            const media = typeof window===\"undefined\"? mockMediaString:window.matchMedia(query)\n            const onChange =()=> Boolean(media.matches) && set(value)\n            state && (onChange(), media.addListener(onChange))\n            return {media, onChange}\n        })\n        return () => medias.map( ({media,onChange}) => media.removeListener(onChange) )\n    }, [] )\n    return state \n}\n```\n", "en_text": "", "note_object": 68, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 71, "fields": {"posted_user": 1, "posted_time": "2020-07-10T16:49:08.979Z", "ja_text": "# queryObjectToString\u306b\u3064\u3044\u3066\n\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u4f8b\u3048\u3070`{minWidth:1,maxWidth:969}`\uff09\u304b\u3089\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u95a2\u6570`queryObjectToString`\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\u4f8b\u3048\u3070\uff0c`minWidth`\u3092`min-width`\u306e\u3088\u3046\u306b\u5909\u63db\u3057\u307e\u3059\uff0e\n```javascript\nexport function queryObjectToString (query) {\n    if (typeof query === 'string') return query;\n    const toS = ([key, val]) => {\n        const feature = key.replace(/[A-Z]/g,s=>`-${s.toLowerCase()}`).toLowerCase();\n        const isN = typeof val==='number' && /[height|width]$/.test(feature)\n        if (typeof val==='boolean') return `${val?'':'not '}${feature}`;\n        return `(${feature}: ${val}${isN?'px':''})`;\n    }\n    return Object.entries(query).map(toS).join(' and ');\n}\n```\n", "en_text": "", "note_object": 68, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 72, "fields": {"posted_user": 1, "posted_time": "2020-07-10T17:19:53.769Z", "ja_text": "# queryPropsToList\u306b\u3064\u3044\u3066\n\"md\"(medium)\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u304b\u3089\u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n\u4f8b\u3048\u3070\uff0c`useGrid({xs:\"ham\",lg:\"egg\"})`\u5185\u3067\u5b9f\u884c\u3055\u308c\u308b`queryPropsToList([[\"xs\",\"ham\"],[\"lg\",\"egg\"]])`\u306f\uff0c`[[\"(min-width:1px) and (max-width:969px)\", \"ham\"],  [\"(min-width:970)\", \"egg\"]]`\u306e\u3088\u3046\u306b\u4e8c\u6b21\u914d\u5217\u306b\u5909\u63db\u3057\u3066\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\n```\nexport function queryPropsToList ( props ) {\n    const SIZE = [\"xs\",\"sm\",\"md\",\"lg\",\"xl\"]\n    const toN =(key)=> SIZE.find(s=>s===key)? {xs:1,sm:576,md:720,lg:960,xl:1140}[key] : 0\n    const toS =(key,next)=>`(min-width:${ toN(key) }px)${ next?` and (max-width:${toN(next)-1}px)`:'' }`\n    const getMedia = (props) => {\n        const grid = SIZE.map(s=>props.find(p=>p[0]===s)||null).filter((m)=>m!==null)\n        const xsGr = (grid.length)? grid.find(g=>g[0]===\"xs\")?[]:[[\"xs\",grid[0][1]]]: []\n        const noGr = (grid.length)? props.filter(p=>!SIZE.find(s=>s===p[0]))        : props\n        return [...noGr, ...[...xsGr,...grid].map((g,i)=>[toS(g[0],i<grid.length-1?grid[i+1][0]:null), g[1]])]\n    }\n    return getMedia( props.map( ([key,val]) => [queryObjectToString(key),val] ) )\n}\n```", "en_text": "", "note_object": 68, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 73, "fields": {"posted_user": 1, "posted_time": "2020-07-13T10:03:28.267Z", "ja_text": "# class-based vs functional\nclass X extends React.Component{...}\n  > \n  >> const X=(props)=>{...}\n\n* >> access to state? : Yes\n  > \n  >> Yes\n* >> lifecycle hooks ? : Yes\n  > \n  >> No\n* >> acess state via ?: `this.state`\n  > \n  >> `useState`\n* >> acess props via ?: `this.props`\n  > \n  >> `props`\n* >> when use which?: use lifecycle or state<=> other\n\nmore\n\n* >> init delays via?  : `componentDidMount`\n  > \n  >> `useEffect(()=>{...}, [])`\n* >> run delays via?  : `componentDidUpdate`\n  > \n  >> `useEffect(()=>{...},[...])`\n* >> clean up via?     : `commponentWillUnmount`\n  > \n  >> `useEffect(()=>{return()=>{...}}, [])`\n* >> optimize via?     : `shouldCommponentUpdate`\n  > \n  >> `useMemo` and `useCallback`\n", "en_text": "", "note_object": 49, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 74, "fields": {"posted_user": 1, "posted_time": "2020-07-19T16:04:31.055Z", "ja_text": "# \u5f15\u6570\u306b\u4ee3\u5165\u3059\u308b\u3068\u4fbf\u5229\n\nReact\u306eprops\u306a\u3069\uff0c\u5f15\u6570\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u578b\u304c\u7279\u5b9a\u3055\u308c\u305f\u308a\u3068\u30b3\u30fc\u30c9\u304c\u7e2e\u5c0f\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\uff0e\n\uff08Python\u3084JS\u306e\u5909\u6570\u3067\u4ee3\u5165\u3059\u308b\u3068\u53c2\u7167\u306e\u4ed6\u306e\u6240\u3067\u5024\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u5b89\u76f4\u306b\u4ee3\u5165\u3059\u308b\u306e\u306f\u5371\u967a\u3067\u3059\uff09\n\n\u305f\u3068\u3048\u3070\uff0c`useState`\u3067\u306f\u521d\u671f\u5024\u306e\u8a08\u7b97\u304c\u91cd\u3044\u5834\u5408\uff0c\u95a2\u6570\u3092\u5f15\u6570\u306b\u6307\u5b9a\u3055\u305b\u308b\u3053\u3068\u3067\uff0c\u6bce\u56de\u521d\u671f\u5024\u306e\u4f5c\u6210\u3092\u9632\u3044\u3067\u3044\u307e\u3059\uff0e\n\n`const [rows, setRows] = useState(() => createRows(props.count));`\n\n\u3053\u306euseState\u306e[\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](https://github.com/facebook/react/blob/c21c41ecfad46de0a718d059374e48d13cf08ced/packages/react-reconciler/src/ReactFiberHooks.js)\u3092\u307f\u308b\u3068\uff0c\u5f15\u6570\u306e\u578b\u306f`(()=>S)|S`\u3068\u3057\u3066\uff0c\u521d\u3081\u306b\u5f15\u6570\u81ea\u4f53\u306b\u95a2\u6570\u306e\u7d50\u679c\u3092\u4ee3\u5165\u3057\u3066\u3044\u307e\u3057\u305f\uff0e\n\n```typescript\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function')\n    initialState = initialState();    // \u5f15\u6570\u306b\u3082\u4ee3\u5165\u3067\u304d\u308b\uff01\n   /*...*/\n}\n```\n\n", "en_text": "", "note_object": null, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 75, "fields": {"posted_user": 1, "posted_time": "2020-07-19T16:26:05.914Z", "ja_text": "# React\u306echildren\u306b\u4fbf\u5229\nprops.children\u3067\u306f\u5b50\u8981\u7d20\u304c\u4e8c\u3064\u4ee5\u4e0a\u306e\u3068\u304d\u3060\u3051\u914d\u5217\u306b\u306a\u308a\u307e\u3059\uff0e\u306a\u306e\u3067\u5b50\u8981\u7d20\u304c\u306a\u304b\u3063\u305f\u308a\u4e00\u3064\u3060\u3063\u305f\u308a\u3059\u308b\u3068\u304d\u306f\u914d\u5217\u3067\u306f\u306a\u3044\u306e\u3067\uff0c`children.length`\u3084`children.map`\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u6b21\u306e\u3088\u3046\u306b`children`\u3092\u5148\u306b\u914d\u5217\u306b\u76f4\u3059\u3068\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u305f\u308a\u3067\u304d\u307e\u3059\uff0e\n```javascript\nimport React, {Children} from 'react';\nconst App = ({children}) => {\n    children = Children.toArray(children)\n    return children.filter(c=>c)         // \u30a8\u30e9\u30fc\u51fa\u306a\u3044\uff01\n} \n```", "en_text": "", "note_object": 74, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 76, "fields": {"posted_user": 1, "posted_time": "2020-07-19T16:36:47.350Z", "ja_text": "# \u518d\u5e30\u5316\u3055\u305b\u308b\u306e\u306b\u4fbf\u5229\n\u5b6b\u8981\u7d20\u306b\u81ea\u8eab\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\uff0c\u81ea\u4f5c\u3057\u305f\u6a5f\u80fd\u3092\u5b50\u8981\u7d20\u3059\u3079\u3066\u306b\u4f5c\u7528\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u6b21\u306e\u3088\u3046\u306bchildren\u3092\u5909\u66f4\u3059\u308c\u3070\uff0c\u5b6b\u8981\u7d20\u304c\u8907\u6570\u306e\u3068\u304d\u3060\u3051\u518d\u5e30\u7684\u306b\u6a5f\u80fd\u3092\u4e0e\u3048\u3089\u308c\u307e\u3059\uff0e\uff08\u3053\u306eReds\u3067\u56f2\u3080\u3068\uff0c\u3059\u3079\u3066\u306e\u5b50\u8981\u7d20\u304c\u8d64\u304f\u306a\u308a\u307e\u3059\uff0e\uff09\n```\nimport React, {Children, cloneElement} from 'react'\nconst Reds = ({children}) => {\n    children = Children.map( children, (child, key) => {\n        const grand = Children.toArray( child.props.children ) || []\n        return grand.length > 1\n          ? cloneElement(child, {children:grand[0], grand:\n                <Reds> {grand.slice(0)} </Reds>\n            })\n          : child\n    }\n    const style = {background:\"red\"}\n    return <div {...{style, children}} />\n}}\n```", "en_text": "", "note_object": 74, "tags_object": [], "like_object": []}}, {"model": "backend.notemodel", "pk": 77, "fields": {"posted_user": 1, "posted_time": "2020-07-26T16:40:41.319Z", "ja_text": "# npm\u3067\u516c\u958b\n\n- \u30c7\u30e2\u30da\u30fc\u30b8\u304c\u3067\u304d\u305f\u3089\uff0c`npm run build`\n- \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3067\u304d\u305f\u3089\uff0c`npm run compile`\n- `.npmignore`\u3092\u4f5c\u6210\u3057, rollup\u3067\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3068README.md\u4ee5\u5916\u3092\u6307\u5b9a\u3059\u308b.\n- `npm publish`\u3067\u516c\u958b\n```\n.git\n.gitignore\nbuild\ndocs\nnode_modules\npublic\nscripts\n```", "en_text": "", "note_object": 58, "tags_object": [], "like_object": []}}]